{
  "openapi": "3.0.1",
  "info": {
    "title": "Web Api",
    "contact": { },
    "license": { },
    "version": "1.0"
  },
  "paths": {
    "/api/services/app/Account/IsTenantAvailable": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "accountIsTenantAvailable",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/IsTenantAvailableInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IsTenantAvailableInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IsTenantAvailableInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IsTenantAvailableInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IsTenantAvailableOutputAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Account/Register": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "accountRegister",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterOutputAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/AccountTransfer/Get": {
      "get": {
        "tags": [
          "AccountTransfer"
        ],
        "operationId": "accountTransferGet",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountTransferGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/AccountTransfer/UpdateGql": {
      "put": {
        "tags": [
          "AccountTransfer"
        ],
        "summary": "Update entity data. \r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "accountTransferUpdateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AccountTransferGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountTransferGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountTransferGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AccountTransferGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountTransferGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/AccountTransfer/Update": {
      "put": {
        "tags": [
          "AccountTransfer"
        ],
        "operationId": "accountTransferUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AccountTransferGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountTransferGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountTransferGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AccountTransferGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountTransferGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/AccountTransfer/CreateGql": {
      "post": {
        "tags": [
          "AccountTransfer"
        ],
        "summary": "Create entity.\r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "accountTransferCreateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AccountTransferGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountTransferGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountTransferGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AccountTransferGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountTransferGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/AccountTransfer/Create": {
      "post": {
        "tags": [
          "AccountTransfer"
        ],
        "operationId": "accountTransferCreate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AccountTransferGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountTransferGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountTransferGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AccountTransferGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountTransferGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/AccountTransfer/GetAll": {
      "get": {
        "tags": [
          "AccountTransfer"
        ],
        "operationId": "accountTransferGetAll",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountTransferGuidDynamicDtoPagedResultDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/AccountTransfer/Query": {
      "get": {
        "tags": [
          "AccountTransfer"
        ],
        "summary": "Query entity data. \r\nNOTE: don't use on prod, will be merged with the `Get`endpoint soon",
        "operationId": "accountTransferQuery",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountTransferGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/AccountTransfer/QueryAll": {
      "get": {
        "tags": [
          "AccountTransfer"
        ],
        "summary": "Query entities list\r\nNOTE: don't use on prod, will be merged with the GetAll endpoint soon",
        "operationId": "accountTransferQueryAll",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `items[]` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountTransferPagedResultDtoGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/AccountTransfer/Delete": {
      "delete": {
        "tags": [
          "AccountTransfer"
        ],
        "operationId": "accountTransferDelete",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/Epm/AllowableChildComponentType/Get": {
      "get": {
        "tags": [
          "AllowableChildComponentType"
        ],
        "operationId": "allowableChildComponentTypeGet",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllowableChildComponentTypeGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Epm/AllowableChildComponentType/UpdateGql": {
      "put": {
        "tags": [
          "AllowableChildComponentType"
        ],
        "summary": "Update entity data. \r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "allowableChildComponentTypeUpdateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AllowableChildComponentTypeGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AllowableChildComponentTypeGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AllowableChildComponentTypeGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AllowableChildComponentTypeGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllowableChildComponentTypeGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Epm/AllowableChildComponentType/Update": {
      "put": {
        "tags": [
          "AllowableChildComponentType"
        ],
        "operationId": "allowableChildComponentTypeUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AllowableChildComponentTypeGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AllowableChildComponentTypeGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AllowableChildComponentTypeGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AllowableChildComponentTypeGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllowableChildComponentTypeGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Epm/AllowableChildComponentType/CreateGql": {
      "post": {
        "tags": [
          "AllowableChildComponentType"
        ],
        "summary": "Create entity.\r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "allowableChildComponentTypeCreateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AllowableChildComponentTypeGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AllowableChildComponentTypeGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AllowableChildComponentTypeGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AllowableChildComponentTypeGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllowableChildComponentTypeGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Epm/AllowableChildComponentType/Create": {
      "post": {
        "tags": [
          "AllowableChildComponentType"
        ],
        "operationId": "allowableChildComponentTypeCreate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AllowableChildComponentTypeGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AllowableChildComponentTypeGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AllowableChildComponentTypeGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AllowableChildComponentTypeGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllowableChildComponentTypeGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Epm/AllowableChildComponentType/GetAll": {
      "get": {
        "tags": [
          "AllowableChildComponentType"
        ],
        "operationId": "allowableChildComponentTypeGetAll",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllowableChildComponentTypeGuidDynamicDtoPagedResultDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Epm/AllowableChildComponentType/Query": {
      "get": {
        "tags": [
          "AllowableChildComponentType"
        ],
        "summary": "Query entity data. \r\nNOTE: don't use on prod, will be merged with the `Get`endpoint soon",
        "operationId": "allowableChildComponentTypeQuery",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllowableChildComponentTypeGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Epm/AllowableChildComponentType/QueryAll": {
      "get": {
        "tags": [
          "AllowableChildComponentType"
        ],
        "summary": "Query entities list\r\nNOTE: don't use on prod, will be merged with the GetAll endpoint soon",
        "operationId": "allowableChildComponentTypeQueryAll",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `items[]` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllowableChildComponentTypePagedResultDtoGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Epm/AllowableChildComponentType/Delete": {
      "delete": {
        "tags": [
          "AllowableChildComponentType"
        ],
        "operationId": "allowableChildComponentTypeDelete",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Area/Autocomplete": {
      "get": {
        "tags": [
          "Area"
        ],
        "operationId": "areaAutocomplete",
        "parameters": [
          {
            "name": "term",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "areaType",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/RefListAreaType"
            }
          },
          {
            "name": "parentAreaId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutocompleteItemDtoListAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Area/CascadeSelect": {
      "get": {
        "tags": [
          "Area"
        ],
        "operationId": "areaCascadeSelect",
        "parameters": [
          {
            "name": "areaType",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/RefListAreaType"
            }
          },
          {
            "name": "parentAreaId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutocompleteItemDtoListAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Area/Update": {
      "put": {
        "tags": [
          "Area"
        ],
        "operationId": "areaUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AreaUpdateDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AreaUpdateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AreaUpdateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AreaUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AreaDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Area/Get": {
      "get": {
        "tags": [
          "Area"
        ],
        "operationId": "areaGet",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AreaDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Area/GetChildTreeItems": {
      "post": {
        "tags": [
          "Area"
        ],
        "summary": "Returns child areas of the specified parent",
        "operationId": "areaGetChildTreeItems",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GetChildAreasInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetChildAreasInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GetChildAreasInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GetChildAreasInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AreaTreeItemDtoListAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Area/GetTreeItem": {
      "post": {
        "tags": [
          "Area"
        ],
        "summary": "Returns child areas of the specified parent",
        "operationId": "areaGetTreeItem",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GuidEntityDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GuidEntityDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GuidEntityDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GuidEntityDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AreaTreeItemDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Area/Delete": {
      "post": {
        "tags": [
          "Area"
        ],
        "operationId": "areaDelete",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GuidEntityDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GuidEntityDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GuidEntityDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GuidEntityDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Area/MoveArea": {
      "post": {
        "tags": [
          "Area"
        ],
        "summary": "Moves Area to a new parent",
        "operationId": "areaMoveArea",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MoveAreaInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MoveAreaInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MoveAreaInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MoveAreaInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Area/Create": {
      "post": {
        "tags": [
          "Area"
        ],
        "operationId": "areaCreate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AreaCreateDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AreaCreateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AreaCreateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AreaCreateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AreaDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Area/GetAll": {
      "get": {
        "tags": [
          "Area"
        ],
        "operationId": "areaGetAll",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AreaDtoPagedResultDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Area/Query": {
      "get": {
        "tags": [
          "Area"
        ],
        "summary": "Query entity data. \r\nNOTE: don't use on prod, will be merged with the `Get`endpoint soon",
        "operationId": "areaQuery",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AreaGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Area/QueryAll": {
      "get": {
        "tags": [
          "Area"
        ],
        "summary": "Query entities list\r\nNOTE: don't use on prod, will be merged with the GetAll endpoint soon",
        "operationId": "areaQueryAll",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `items[]` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AreaPagedResultDtoGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/AuthorizationSettings/UpdateSettings": {
      "put": {
        "tags": [
          "AuthorizationSettings"
        ],
        "operationId": "authorizationSettingsUpdateSettings",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorizationSettingsDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorizationSettingsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorizationSettingsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorizationSettingsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/AuthorizationSettings/GetSettings": {
      "get": {
        "tags": [
          "AuthorizationSettings"
        ],
        "operationId": "authorizationSettingsGetSettings",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationSettingsDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/BankAccount/Get": {
      "get": {
        "tags": [
          "BankAccount"
        ],
        "operationId": "bankAccountGet",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankAccountGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/BankAccount/UpdateGql": {
      "put": {
        "tags": [
          "BankAccount"
        ],
        "summary": "Update entity data. \r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "bankAccountUpdateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/BankAccountGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BankAccountGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BankAccountGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BankAccountGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankAccountGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/BankAccount/Update": {
      "put": {
        "tags": [
          "BankAccount"
        ],
        "operationId": "bankAccountUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/BankAccountGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BankAccountGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BankAccountGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BankAccountGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankAccountGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/BankAccount/CreateGql": {
      "post": {
        "tags": [
          "BankAccount"
        ],
        "summary": "Create entity.\r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "bankAccountCreateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/BankAccountGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BankAccountGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BankAccountGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BankAccountGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankAccountGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/BankAccount/Create": {
      "post": {
        "tags": [
          "BankAccount"
        ],
        "operationId": "bankAccountCreate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/BankAccountGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BankAccountGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BankAccountGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BankAccountGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankAccountGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/BankAccount/GetAll": {
      "get": {
        "tags": [
          "BankAccount"
        ],
        "operationId": "bankAccountGetAll",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankAccountGuidDynamicDtoPagedResultDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/BankAccount/Query": {
      "get": {
        "tags": [
          "BankAccount"
        ],
        "summary": "Query entity data. \r\nNOTE: don't use on prod, will be merged with the `Get`endpoint soon",
        "operationId": "bankAccountQuery",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankAccountGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/BankAccount/QueryAll": {
      "get": {
        "tags": [
          "BankAccount"
        ],
        "summary": "Query entities list\r\nNOTE: don't use on prod, will be merged with the GetAll endpoint soon",
        "operationId": "bankAccountQueryAll",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `items[]` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankAccountPagedResultDtoGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/BankAccount/Delete": {
      "delete": {
        "tags": [
          "BankAccount"
        ],
        "operationId": "bankAccountDelete",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/Enterprise/BankTransaction/Get": {
      "get": {
        "tags": [
          "BankTransaction"
        ],
        "operationId": "bankTransactionGet",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankTransactionGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/BankTransaction/UpdateGql": {
      "put": {
        "tags": [
          "BankTransaction"
        ],
        "summary": "Update entity data. \r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "bankTransactionUpdateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/BankTransactionGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BankTransactionGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BankTransactionGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BankTransactionGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankTransactionGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/BankTransaction/Update": {
      "put": {
        "tags": [
          "BankTransaction"
        ],
        "operationId": "bankTransactionUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/BankTransactionGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BankTransactionGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BankTransactionGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BankTransactionGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankTransactionGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/BankTransaction/CreateGql": {
      "post": {
        "tags": [
          "BankTransaction"
        ],
        "summary": "Create entity.\r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "bankTransactionCreateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/BankTransactionGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BankTransactionGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BankTransactionGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BankTransactionGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankTransactionGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/BankTransaction/Create": {
      "post": {
        "tags": [
          "BankTransaction"
        ],
        "operationId": "bankTransactionCreate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/BankTransactionGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BankTransactionGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BankTransactionGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BankTransactionGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankTransactionGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/BankTransaction/GetAll": {
      "get": {
        "tags": [
          "BankTransaction"
        ],
        "operationId": "bankTransactionGetAll",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankTransactionGuidDynamicDtoPagedResultDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/BankTransaction/Query": {
      "get": {
        "tags": [
          "BankTransaction"
        ],
        "summary": "Query entity data. \r\nNOTE: don't use on prod, will be merged with the `Get`endpoint soon",
        "operationId": "bankTransactionQuery",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankTransactionGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/BankTransaction/QueryAll": {
      "get": {
        "tags": [
          "BankTransaction"
        ],
        "summary": "Query entities list\r\nNOTE: don't use on prod, will be merged with the GetAll endpoint soon",
        "operationId": "bankTransactionQueryAll",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `items[]` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankTransactionPagedResultDtoGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/BankTransaction/Delete": {
      "delete": {
        "tags": [
          "BankTransaction"
        ],
        "operationId": "bankTransactionDelete",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/checkList/{id}/selection": {
      "get": {
        "tags": [
          "CheckList"
        ],
        "summary": "Get user selection",
        "operationId": "checkListGetSelection",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Check list Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "ownerType",
            "in": "query",
            "description": "Owner entity type short alias",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ownerId",
            "in": "query",
            "description": "Owner entity Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckListItemSelectionDtoListAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "CheckList"
        ],
        "summary": "Save user selection",
        "operationId": "checkListSaveSelection",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SaveSelectionInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveSelectionInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveSelectionInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SaveSelectionInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/checkList/{id}/tree": {
      "get": {
        "tags": [
          "CheckList"
        ],
        "summary": "Get check list tree",
        "operationId": "checkListGetCheckListTree",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckListModelAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/CheckList/GetAll": {
      "get": {
        "tags": [
          "CheckList"
        ],
        "operationId": "checkListGetAll",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckListDtoPagedResultDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/CheckList/Query": {
      "get": {
        "tags": [
          "CheckList"
        ],
        "summary": "Query entity data. \r\nNOTE: don't use on prod, will be merged with the `Get`endpoint soon",
        "operationId": "checkListQuery",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckListGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/CheckList/QueryAll": {
      "get": {
        "tags": [
          "CheckList"
        ],
        "summary": "Query entities list\r\nNOTE: don't use on prod, will be merged with the GetAll endpoint soon",
        "operationId": "checkListQueryAll",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `items[]` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckListPagedResultDtoGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/CheckList/Get": {
      "get": {
        "tags": [
          "CheckList"
        ],
        "operationId": "checkListGet",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckListDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/CheckList/Create": {
      "post": {
        "tags": [
          "CheckList"
        ],
        "operationId": "checkListCreate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CheckListDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CheckListDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CheckListDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CheckListDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckListDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/CheckList/Update": {
      "put": {
        "tags": [
          "CheckList"
        ],
        "operationId": "checkListUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CheckListDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CheckListDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CheckListDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CheckListDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckListDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/CheckList/Delete": {
      "delete": {
        "tags": [
          "CheckList"
        ],
        "operationId": "checkListDelete",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/Enterprise/CheckListItem/GetTreeItem": {
      "post": {
        "tags": [
          "CheckListItem"
        ],
        "summary": "Returns child areas of the specified parent",
        "operationId": "checkListItemGetTreeItem",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GuidEntityDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GuidEntityDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GuidEntityDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GuidEntityDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckListTreeItemDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/CheckListItem/GetChildTreeItems": {
      "post": {
        "tags": [
          "CheckListItem"
        ],
        "summary": "Returns child items of the specified parent",
        "operationId": "checkListItemGetChildTreeItems",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GetChildCheckListItemsInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetChildCheckListItemsInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GetChildCheckListItemsInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GetChildCheckListItemsInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckListTreeItemDtoListAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/CheckListItem/UpdateChildItems": {
      "post": {
        "tags": [
          "CheckListItem"
        ],
        "summary": "Moves Area to a new parent",
        "operationId": "checkListItemUpdateChildItems",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateChildItemsInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateChildItemsInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateChildItemsInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateChildItemsInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/Enterprise/CheckListItem/Delete": {
      "delete": {
        "tags": [
          "CheckListItem"
        ],
        "operationId": "checkListItemDelete",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/Enterprise/CheckListItem/GetAll": {
      "get": {
        "tags": [
          "CheckListItem"
        ],
        "operationId": "checkListItemGetAll",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckListItemDtoPagedResultDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/CheckListItem/Query": {
      "get": {
        "tags": [
          "CheckListItem"
        ],
        "summary": "Query entity data. \r\nNOTE: don't use on prod, will be merged with the `Get`endpoint soon",
        "operationId": "checkListItemQuery",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckListItemGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/CheckListItem/QueryAll": {
      "get": {
        "tags": [
          "CheckListItem"
        ],
        "summary": "Query entities list\r\nNOTE: don't use on prod, will be merged with the GetAll endpoint soon",
        "operationId": "checkListItemQueryAll",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `items[]` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckListItemPagedResultDtoGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/CheckListItem/Get": {
      "get": {
        "tags": [
          "CheckListItem"
        ],
        "operationId": "checkListItemGet",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckListItemDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/CheckListItem/Create": {
      "post": {
        "tags": [
          "CheckListItem"
        ],
        "operationId": "checkListItemCreate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CheckListItemDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CheckListItemDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CheckListItemDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CheckListItemDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckListItemDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/CheckListItem/Update": {
      "put": {
        "tags": [
          "CheckListItem"
        ],
        "operationId": "checkListItemUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CheckListItemDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CheckListItemDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CheckListItemDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CheckListItemDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckListItemDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/CheckListItemSelection/Get": {
      "get": {
        "tags": [
          "CheckListItemSelection"
        ],
        "operationId": "checkListItemSelectionGet",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckListItemSelectionGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/CheckListItemSelection/UpdateGql": {
      "put": {
        "tags": [
          "CheckListItemSelection"
        ],
        "summary": "Update entity data. \r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "checkListItemSelectionUpdateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CheckListItemSelectionGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CheckListItemSelectionGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CheckListItemSelectionGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CheckListItemSelectionGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckListItemSelectionGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/CheckListItemSelection/Update": {
      "put": {
        "tags": [
          "CheckListItemSelection"
        ],
        "operationId": "checkListItemSelectionUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CheckListItemSelectionGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CheckListItemSelectionGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CheckListItemSelectionGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CheckListItemSelectionGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckListItemSelectionGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/CheckListItemSelection/CreateGql": {
      "post": {
        "tags": [
          "CheckListItemSelection"
        ],
        "summary": "Create entity.\r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "checkListItemSelectionCreateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CheckListItemSelectionGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CheckListItemSelectionGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CheckListItemSelectionGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CheckListItemSelectionGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckListItemSelectionGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/CheckListItemSelection/Create": {
      "post": {
        "tags": [
          "CheckListItemSelection"
        ],
        "operationId": "checkListItemSelectionCreate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CheckListItemSelectionGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CheckListItemSelectionGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CheckListItemSelectionGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CheckListItemSelectionGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckListItemSelectionGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/CheckListItemSelection/GetAll": {
      "get": {
        "tags": [
          "CheckListItemSelection"
        ],
        "operationId": "checkListItemSelectionGetAll",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckListItemSelectionGuidDynamicDtoPagedResultDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/CheckListItemSelection/Query": {
      "get": {
        "tags": [
          "CheckListItemSelection"
        ],
        "summary": "Query entity data. \r\nNOTE: don't use on prod, will be merged with the `Get`endpoint soon",
        "operationId": "checkListItemSelectionQuery",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckListItemSelectionGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/CheckListItemSelection/QueryAll": {
      "get": {
        "tags": [
          "CheckListItemSelection"
        ],
        "summary": "Query entities list\r\nNOTE: don't use on prod, will be merged with the GetAll endpoint soon",
        "operationId": "checkListItemSelectionQueryAll",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `items[]` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckListItemSelectionPagedResultDtoGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/CheckListItemSelection/Delete": {
      "delete": {
        "tags": [
          "CheckListItemSelection"
        ],
        "operationId": "checkListItemSelectionDelete",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/Enterprise/CheckListTreeItem/Get": {
      "get": {
        "tags": [
          "CheckListTreeItem"
        ],
        "operationId": "checkListTreeItemGet",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckListTreeItemGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/CheckListTreeItem/UpdateGql": {
      "put": {
        "tags": [
          "CheckListTreeItem"
        ],
        "summary": "Update entity data. \r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "checkListTreeItemUpdateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CheckListTreeItemGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CheckListTreeItemGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CheckListTreeItemGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CheckListTreeItemGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckListTreeItemGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/CheckListTreeItem/Update": {
      "put": {
        "tags": [
          "CheckListTreeItem"
        ],
        "operationId": "checkListTreeItemUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CheckListTreeItemGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CheckListTreeItemGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CheckListTreeItemGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CheckListTreeItemGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckListTreeItemGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/CheckListTreeItem/CreateGql": {
      "post": {
        "tags": [
          "CheckListTreeItem"
        ],
        "summary": "Create entity.\r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "checkListTreeItemCreateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CheckListTreeItemGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CheckListTreeItemGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CheckListTreeItemGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CheckListTreeItemGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckListTreeItemGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/CheckListTreeItem/Create": {
      "post": {
        "tags": [
          "CheckListTreeItem"
        ],
        "operationId": "checkListTreeItemCreate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CheckListTreeItemGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CheckListTreeItemGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CheckListTreeItemGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CheckListTreeItemGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckListTreeItemGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/CheckListTreeItem/GetAll": {
      "get": {
        "tags": [
          "CheckListTreeItem"
        ],
        "operationId": "checkListTreeItemGetAll",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckListTreeItemGuidDynamicDtoPagedResultDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/CheckListTreeItem/Query": {
      "get": {
        "tags": [
          "CheckListTreeItem"
        ],
        "summary": "Query entity data. \r\nNOTE: don't use on prod, will be merged with the `Get`endpoint soon",
        "operationId": "checkListTreeItemQuery",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckListTreeItemGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/CheckListTreeItem/QueryAll": {
      "get": {
        "tags": [
          "CheckListTreeItem"
        ],
        "summary": "Query entities list\r\nNOTE: don't use on prod, will be merged with the GetAll endpoint soon",
        "operationId": "checkListTreeItemQueryAll",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `items[]` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckListTreeItemPagedResultDtoGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/CheckListTreeItem/Delete": {
      "delete": {
        "tags": [
          "CheckListTreeItem"
        ],
        "operationId": "checkListTreeItemDelete",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/Epm/Component/Get": {
      "get": {
        "tags": [
          "Component"
        ],
        "operationId": "componentGet",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComponentGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Epm/Component/UpdateGql": {
      "put": {
        "tags": [
          "Component"
        ],
        "summary": "Update entity data. \r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "componentUpdateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ComponentGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ComponentGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ComponentGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ComponentGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComponentGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Epm/Component/Update": {
      "put": {
        "tags": [
          "Component"
        ],
        "operationId": "componentUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ComponentGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ComponentGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ComponentGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ComponentGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComponentGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Epm/Component/CreateGql": {
      "post": {
        "tags": [
          "Component"
        ],
        "summary": "Create entity.\r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "componentCreateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ComponentGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ComponentGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ComponentGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ComponentGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComponentGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Epm/Component/Create": {
      "post": {
        "tags": [
          "Component"
        ],
        "operationId": "componentCreate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ComponentGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ComponentGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ComponentGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ComponentGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComponentGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Epm/Component/GetAll": {
      "get": {
        "tags": [
          "Component"
        ],
        "operationId": "componentGetAll",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComponentGuidDynamicDtoPagedResultDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Epm/Component/Query": {
      "get": {
        "tags": [
          "Component"
        ],
        "summary": "Query entity data. \r\nNOTE: don't use on prod, will be merged with the `Get`endpoint soon",
        "operationId": "componentQuery",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComponentGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Epm/Component/QueryAll": {
      "get": {
        "tags": [
          "Component"
        ],
        "summary": "Query entities list\r\nNOTE: don't use on prod, will be merged with the GetAll endpoint soon",
        "operationId": "componentQueryAll",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `items[]` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComponentPagedResultDtoGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Epm/Component/Delete": {
      "delete": {
        "tags": [
          "Component"
        ],
        "operationId": "componentDelete",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/Epm/ComponentProgressReport/Get": {
      "get": {
        "tags": [
          "ComponentProgressReport"
        ],
        "operationId": "componentProgressReportGet",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComponentProgressReportGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Epm/ComponentProgressReport/UpdateGql": {
      "put": {
        "tags": [
          "ComponentProgressReport"
        ],
        "summary": "Update entity data. \r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "componentProgressReportUpdateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ComponentProgressReportGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ComponentProgressReportGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ComponentProgressReportGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ComponentProgressReportGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComponentProgressReportGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Epm/ComponentProgressReport/Update": {
      "put": {
        "tags": [
          "ComponentProgressReport"
        ],
        "operationId": "componentProgressReportUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ComponentProgressReportGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ComponentProgressReportGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ComponentProgressReportGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ComponentProgressReportGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComponentProgressReportGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Epm/ComponentProgressReport/CreateGql": {
      "post": {
        "tags": [
          "ComponentProgressReport"
        ],
        "summary": "Create entity.\r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "componentProgressReportCreateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ComponentProgressReportGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ComponentProgressReportGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ComponentProgressReportGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ComponentProgressReportGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComponentProgressReportGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Epm/ComponentProgressReport/Create": {
      "post": {
        "tags": [
          "ComponentProgressReport"
        ],
        "operationId": "componentProgressReportCreate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ComponentProgressReportGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ComponentProgressReportGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ComponentProgressReportGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ComponentProgressReportGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComponentProgressReportGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Epm/ComponentProgressReport/GetAll": {
      "get": {
        "tags": [
          "ComponentProgressReport"
        ],
        "operationId": "componentProgressReportGetAll",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComponentProgressReportGuidDynamicDtoPagedResultDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Epm/ComponentProgressReport/Query": {
      "get": {
        "tags": [
          "ComponentProgressReport"
        ],
        "summary": "Query entity data. \r\nNOTE: don't use on prod, will be merged with the `Get`endpoint soon",
        "operationId": "componentProgressReportQuery",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComponentProgressReportGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Epm/ComponentProgressReport/QueryAll": {
      "get": {
        "tags": [
          "ComponentProgressReport"
        ],
        "summary": "Query entities list\r\nNOTE: don't use on prod, will be merged with the GetAll endpoint soon",
        "operationId": "componentProgressReportQueryAll",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `items[]` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComponentProgressReportPagedResultDtoGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Epm/ComponentProgressReport/Delete": {
      "delete": {
        "tags": [
          "ComponentProgressReport"
        ],
        "operationId": "componentProgressReportDelete",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/Epm/ComponentType/Get": {
      "get": {
        "tags": [
          "ComponentType"
        ],
        "operationId": "componentTypeGet",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComponentTypeGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Epm/ComponentType/UpdateGql": {
      "put": {
        "tags": [
          "ComponentType"
        ],
        "summary": "Update entity data. \r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "componentTypeUpdateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ComponentTypeGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ComponentTypeGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ComponentTypeGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ComponentTypeGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComponentTypeGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Epm/ComponentType/Update": {
      "put": {
        "tags": [
          "ComponentType"
        ],
        "operationId": "componentTypeUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ComponentTypeGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ComponentTypeGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ComponentTypeGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ComponentTypeGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComponentTypeGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Epm/ComponentType/CreateGql": {
      "post": {
        "tags": [
          "ComponentType"
        ],
        "summary": "Create entity.\r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "componentTypeCreateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ComponentTypeGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ComponentTypeGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ComponentTypeGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ComponentTypeGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComponentTypeGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Epm/ComponentType/Create": {
      "post": {
        "tags": [
          "ComponentType"
        ],
        "operationId": "componentTypeCreate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ComponentTypeGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ComponentTypeGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ComponentTypeGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ComponentTypeGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComponentTypeGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Epm/ComponentType/GetAll": {
      "get": {
        "tags": [
          "ComponentType"
        ],
        "operationId": "componentTypeGetAll",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComponentTypeGuidDynamicDtoPagedResultDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Epm/ComponentType/Query": {
      "get": {
        "tags": [
          "ComponentType"
        ],
        "summary": "Query entity data. \r\nNOTE: don't use on prod, will be merged with the `Get`endpoint soon",
        "operationId": "componentTypeQuery",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComponentTypeGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Epm/ComponentType/QueryAll": {
      "get": {
        "tags": [
          "ComponentType"
        ],
        "summary": "Query entities list\r\nNOTE: don't use on prod, will be merged with the GetAll endpoint soon",
        "operationId": "componentTypeQueryAll",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `items[]` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComponentTypePagedResultDtoGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Epm/ComponentType/Delete": {
      "delete": {
        "tags": [
          "ComponentType"
        ],
        "operationId": "componentTypeDelete",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/ConfigurableComponents/{id}": {
      "get": {
        "tags": [
          "ConfigurableComponent"
        ],
        "operationId": "configurableComponentGet",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigurableComponentDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/ConfigurableComponents": {
      "put": {
        "tags": [
          "ConfigurableComponent"
        ],
        "operationId": "configurableComponentUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigurableComponentDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigurableComponentDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigurableComponentDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigurableComponentDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigurableComponentDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ConfigurableComponent"
        ],
        "operationId": "configurableComponentCreate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigurableComponentDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigurableComponentDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigurableComponentDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigurableComponentDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigurableComponentDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/ConfigurableComponents/{id}/Settings": {
      "put": {
        "tags": [
          "ConfigurableComponent"
        ],
        "operationId": "configurableComponentUpdateSettings",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigurableComponentUpdateSettingsInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigurableComponentUpdateSettingsInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigurableComponentUpdateSettingsInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigurableComponentUpdateSettingsInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/Shesha/ConfigurationItem/Get": {
      "get": {
        "tags": [
          "ConfigurationItem"
        ],
        "operationId": "configurationItemGet",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigurationItemGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Shesha/ConfigurationItem/UpdateGql": {
      "put": {
        "tags": [
          "ConfigurationItem"
        ],
        "summary": "Update entity data. \r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "configurationItemUpdateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigurationItemGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigurationItemGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigurationItemGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigurationItemGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigurationItemGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Shesha/ConfigurationItem/Update": {
      "put": {
        "tags": [
          "ConfigurationItem"
        ],
        "operationId": "configurationItemUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigurationItemGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigurationItemGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigurationItemGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigurationItemGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigurationItemGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Shesha/ConfigurationItem/CreateGql": {
      "post": {
        "tags": [
          "ConfigurationItem"
        ],
        "summary": "Create entity.\r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "configurationItemCreateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigurationItemGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigurationItemGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigurationItemGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigurationItemGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigurationItemGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Shesha/ConfigurationItem/Create": {
      "post": {
        "tags": [
          "ConfigurationItem"
        ],
        "operationId": "configurationItemCreate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigurationItemGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigurationItemGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigurationItemGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigurationItemGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigurationItemGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Shesha/ConfigurationItem/GetAll": {
      "get": {
        "tags": [
          "ConfigurationItem"
        ],
        "operationId": "configurationItemGetAll",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigurationItemGuidDynamicDtoPagedResultDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Shesha/ConfigurationItem/Query": {
      "get": {
        "tags": [
          "ConfigurationItem"
        ],
        "summary": "Query entity data. \r\nNOTE: don't use on prod, will be merged with the `Get`endpoint soon",
        "operationId": "configurationItemQuery",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigurationItemGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Shesha/ConfigurationItem/QueryAll": {
      "get": {
        "tags": [
          "ConfigurationItem"
        ],
        "summary": "Query entities list\r\nNOTE: don't use on prod, will be merged with the GetAll endpoint soon",
        "operationId": "configurationItemQueryAll",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `items[]` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigurationItemPagedResultDtoGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Shesha/ConfigurationItem/Delete": {
      "delete": {
        "tags": [
          "ConfigurationItem"
        ],
        "operationId": "configurationItemDelete",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/Enterprise/Contract/Get": {
      "get": {
        "tags": [
          "Contract"
        ],
        "operationId": "contractGet",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/Contract/UpdateGql": {
      "put": {
        "tags": [
          "Contract"
        ],
        "summary": "Update entity data. \r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "contractUpdateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ContractGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContractGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ContractGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ContractGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/Contract/Update": {
      "put": {
        "tags": [
          "Contract"
        ],
        "operationId": "contractUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ContractGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContractGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ContractGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ContractGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/Contract/CreateGql": {
      "post": {
        "tags": [
          "Contract"
        ],
        "summary": "Create entity.\r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "contractCreateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ContractGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContractGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ContractGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ContractGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/Contract/Create": {
      "post": {
        "tags": [
          "Contract"
        ],
        "operationId": "contractCreate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ContractGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContractGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ContractGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ContractGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/Contract/GetAll": {
      "get": {
        "tags": [
          "Contract"
        ],
        "operationId": "contractGetAll",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractGuidDynamicDtoPagedResultDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/Contract/Query": {
      "get": {
        "tags": [
          "Contract"
        ],
        "summary": "Query entity data. \r\nNOTE: don't use on prod, will be merged with the `Get`endpoint soon",
        "operationId": "contractQuery",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/Contract/QueryAll": {
      "get": {
        "tags": [
          "Contract"
        ],
        "summary": "Query entities list\r\nNOTE: don't use on prod, will be merged with the GetAll endpoint soon",
        "operationId": "contractQueryAll",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `items[]` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractPagedResultDtoGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/Contract/Delete": {
      "delete": {
        "tags": [
          "Contract"
        ],
        "operationId": "contractDelete",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/Enterprise/Currency/Get": {
      "get": {
        "tags": [
          "Currency"
        ],
        "operationId": "currencyGet",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrencyGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/Currency/UpdateGql": {
      "put": {
        "tags": [
          "Currency"
        ],
        "summary": "Update entity data. \r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "currencyUpdateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CurrencyGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CurrencyGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CurrencyGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CurrencyGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrencyGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/Currency/Update": {
      "put": {
        "tags": [
          "Currency"
        ],
        "operationId": "currencyUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CurrencyGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CurrencyGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CurrencyGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CurrencyGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrencyGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/Currency/CreateGql": {
      "post": {
        "tags": [
          "Currency"
        ],
        "summary": "Create entity.\r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "currencyCreateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CurrencyGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CurrencyGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CurrencyGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CurrencyGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrencyGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/Currency/Create": {
      "post": {
        "tags": [
          "Currency"
        ],
        "operationId": "currencyCreate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CurrencyGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CurrencyGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CurrencyGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CurrencyGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrencyGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/Currency/GetAll": {
      "get": {
        "tags": [
          "Currency"
        ],
        "operationId": "currencyGetAll",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrencyGuidDynamicDtoPagedResultDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/Currency/Query": {
      "get": {
        "tags": [
          "Currency"
        ],
        "summary": "Query entity data. \r\nNOTE: don't use on prod, will be merged with the `Get`endpoint soon",
        "operationId": "currencyQuery",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrencyGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/Currency/QueryAll": {
      "get": {
        "tags": [
          "Currency"
        ],
        "summary": "Query entities list\r\nNOTE: don't use on prod, will be merged with the GetAll endpoint soon",
        "operationId": "currencyQueryAll",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `items[]` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrencyPagedResultDtoGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/Currency/Delete": {
      "delete": {
        "tags": [
          "Currency"
        ],
        "operationId": "currencyDelete",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/DataTable/GetColumns": {
      "post": {
        "tags": [
          "DataTable"
        ],
        "summary": "Returns datatable columns for configurable table. Accepts type of model(entity) and list of properties.\r\nColumns configuration is merged on the client side with configurable values",
        "operationId": "dataTableGetColumns",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GetColumnsInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetColumnsInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GetColumnsInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GetColumnsInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataTableColumnDtoListAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/DeviceForceUpdate/Create": {
      "post": {
        "tags": [
          "DeviceForceUpdate"
        ],
        "operationId": "deviceForceUpdateCreate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceForceUpdateDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceForceUpdateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceForceUpdateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceForceUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceForceUpdateDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/DeviceForceUpdate/GetForceUpdateByOSType": {
      "get": {
        "tags": [
          "DeviceForceUpdate"
        ],
        "operationId": "deviceForceUpdateGetForceUpdateByOSType",
        "parameters": [
          {
            "name": "osType",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceForceUpdateDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/DeviceForceUpdate/GetAll": {
      "get": {
        "tags": [
          "DeviceForceUpdate"
        ],
        "operationId": "deviceForceUpdateGetAll",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceForceUpdateDtoPagedResultDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/DeviceForceUpdate/Query": {
      "get": {
        "tags": [
          "DeviceForceUpdate"
        ],
        "summary": "Query entity data. \r\nNOTE: don't use on prod, will be merged with the `Get`endpoint soon",
        "operationId": "deviceForceUpdateQuery",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceForceUpdateGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/DeviceForceUpdate/QueryAll": {
      "get": {
        "tags": [
          "DeviceForceUpdate"
        ],
        "summary": "Query entities list\r\nNOTE: don't use on prod, will be merged with the GetAll endpoint soon",
        "operationId": "deviceForceUpdateQueryAll",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `items[]` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceForceUpdatePagedResultDtoGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/DeviceForceUpdate/Get": {
      "get": {
        "tags": [
          "DeviceForceUpdate"
        ],
        "operationId": "deviceForceUpdateGet",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceForceUpdateDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/DeviceForceUpdate/Update": {
      "put": {
        "tags": [
          "DeviceForceUpdate"
        ],
        "operationId": "deviceForceUpdateUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceForceUpdateDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceForceUpdateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceForceUpdateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceForceUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceForceUpdateDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/DeviceForceUpdate/Delete": {
      "delete": {
        "tags": [
          "DeviceForceUpdate"
        ],
        "operationId": "deviceForceUpdateDelete",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/DeviceRegistration/Create": {
      "post": {
        "tags": [
          "DeviceRegistration"
        ],
        "operationId": "deviceRegistrationCreate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceRegistrationInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceRegistrationInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceRegistrationInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceRegistrationInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceRegistrationDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/DeviceRegistration/Update": {
      "put": {
        "tags": [
          "DeviceRegistration"
        ],
        "operationId": "deviceRegistrationUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceRegistrationInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceRegistrationInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceRegistrationInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceRegistrationInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceRegistrationDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/DistributionList/Get": {
      "get": {
        "tags": [
          "DistributionList"
        ],
        "operationId": "distributionListGet",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DistributionListGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/DistributionList/UpdateGql": {
      "put": {
        "tags": [
          "DistributionList"
        ],
        "summary": "Update entity data. \r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "distributionListUpdateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DistributionListGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DistributionListGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DistributionListGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DistributionListGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DistributionListGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/DistributionList/Update": {
      "put": {
        "tags": [
          "DistributionList"
        ],
        "operationId": "distributionListUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DistributionListGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DistributionListGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DistributionListGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DistributionListGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DistributionListGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/DistributionList/CreateGql": {
      "post": {
        "tags": [
          "DistributionList"
        ],
        "summary": "Create entity.\r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "distributionListCreateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DistributionListGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DistributionListGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DistributionListGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DistributionListGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DistributionListGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/DistributionList/Create": {
      "post": {
        "tags": [
          "DistributionList"
        ],
        "operationId": "distributionListCreate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DistributionListGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DistributionListGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DistributionListGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DistributionListGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DistributionListGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/DistributionList/GetAll": {
      "get": {
        "tags": [
          "DistributionList"
        ],
        "operationId": "distributionListGetAll",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DistributionListGuidDynamicDtoPagedResultDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/DistributionList/Query": {
      "get": {
        "tags": [
          "DistributionList"
        ],
        "summary": "Query entity data. \r\nNOTE: don't use on prod, will be merged with the `Get`endpoint soon",
        "operationId": "distributionListQuery",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DistributionListGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/DistributionList/QueryAll": {
      "get": {
        "tags": [
          "DistributionList"
        ],
        "summary": "Query entities list\r\nNOTE: don't use on prod, will be merged with the GetAll endpoint soon",
        "operationId": "distributionListQueryAll",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `items[]` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DistributionListPagedResultDtoGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/DistributionList/Delete": {
      "delete": {
        "tags": [
          "DistributionList"
        ],
        "operationId": "distributionListDelete",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/Enterprise/DistributionListItem/Get": {
      "get": {
        "tags": [
          "DistributionListItem"
        ],
        "operationId": "distributionListItemGet",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DistributionListItemGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/DistributionListItem/UpdateGql": {
      "put": {
        "tags": [
          "DistributionListItem"
        ],
        "summary": "Update entity data. \r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "distributionListItemUpdateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DistributionListItemGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DistributionListItemGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DistributionListItemGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DistributionListItemGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DistributionListItemGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/DistributionListItem/Update": {
      "put": {
        "tags": [
          "DistributionListItem"
        ],
        "operationId": "distributionListItemUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DistributionListItemGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DistributionListItemGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DistributionListItemGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DistributionListItemGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DistributionListItemGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/DistributionListItem/CreateGql": {
      "post": {
        "tags": [
          "DistributionListItem"
        ],
        "summary": "Create entity.\r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "distributionListItemCreateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DistributionListItemGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DistributionListItemGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DistributionListItemGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DistributionListItemGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DistributionListItemGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/DistributionListItem/Create": {
      "post": {
        "tags": [
          "DistributionListItem"
        ],
        "operationId": "distributionListItemCreate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DistributionListItemGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DistributionListItemGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DistributionListItemGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DistributionListItemGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DistributionListItemGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/DistributionListItem/GetAll": {
      "get": {
        "tags": [
          "DistributionListItem"
        ],
        "operationId": "distributionListItemGetAll",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DistributionListItemGuidDynamicDtoPagedResultDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/DistributionListItem/Query": {
      "get": {
        "tags": [
          "DistributionListItem"
        ],
        "summary": "Query entity data. \r\nNOTE: don't use on prod, will be merged with the `Get`endpoint soon",
        "operationId": "distributionListItemQuery",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DistributionListItemGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/DistributionListItem/QueryAll": {
      "get": {
        "tags": [
          "DistributionListItem"
        ],
        "summary": "Query entities list\r\nNOTE: don't use on prod, will be merged with the GetAll endpoint soon",
        "operationId": "distributionListItemQueryAll",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `items[]` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DistributionListItemPagedResultDtoGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/DistributionListItem/Delete": {
      "delete": {
        "tags": [
          "DistributionListItem"
        ],
        "operationId": "distributionListItemDelete",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/EmailSender/UpdateSmtpSettings": {
      "post": {
        "tags": [
          "EmailSender"
        ],
        "operationId": "emailSenderUpdateSmtpSettings",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SmtpSettingsDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SmtpSettingsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SmtpSettingsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SmtpSettingsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/EmailSender/GetSmtpSettings": {
      "get": {
        "tags": [
          "EmailSender"
        ],
        "operationId": "emailSenderGetSmtpSettings",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SmtpSettingsDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/EmailSender/SendEmail": {
      "post": {
        "tags": [
          "EmailSender"
        ],
        "operationId": "emailSenderSendEmail",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SendTestEmailInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendTestEmailInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SendTestEmailInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SendTestEmailInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendTestEmailDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/Employee/Get": {
      "get": {
        "tags": [
          "Employee"
        ],
        "operationId": "employeeGet",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/Employee/UpdateGql": {
      "put": {
        "tags": [
          "Employee"
        ],
        "summary": "Update entity data. \r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "employeeUpdateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/Employee/Update": {
      "put": {
        "tags": [
          "Employee"
        ],
        "operationId": "employeeUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/Employee/CreateGql": {
      "post": {
        "tags": [
          "Employee"
        ],
        "summary": "Create entity.\r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "employeeCreateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/Employee/Create": {
      "post": {
        "tags": [
          "Employee"
        ],
        "operationId": "employeeCreate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/Employee/GetAll": {
      "get": {
        "tags": [
          "Employee"
        ],
        "operationId": "employeeGetAll",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeGuidDynamicDtoPagedResultDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/Employee/Query": {
      "get": {
        "tags": [
          "Employee"
        ],
        "summary": "Query entity data. \r\nNOTE: don't use on prod, will be merged with the `Get`endpoint soon",
        "operationId": "employeeQuery",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/Employee/QueryAll": {
      "get": {
        "tags": [
          "Employee"
        ],
        "summary": "Query entities list\r\nNOTE: don't use on prod, will be merged with the GetAll endpoint soon",
        "operationId": "employeeQueryAll",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `items[]` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeePagedResultDtoGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/Employee/Delete": {
      "delete": {
        "tags": [
          "Employee"
        ],
        "operationId": "employeeDelete",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Entities/Get": {
      "get": {
        "tags": [
          "Entities"
        ],
        "operationId": "entitiesGet",
        "parameters": [
          {
            "name": "entityType",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IDynamicDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Entities/GetAll": {
      "get": {
        "tags": [
          "Entities"
        ],
        "operationId": "entitiesGetAll",
        "parameters": [
          {
            "name": "entityType",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IDynamicDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Entities/ExportToExcel": {
      "post": {
        "tags": [
          "Entities"
        ],
        "operationId": "entitiesExportToExcel",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ExportToExcelInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExportToExcelInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ExportToExcelInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ExportToExcelInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileStreamResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/EntityConfig/GetAll": {
      "get": {
        "tags": [
          "EntityConfig"
        ],
        "operationId": "entityConfigGetAll",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityConfigDtoPagedResultDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/EntityConfig/Query": {
      "get": {
        "tags": [
          "EntityConfig"
        ],
        "summary": "Query entity data. \r\nNOTE: don't use on prod, will be merged with the `Get`endpoint soon",
        "operationId": "entityConfigQuery",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityConfigGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/EntityConfig/QueryAll": {
      "get": {
        "tags": [
          "EntityConfig"
        ],
        "summary": "Query entities list\r\nNOTE: don't use on prod, will be merged with the GetAll endpoint soon",
        "operationId": "entityConfigQueryAll",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `items[]` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityConfigPagedResultDtoGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/EntityConfig/Get": {
      "get": {
        "tags": [
          "EntityConfig"
        ],
        "operationId": "entityConfigGet",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityConfigDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/EntityConfig/Create": {
      "post": {
        "tags": [
          "EntityConfig"
        ],
        "operationId": "entityConfigCreate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EntityConfigDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EntityConfigDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EntityConfigDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EntityConfigDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityConfigDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/EntityConfig/Update": {
      "put": {
        "tags": [
          "EntityConfig"
        ],
        "operationId": "entityConfigUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EntityConfigDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EntityConfigDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EntityConfigDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EntityConfigDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityConfigDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/EntityConfig/Delete": {
      "delete": {
        "tags": [
          "EntityConfig"
        ],
        "operationId": "entityConfigDelete",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/EntityProperty/GetAll": {
      "get": {
        "tags": [
          "EntityProperty"
        ],
        "operationId": "entityPropertyGetAll",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityPropertyDtoPagedResultDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/EntityProperty/Query": {
      "get": {
        "tags": [
          "EntityProperty"
        ],
        "summary": "Query entity data. \r\nNOTE: don't use on prod, will be merged with the `Get`endpoint soon",
        "operationId": "entityPropertyQuery",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityPropertyGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/EntityProperty/QueryAll": {
      "get": {
        "tags": [
          "EntityProperty"
        ],
        "summary": "Query entities list\r\nNOTE: don't use on prod, will be merged with the GetAll endpoint soon",
        "operationId": "entityPropertyQueryAll",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `items[]` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityPropertyPagedResultDtoGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/EntityProperty/Get": {
      "get": {
        "tags": [
          "EntityProperty"
        ],
        "operationId": "entityPropertyGet",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityPropertyDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/EntityProperty/Create": {
      "post": {
        "tags": [
          "EntityProperty"
        ],
        "operationId": "entityPropertyCreate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EntityPropertyDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EntityPropertyDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EntityPropertyDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EntityPropertyDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityPropertyDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/EntityProperty/Update": {
      "put": {
        "tags": [
          "EntityProperty"
        ],
        "operationId": "entityPropertyUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EntityPropertyDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EntityPropertyDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EntityPropertyDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EntityPropertyDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityPropertyDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/EntityProperty/Delete": {
      "delete": {
        "tags": [
          "EntityProperty"
        ],
        "operationId": "entityPropertyDelete",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/Enterprise/FinancialAccount/Get": {
      "get": {
        "tags": [
          "FinancialAccount"
        ],
        "operationId": "financialAccountGet",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FinancialAccountGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/FinancialAccount/UpdateGql": {
      "put": {
        "tags": [
          "FinancialAccount"
        ],
        "summary": "Update entity data. \r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "financialAccountUpdateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/FinancialAccountGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FinancialAccountGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FinancialAccountGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/FinancialAccountGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FinancialAccountGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/FinancialAccount/Update": {
      "put": {
        "tags": [
          "FinancialAccount"
        ],
        "operationId": "financialAccountUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/FinancialAccountGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FinancialAccountGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FinancialAccountGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/FinancialAccountGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FinancialAccountGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/FinancialAccount/CreateGql": {
      "post": {
        "tags": [
          "FinancialAccount"
        ],
        "summary": "Create entity.\r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "financialAccountCreateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/FinancialAccountGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FinancialAccountGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FinancialAccountGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/FinancialAccountGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FinancialAccountGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/FinancialAccount/Create": {
      "post": {
        "tags": [
          "FinancialAccount"
        ],
        "operationId": "financialAccountCreate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/FinancialAccountGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FinancialAccountGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FinancialAccountGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/FinancialAccountGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FinancialAccountGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/FinancialAccount/GetAll": {
      "get": {
        "tags": [
          "FinancialAccount"
        ],
        "operationId": "financialAccountGetAll",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FinancialAccountGuidDynamicDtoPagedResultDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/FinancialAccount/Query": {
      "get": {
        "tags": [
          "FinancialAccount"
        ],
        "summary": "Query entity data. \r\nNOTE: don't use on prod, will be merged with the `Get`endpoint soon",
        "operationId": "financialAccountQuery",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FinancialAccountGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/FinancialAccount/QueryAll": {
      "get": {
        "tags": [
          "FinancialAccount"
        ],
        "summary": "Query entities list\r\nNOTE: don't use on prod, will be merged with the GetAll endpoint soon",
        "operationId": "financialAccountQueryAll",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `items[]` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FinancialAccountPagedResultDtoGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/FinancialAccount/Delete": {
      "delete": {
        "tags": [
          "FinancialAccount"
        ],
        "operationId": "financialAccountDelete",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/Enterprise/FinancialTransaction/Get": {
      "get": {
        "tags": [
          "FinancialTransaction"
        ],
        "operationId": "financialTransactionGet",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FinancialTransactionGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/FinancialTransaction/UpdateGql": {
      "put": {
        "tags": [
          "FinancialTransaction"
        ],
        "summary": "Update entity data. \r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "financialTransactionUpdateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/FinancialTransactionGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FinancialTransactionGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FinancialTransactionGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/FinancialTransactionGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FinancialTransactionGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/FinancialTransaction/Update": {
      "put": {
        "tags": [
          "FinancialTransaction"
        ],
        "operationId": "financialTransactionUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/FinancialTransactionGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FinancialTransactionGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FinancialTransactionGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/FinancialTransactionGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FinancialTransactionGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/FinancialTransaction/CreateGql": {
      "post": {
        "tags": [
          "FinancialTransaction"
        ],
        "summary": "Create entity.\r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "financialTransactionCreateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/FinancialTransactionGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FinancialTransactionGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FinancialTransactionGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/FinancialTransactionGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FinancialTransactionGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/FinancialTransaction/Create": {
      "post": {
        "tags": [
          "FinancialTransaction"
        ],
        "operationId": "financialTransactionCreate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/FinancialTransactionGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FinancialTransactionGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FinancialTransactionGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/FinancialTransactionGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FinancialTransactionGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/FinancialTransaction/GetAll": {
      "get": {
        "tags": [
          "FinancialTransaction"
        ],
        "operationId": "financialTransactionGetAll",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FinancialTransactionGuidDynamicDtoPagedResultDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/FinancialTransaction/Query": {
      "get": {
        "tags": [
          "FinancialTransaction"
        ],
        "summary": "Query entity data. \r\nNOTE: don't use on prod, will be merged with the `Get`endpoint soon",
        "operationId": "financialTransactionQuery",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FinancialTransactionGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/FinancialTransaction/QueryAll": {
      "get": {
        "tags": [
          "FinancialTransaction"
        ],
        "summary": "Query entities list\r\nNOTE: don't use on prod, will be merged with the GetAll endpoint soon",
        "operationId": "financialTransactionQueryAll",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `items[]` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FinancialTransactionPagedResultDtoGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/FinancialTransaction/Delete": {
      "delete": {
        "tags": [
          "FinancialTransaction"
        ],
        "operationId": "financialTransactionDelete",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/Shesha/Form/Get": {
      "get": {
        "tags": [
          "Form"
        ],
        "operationId": "formGet",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Shesha/Form/GetByPath": {
      "get": {
        "tags": [
          "Form"
        ],
        "operationId": "formGetByPath",
        "parameters": [
          {
            "name": "path",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Shesha/Form/UpdateMarkup": {
      "put": {
        "tags": [
          "Form"
        ],
        "operationId": "formUpdateMarkup",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/FormUpdateMarkupInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FormUpdateMarkupInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FormUpdateMarkupInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/FormUpdateMarkupInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/Shesha/Form/GetAll": {
      "get": {
        "tags": [
          "Form"
        ],
        "operationId": "formGetAll",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormDtoPagedResultDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Shesha/Form/Query": {
      "get": {
        "tags": [
          "Form"
        ],
        "summary": "Query entity data. \r\nNOTE: don't use on prod, will be merged with the `Get`endpoint soon",
        "operationId": "formQuery",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Shesha/Form/QueryAll": {
      "get": {
        "tags": [
          "Form"
        ],
        "summary": "Query entities list\r\nNOTE: don't use on prod, will be merged with the GetAll endpoint soon",
        "operationId": "formQueryAll",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `items[]` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormPagedResultDtoGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Shesha/Form/Create": {
      "post": {
        "tags": [
          "Form"
        ],
        "operationId": "formCreate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/FormDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FormDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FormDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/FormDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Shesha/Form/Update": {
      "put": {
        "tags": [
          "Form"
        ],
        "operationId": "formUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/FormDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FormDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FormDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/FormDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Shesha/Form/Delete": {
      "delete": {
        "tags": [
          "Form"
        ],
        "operationId": "formDelete",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/Shesha/FormConfiguration/GetByName": {
      "get": {
        "tags": [
          "FormConfiguration"
        ],
        "summary": "Get current form configuration by name",
        "operationId": "formConfigurationGetByName",
        "parameters": [
          {
            "name": "module",
            "in": "query",
            "description": "Module name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Form name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "query",
            "description": "Form version number. Last published form is used when missing",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormConfigurationDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Shesha/FormConfiguration/Get": {
      "get": {
        "tags": [
          "FormConfiguration"
        ],
        "operationId": "formConfigurationGet",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormConfigurationDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Shesha/FormConfiguration/UpdateMarkup": {
      "put": {
        "tags": [
          "FormConfiguration"
        ],
        "summary": "Update form markup",
        "operationId": "formConfigurationUpdateMarkup",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/FormUpdateMarkupInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FormUpdateMarkupInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FormUpdateMarkupInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/FormUpdateMarkupInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/Shesha/FormConfiguration/UpdateStatus": {
      "put": {
        "tags": [
          "FormConfiguration"
        ],
        "summary": "Update form markup",
        "operationId": "formConfigurationUpdateStatus",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateConfigurationStatusInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateConfigurationStatusInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateConfigurationStatusInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateConfigurationStatusInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/Shesha/FormConfiguration/Export": {
      "get": {
        "tags": [
          "FormConfiguration"
        ],
        "summary": "Export form",
        "operationId": "formConfigurationExport",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileContentResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Shesha/FormConfiguration/Create": {
      "post": {
        "tags": [
          "FormConfiguration"
        ],
        "summary": "Create new form configuration",
        "operationId": "formConfigurationCreate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFormConfigurationDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFormConfigurationDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFormConfigurationDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFormConfigurationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormConfigurationDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Shesha/FormConfiguration/CreateNewVersion": {
      "post": {
        "tags": [
          "FormConfiguration"
        ],
        "summary": "Create new version of form configuration",
        "operationId": "formConfigurationCreateNewVersion",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNewVersionInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNewVersionInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNewVersionInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNewVersionInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormConfigurationDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Shesha/FormConfiguration/CancelVersion": {
      "post": {
        "tags": [
          "FormConfiguration"
        ],
        "summary": "Cancel version",
        "operationId": "formConfigurationCancelVersion",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CancelVersionInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelVersionInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelVersionInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CancelVersionInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormConfigurationDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Shesha/FormConfiguration/GetJson": {
      "get": {
        "tags": [
          "FormConfiguration"
        ],
        "summary": "Get form in JSON format",
        "operationId": "formConfigurationGetJson",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileContentResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Shesha/FormConfiguration/Update": {
      "put": {
        "tags": [
          "FormConfiguration"
        ],
        "summary": "Update form configuration",
        "operationId": "formConfigurationUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFormConfigurationDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFormConfigurationDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFormConfigurationDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFormConfigurationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormConfigurationDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Shesha/FormConfiguration/Delete": {
      "delete": {
        "tags": [
          "FormConfiguration"
        ],
        "summary": "Delete form",
        "operationId": "formConfigurationDelete",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/Shesha/FormConfiguration/MoveToModule": {
      "post": {
        "tags": [
          "FormConfiguration"
        ],
        "summary": "Move form to another module",
        "operationId": "formConfigurationMoveToModule",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MoveToModuleInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MoveToModuleInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MoveToModuleInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MoveToModuleInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/Shesha/FormConfiguration/GetAll": {
      "get": {
        "tags": [
          "FormConfiguration"
        ],
        "operationId": "formConfigurationGetAll",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormConfigurationDtoPagedResultDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Shesha/FormConfiguration/Query": {
      "get": {
        "tags": [
          "FormConfiguration"
        ],
        "summary": "Query entity data. \r\nNOTE: don't use on prod, will be merged with the `Get`endpoint soon",
        "operationId": "formConfigurationQuery",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormConfigurationGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Shesha/FormConfiguration/QueryAll": {
      "get": {
        "tags": [
          "FormConfiguration"
        ],
        "summary": "Query entities list\r\nNOTE: don't use on prod, will be merged with the GetAll endpoint soon",
        "operationId": "formConfigurationQueryAll",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `items[]` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormConfigurationPagedResultDtoGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/Framework/ExecuteHql": {
      "post": {
        "tags": [
          "Framework"
        ],
        "operationId": "frameworkExecuteHql",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "query"
                ],
                "type": "object",
                "properties": {
                  "query": {
                    "type": "string",
                    "format": "multiline"
                  }
                }
              },
              "encoding": {
                "query": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": { }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": { }
                }
              }
            }
          }
        }
      }
    },
    "/api/Framework/TestEntities": {
      "get": {
        "tags": [
          "Framework"
        ],
        "summary": "NOTE: to be removed",
        "operationId": "frameworkTestEntities",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/Framework/BootstrapReferenceLists": {
      "post": {
        "tags": [
          "Framework"
        ],
        "operationId": "frameworkBootstrapReferenceLists",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/Framework/Assemblies": {
      "get": {
        "tags": [
          "Framework"
        ],
        "operationId": "frameworkAssemblies",
        "parameters": [
          {
            "name": "searchString",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AssemblyInfoDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AssemblyInfoDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AssemblyInfoDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Framework/CurrentRamUsage": {
      "get": {
        "tags": [
          "Framework"
        ],
        "operationId": "frameworkCurrentRamUsage",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          }
        }
      }
    },
    "/api/Framework/DynamicAssemblies": {
      "get": {
        "tags": [
          "Framework"
        ],
        "operationId": "frameworkDynamicAssemblies",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/Shesha/FrontEndApp/Get": {
      "get": {
        "tags": [
          "FrontEndApp"
        ],
        "operationId": "frontEndAppGet",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FrontEndAppGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Shesha/FrontEndApp/UpdateGql": {
      "put": {
        "tags": [
          "FrontEndApp"
        ],
        "summary": "Update entity data. \r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "frontEndAppUpdateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/FrontEndAppGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FrontEndAppGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FrontEndAppGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/FrontEndAppGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FrontEndAppGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Shesha/FrontEndApp/Update": {
      "put": {
        "tags": [
          "FrontEndApp"
        ],
        "operationId": "frontEndAppUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/FrontEndAppGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FrontEndAppGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FrontEndAppGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/FrontEndAppGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FrontEndAppGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Shesha/FrontEndApp/CreateGql": {
      "post": {
        "tags": [
          "FrontEndApp"
        ],
        "summary": "Create entity.\r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "frontEndAppCreateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/FrontEndAppGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FrontEndAppGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FrontEndAppGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/FrontEndAppGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FrontEndAppGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Shesha/FrontEndApp/Create": {
      "post": {
        "tags": [
          "FrontEndApp"
        ],
        "operationId": "frontEndAppCreate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/FrontEndAppGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FrontEndAppGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FrontEndAppGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/FrontEndAppGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FrontEndAppGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Shesha/FrontEndApp/GetAll": {
      "get": {
        "tags": [
          "FrontEndApp"
        ],
        "operationId": "frontEndAppGetAll",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FrontEndAppGuidDynamicDtoPagedResultDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Shesha/FrontEndApp/Query": {
      "get": {
        "tags": [
          "FrontEndApp"
        ],
        "summary": "Query entity data. \r\nNOTE: don't use on prod, will be merged with the `Get`endpoint soon",
        "operationId": "frontEndAppQuery",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FrontEndAppGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Shesha/FrontEndApp/QueryAll": {
      "get": {
        "tags": [
          "FrontEndApp"
        ],
        "summary": "Query entities list\r\nNOTE: don't use on prod, will be merged with the GetAll endpoint soon",
        "operationId": "frontEndAppQueryAll",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `items[]` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FrontEndAppPagedResultDtoGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Shesha/FrontEndApp/Delete": {
      "delete": {
        "tags": [
          "FrontEndApp"
        ],
        "operationId": "frontEndAppDelete",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/Enterprise/HomeUrlAppointment/Get": {
      "get": {
        "tags": [
          "HomeUrlAppointment"
        ],
        "operationId": "homeUrlAppointmentGet",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HomeUrlAppointmentGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/HomeUrlAppointment/UpdateGql": {
      "put": {
        "tags": [
          "HomeUrlAppointment"
        ],
        "summary": "Update entity data. \r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "homeUrlAppointmentUpdateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/HomeUrlAppointmentGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HomeUrlAppointmentGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/HomeUrlAppointmentGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/HomeUrlAppointmentGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HomeUrlAppointmentGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/HomeUrlAppointment/Update": {
      "put": {
        "tags": [
          "HomeUrlAppointment"
        ],
        "operationId": "homeUrlAppointmentUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/HomeUrlAppointmentGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HomeUrlAppointmentGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/HomeUrlAppointmentGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/HomeUrlAppointmentGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HomeUrlAppointmentGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/HomeUrlAppointment/CreateGql": {
      "post": {
        "tags": [
          "HomeUrlAppointment"
        ],
        "summary": "Create entity.\r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "homeUrlAppointmentCreateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/HomeUrlAppointmentGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HomeUrlAppointmentGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/HomeUrlAppointmentGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/HomeUrlAppointmentGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HomeUrlAppointmentGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/HomeUrlAppointment/Create": {
      "post": {
        "tags": [
          "HomeUrlAppointment"
        ],
        "operationId": "homeUrlAppointmentCreate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/HomeUrlAppointmentGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HomeUrlAppointmentGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/HomeUrlAppointmentGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/HomeUrlAppointmentGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HomeUrlAppointmentGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/HomeUrlAppointment/GetAll": {
      "get": {
        "tags": [
          "HomeUrlAppointment"
        ],
        "operationId": "homeUrlAppointmentGetAll",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HomeUrlAppointmentGuidDynamicDtoPagedResultDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/HomeUrlAppointment/Query": {
      "get": {
        "tags": [
          "HomeUrlAppointment"
        ],
        "summary": "Query entity data. \r\nNOTE: don't use on prod, will be merged with the `Get`endpoint soon",
        "operationId": "homeUrlAppointmentQuery",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HomeUrlAppointmentGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/HomeUrlAppointment/QueryAll": {
      "get": {
        "tags": [
          "HomeUrlAppointment"
        ],
        "summary": "Query entities list\r\nNOTE: don't use on prod, will be merged with the GetAll endpoint soon",
        "operationId": "homeUrlAppointmentQueryAll",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `items[]` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HomeUrlAppointmentPagedResultDtoGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/HomeUrlAppointment/Delete": {
      "delete": {
        "tags": [
          "HomeUrlAppointment"
        ],
        "operationId": "homeUrlAppointmentDelete",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/Enterprise/HomeUrlRoute/Create": {
      "post": {
        "tags": [
          "HomeUrlRoute"
        ],
        "operationId": "homeUrlRouteCreate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/HomeUrlRouteDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HomeUrlRouteDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/HomeUrlRouteDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/HomeUrlRouteDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HomeUrlRouteDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/HomeUrlRoute/GetAll": {
      "get": {
        "tags": [
          "HomeUrlRoute"
        ],
        "operationId": "homeUrlRouteGetAll",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HomeUrlRouteDtoPagedResultDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/HomeUrlRoute/Query": {
      "get": {
        "tags": [
          "HomeUrlRoute"
        ],
        "summary": "Query entity data. \r\nNOTE: don't use on prod, will be merged with the `Get`endpoint soon",
        "operationId": "homeUrlRouteQuery",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HomeUrlRouteGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/HomeUrlRoute/QueryAll": {
      "get": {
        "tags": [
          "HomeUrlRoute"
        ],
        "summary": "Query entities list\r\nNOTE: don't use on prod, will be merged with the GetAll endpoint soon",
        "operationId": "homeUrlRouteQueryAll",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `items[]` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HomeUrlRoutePagedResultDtoGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/HomeUrlRoute/Get": {
      "get": {
        "tags": [
          "HomeUrlRoute"
        ],
        "operationId": "homeUrlRouteGet",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HomeUrlRouteDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/HomeUrlRoute/Update": {
      "put": {
        "tags": [
          "HomeUrlRoute"
        ],
        "operationId": "homeUrlRouteUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/HomeUrlRouteDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HomeUrlRouteDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/HomeUrlRouteDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/HomeUrlRouteDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HomeUrlRouteDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/HomeUrlRoute/Delete": {
      "delete": {
        "tags": [
          "HomeUrlRoute"
        ],
        "operationId": "homeUrlRouteDelete",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/Shesha/ImportResult/Get": {
      "get": {
        "tags": [
          "ImportResult"
        ],
        "operationId": "importResultGet",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportResultGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Shesha/ImportResult/UpdateGql": {
      "put": {
        "tags": [
          "ImportResult"
        ],
        "summary": "Update entity data. \r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "importResultUpdateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ImportResultGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportResultGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportResultGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ImportResultGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportResultGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Shesha/ImportResult/Update": {
      "put": {
        "tags": [
          "ImportResult"
        ],
        "operationId": "importResultUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ImportResultGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportResultGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportResultGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ImportResultGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportResultGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Shesha/ImportResult/CreateGql": {
      "post": {
        "tags": [
          "ImportResult"
        ],
        "summary": "Create entity.\r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "importResultCreateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ImportResultGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportResultGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportResultGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ImportResultGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportResultGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Shesha/ImportResult/Create": {
      "post": {
        "tags": [
          "ImportResult"
        ],
        "operationId": "importResultCreate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ImportResultGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportResultGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportResultGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ImportResultGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportResultGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Shesha/ImportResult/GetAll": {
      "get": {
        "tags": [
          "ImportResult"
        ],
        "operationId": "importResultGetAll",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportResultGuidDynamicDtoPagedResultDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Shesha/ImportResult/Query": {
      "get": {
        "tags": [
          "ImportResult"
        ],
        "summary": "Query entity data. \r\nNOTE: don't use on prod, will be merged with the `Get`endpoint soon",
        "operationId": "importResultQuery",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportResultGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Shesha/ImportResult/QueryAll": {
      "get": {
        "tags": [
          "ImportResult"
        ],
        "summary": "Query entities list\r\nNOTE: don't use on prod, will be merged with the GetAll endpoint soon",
        "operationId": "importResultQueryAll",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `items[]` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportResultPagedResultDtoGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Shesha/ImportResult/Delete": {
      "delete": {
        "tags": [
          "ImportResult"
        ],
        "operationId": "importResultDelete",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/Epm/IndicatorDefinition/Get": {
      "get": {
        "tags": [
          "IndicatorDefinition"
        ],
        "operationId": "indicatorDefinitionGet",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IndicatorDefinitionGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Epm/IndicatorDefinition/UpdateGql": {
      "put": {
        "tags": [
          "IndicatorDefinition"
        ],
        "summary": "Update entity data. \r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "indicatorDefinitionUpdateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/IndicatorDefinitionGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IndicatorDefinitionGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IndicatorDefinitionGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IndicatorDefinitionGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IndicatorDefinitionGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Epm/IndicatorDefinition/Update": {
      "put": {
        "tags": [
          "IndicatorDefinition"
        ],
        "operationId": "indicatorDefinitionUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/IndicatorDefinitionGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IndicatorDefinitionGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IndicatorDefinitionGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IndicatorDefinitionGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IndicatorDefinitionGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Epm/IndicatorDefinition/CreateGql": {
      "post": {
        "tags": [
          "IndicatorDefinition"
        ],
        "summary": "Create entity.\r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "indicatorDefinitionCreateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/IndicatorDefinitionGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IndicatorDefinitionGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IndicatorDefinitionGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IndicatorDefinitionGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IndicatorDefinitionGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Epm/IndicatorDefinition/Create": {
      "post": {
        "tags": [
          "IndicatorDefinition"
        ],
        "operationId": "indicatorDefinitionCreate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/IndicatorDefinitionGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IndicatorDefinitionGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IndicatorDefinitionGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IndicatorDefinitionGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IndicatorDefinitionGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Epm/IndicatorDefinition/GetAll": {
      "get": {
        "tags": [
          "IndicatorDefinition"
        ],
        "operationId": "indicatorDefinitionGetAll",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IndicatorDefinitionGuidDynamicDtoPagedResultDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Epm/IndicatorDefinition/Query": {
      "get": {
        "tags": [
          "IndicatorDefinition"
        ],
        "summary": "Query entity data. \r\nNOTE: don't use on prod, will be merged with the `Get`endpoint soon",
        "operationId": "indicatorDefinitionQuery",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IndicatorDefinitionGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Epm/IndicatorDefinition/QueryAll": {
      "get": {
        "tags": [
          "IndicatorDefinition"
        ],
        "summary": "Query entities list\r\nNOTE: don't use on prod, will be merged with the GetAll endpoint soon",
        "operationId": "indicatorDefinitionQueryAll",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `items[]` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IndicatorDefinitionPagedResultDtoGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Epm/IndicatorDefinition/Delete": {
      "delete": {
        "tags": [
          "IndicatorDefinition"
        ],
        "operationId": "indicatorDefinitionDelete",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/Enterprise/Invoice/CancelInvoice": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "operationId": "invoiceCancelInvoice",
        "parameters": [
          {
            "name": "invoiceId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/Invoice/UpdateStatus": {
      "put": {
        "tags": [
          "Invoice"
        ],
        "operationId": "invoiceUpdateStatus",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceUpdateInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceUpdateInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceUpdateInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceUpdateInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/Invoice/GetAll": {
      "get": {
        "tags": [
          "Invoice"
        ],
        "operationId": "invoiceGetAll",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceDtoPagedResultDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/Invoice/Query": {
      "get": {
        "tags": [
          "Invoice"
        ],
        "summary": "Query entity data. \r\nNOTE: don't use on prod, will be merged with the `Get`endpoint soon",
        "operationId": "invoiceQuery",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/Invoice/QueryAll": {
      "get": {
        "tags": [
          "Invoice"
        ],
        "summary": "Query entities list\r\nNOTE: don't use on prod, will be merged with the GetAll endpoint soon",
        "operationId": "invoiceQueryAll",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `items[]` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoicePagedResultDtoGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/Invoice/Get": {
      "get": {
        "tags": [
          "Invoice"
        ],
        "operationId": "invoiceGet",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/Invoice/Create": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "operationId": "invoiceCreate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/Invoice/Update": {
      "put": {
        "tags": [
          "Invoice"
        ],
        "operationId": "invoiceUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/Invoice/Delete": {
      "delete": {
        "tags": [
          "Invoice"
        ],
        "operationId": "invoiceDelete",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/Enterprise/InvoiceLineItem/Get": {
      "get": {
        "tags": [
          "InvoiceLineItem"
        ],
        "operationId": "invoiceLineItemGet",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceLineItemGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/InvoiceLineItem/UpdateGql": {
      "put": {
        "tags": [
          "InvoiceLineItem"
        ],
        "summary": "Update entity data. \r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "invoiceLineItemUpdateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceLineItemGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceLineItemGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceLineItemGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceLineItemGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceLineItemGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/InvoiceLineItem/Update": {
      "put": {
        "tags": [
          "InvoiceLineItem"
        ],
        "operationId": "invoiceLineItemUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceLineItemGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceLineItemGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceLineItemGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceLineItemGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceLineItemGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/InvoiceLineItem/CreateGql": {
      "post": {
        "tags": [
          "InvoiceLineItem"
        ],
        "summary": "Create entity.\r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "invoiceLineItemCreateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceLineItemGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceLineItemGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceLineItemGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceLineItemGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceLineItemGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/InvoiceLineItem/Create": {
      "post": {
        "tags": [
          "InvoiceLineItem"
        ],
        "operationId": "invoiceLineItemCreate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceLineItemGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceLineItemGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceLineItemGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceLineItemGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceLineItemGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/InvoiceLineItem/GetAll": {
      "get": {
        "tags": [
          "InvoiceLineItem"
        ],
        "operationId": "invoiceLineItemGetAll",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceLineItemGuidDynamicDtoPagedResultDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/InvoiceLineItem/Query": {
      "get": {
        "tags": [
          "InvoiceLineItem"
        ],
        "summary": "Query entity data. \r\nNOTE: don't use on prod, will be merged with the `Get`endpoint soon",
        "operationId": "invoiceLineItemQuery",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceLineItemGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/InvoiceLineItem/QueryAll": {
      "get": {
        "tags": [
          "InvoiceLineItem"
        ],
        "summary": "Query entities list\r\nNOTE: don't use on prod, will be merged with the GetAll endpoint soon",
        "operationId": "invoiceLineItemQueryAll",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `items[]` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceLineItemPagedResultDtoGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/InvoiceLineItem/Delete": {
      "delete": {
        "tags": [
          "InvoiceLineItem"
        ],
        "operationId": "invoiceLineItemDelete",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/Enterprise/LogonMessage/Get": {
      "get": {
        "tags": [
          "LogonMessage"
        ],
        "operationId": "logonMessageGet",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogonMessageGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/LogonMessage/UpdateGql": {
      "put": {
        "tags": [
          "LogonMessage"
        ],
        "summary": "Update entity data. \r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "logonMessageUpdateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/LogonMessageGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LogonMessageGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LogonMessageGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LogonMessageGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogonMessageGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/LogonMessage/Update": {
      "put": {
        "tags": [
          "LogonMessage"
        ],
        "operationId": "logonMessageUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/LogonMessageGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LogonMessageGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LogonMessageGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LogonMessageGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogonMessageGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/LogonMessage/CreateGql": {
      "post": {
        "tags": [
          "LogonMessage"
        ],
        "summary": "Create entity.\r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "logonMessageCreateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/LogonMessageGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LogonMessageGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LogonMessageGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LogonMessageGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogonMessageGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/LogonMessage/Create": {
      "post": {
        "tags": [
          "LogonMessage"
        ],
        "operationId": "logonMessageCreate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/LogonMessageGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LogonMessageGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LogonMessageGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LogonMessageGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogonMessageGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/LogonMessage/GetAll": {
      "get": {
        "tags": [
          "LogonMessage"
        ],
        "operationId": "logonMessageGetAll",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogonMessageGuidDynamicDtoPagedResultDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/LogonMessage/Query": {
      "get": {
        "tags": [
          "LogonMessage"
        ],
        "summary": "Query entity data. \r\nNOTE: don't use on prod, will be merged with the `Get`endpoint soon",
        "operationId": "logonMessageQuery",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogonMessageGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/LogonMessage/QueryAll": {
      "get": {
        "tags": [
          "LogonMessage"
        ],
        "summary": "Query entities list\r\nNOTE: don't use on prod, will be merged with the GetAll endpoint soon",
        "operationId": "logonMessageQueryAll",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `items[]` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogonMessagePagedResultDtoGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/LogonMessage/Delete": {
      "delete": {
        "tags": [
          "LogonMessage"
        ],
        "operationId": "logonMessageDelete",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/Enterprise/LogonMessageAuditItem/Get": {
      "get": {
        "tags": [
          "LogonMessageAuditItem"
        ],
        "operationId": "logonMessageAuditItemGet",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogonMessageAuditItemGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/LogonMessageAuditItem/UpdateGql": {
      "put": {
        "tags": [
          "LogonMessageAuditItem"
        ],
        "summary": "Update entity data. \r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "logonMessageAuditItemUpdateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/LogonMessageAuditItemGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LogonMessageAuditItemGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LogonMessageAuditItemGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LogonMessageAuditItemGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogonMessageAuditItemGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/LogonMessageAuditItem/Update": {
      "put": {
        "tags": [
          "LogonMessageAuditItem"
        ],
        "operationId": "logonMessageAuditItemUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/LogonMessageAuditItemGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LogonMessageAuditItemGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LogonMessageAuditItemGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LogonMessageAuditItemGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogonMessageAuditItemGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/LogonMessageAuditItem/CreateGql": {
      "post": {
        "tags": [
          "LogonMessageAuditItem"
        ],
        "summary": "Create entity.\r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "logonMessageAuditItemCreateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/LogonMessageAuditItemGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LogonMessageAuditItemGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LogonMessageAuditItemGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LogonMessageAuditItemGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogonMessageAuditItemGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/LogonMessageAuditItem/Create": {
      "post": {
        "tags": [
          "LogonMessageAuditItem"
        ],
        "operationId": "logonMessageAuditItemCreate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/LogonMessageAuditItemGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LogonMessageAuditItemGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LogonMessageAuditItemGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LogonMessageAuditItemGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogonMessageAuditItemGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/LogonMessageAuditItem/GetAll": {
      "get": {
        "tags": [
          "LogonMessageAuditItem"
        ],
        "operationId": "logonMessageAuditItemGetAll",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogonMessageAuditItemGuidDynamicDtoPagedResultDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/LogonMessageAuditItem/Query": {
      "get": {
        "tags": [
          "LogonMessageAuditItem"
        ],
        "summary": "Query entity data. \r\nNOTE: don't use on prod, will be merged with the `Get`endpoint soon",
        "operationId": "logonMessageAuditItemQuery",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogonMessageAuditItemGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/LogonMessageAuditItem/QueryAll": {
      "get": {
        "tags": [
          "LogonMessageAuditItem"
        ],
        "summary": "Query entities list\r\nNOTE: don't use on prod, will be merged with the GetAll endpoint soon",
        "operationId": "logonMessageAuditItemQueryAll",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `items[]` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogonMessageAuditItemPagedResultDtoGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/LogonMessageAuditItem/Delete": {
      "delete": {
        "tags": [
          "LogonMessageAuditItem"
        ],
        "operationId": "logonMessageAuditItemDelete",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Maintenance/GetBackupsList": {
      "get": {
        "tags": [
          "Maintenance"
        ],
        "operationId": "maintenanceGetBackupsList",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringListAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Maintenance/DeleteBackup": {
      "get": {
        "tags": [
          "Maintenance"
        ],
        "operationId": "maintenanceDeleteBackup",
        "parameters": [
          {
            "name": "fileName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BackupDataDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Maintenance/GetBackupData": {
      "get": {
        "tags": [
          "Maintenance"
        ],
        "operationId": "maintenanceGetBackupData",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BackupDataDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Maintenance/BackupDB": {
      "get": {
        "tags": [
          "Maintenance"
        ],
        "summary": "Backup DB",
        "operationId": "maintenanceBackupDB",
        "parameters": [
          {
            "name": "fileName",
            "in": "query",
            "description": "Filename of DB backup",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BackupDataDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Maintenance/RestoreDb": {
      "get": {
        "tags": [
          "Maintenance"
        ],
        "operationId": "maintenanceRestoreDb",
        "parameters": [
          {
            "name": "fileName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BackupDataDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Metadata/TypeAutocomplete": {
      "get": {
        "tags": [
          "Metadata"
        ],
        "operationId": "metadataTypeAutocomplete",
        "parameters": [
          {
            "name": "term",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "selectedValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutocompleteItemDtoListAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Metadata/EntityTypeAutocomplete": {
      "get": {
        "tags": [
          "Metadata"
        ],
        "operationId": "metadataEntityTypeAutocomplete",
        "parameters": [
          {
            "name": "term",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "selectedValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutocompleteItemDtoListAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Metadata/PropertyAutocomplete": {
      "get": {
        "tags": [
          "Metadata"
        ],
        "operationId": "metadataPropertyAutocomplete",
        "parameters": [
          {
            "name": "term",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "container",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "selectedValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PropertyMetadataDtoListAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Metadata/GetProperties": {
      "get": {
        "tags": [
          "Metadata"
        ],
        "operationId": "metadataGetProperties",
        "parameters": [
          {
            "name": "container",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PropertyMetadataDtoListAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/MobileDevice/GetDeviceByEmei": {
      "get": {
        "tags": [
          "MobileDevice"
        ],
        "operationId": "mobileDeviceGetDeviceByEmei",
        "parameters": [
          {
            "name": "imei",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MobileDeviceDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/MobileDevice/GetAll": {
      "get": {
        "tags": [
          "MobileDevice"
        ],
        "operationId": "mobileDeviceGetAll",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MobileDeviceDtoPagedResultDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/MobileDevice/Query": {
      "get": {
        "tags": [
          "MobileDevice"
        ],
        "summary": "Query entity data. \r\nNOTE: don't use on prod, will be merged with the `Get`endpoint soon",
        "operationId": "mobileDeviceQuery",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MobileDeviceGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/MobileDevice/QueryAll": {
      "get": {
        "tags": [
          "MobileDevice"
        ],
        "summary": "Query entities list\r\nNOTE: don't use on prod, will be merged with the GetAll endpoint soon",
        "operationId": "mobileDeviceQueryAll",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `items[]` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MobileDevicePagedResultDtoGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/MobileDevice/Get": {
      "get": {
        "tags": [
          "MobileDevice"
        ],
        "operationId": "mobileDeviceGet",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MobileDeviceDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/MobileDevice/Create": {
      "post": {
        "tags": [
          "MobileDevice"
        ],
        "operationId": "mobileDeviceCreate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MobileDeviceDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MobileDeviceDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MobileDeviceDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MobileDeviceDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MobileDeviceDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/MobileDevice/Update": {
      "put": {
        "tags": [
          "MobileDevice"
        ],
        "operationId": "mobileDeviceUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MobileDeviceDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MobileDeviceDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MobileDeviceDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MobileDeviceDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MobileDeviceDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/MobileDevice/Delete": {
      "delete": {
        "tags": [
          "MobileDevice"
        ],
        "operationId": "mobileDeviceDelete",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/ModelConfigurations": {
      "get": {
        "tags": [
          "ModelConfigurations"
        ],
        "operationId": "modelConfigurationsGetByName",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelConfigurationDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ModelConfigurations"
        ],
        "operationId": "modelConfigurationsUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ModelConfigurationDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModelConfigurationDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ModelConfigurationDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ModelConfigurationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelConfigurationDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ModelConfigurations"
        ],
        "operationId": "modelConfigurationsCreate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ModelConfigurationDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModelConfigurationDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ModelConfigurationDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ModelConfigurationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelConfigurationDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/ModelConfigurations/{id}": {
      "get": {
        "tags": [
          "ModelConfigurations"
        ],
        "operationId": "modelConfigurationsGetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelConfigurationDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Shesha/Module/Get": {
      "get": {
        "tags": [
          "Module"
        ],
        "operationId": "moduleGet",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModuleGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Shesha/Module/UpdateGql": {
      "put": {
        "tags": [
          "Module"
        ],
        "summary": "Update entity data. \r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "moduleUpdateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ModuleGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModuleGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ModuleGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ModuleGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModuleGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Shesha/Module/Update": {
      "put": {
        "tags": [
          "Module"
        ],
        "operationId": "moduleUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ModuleGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModuleGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ModuleGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ModuleGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModuleGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Shesha/Module/CreateGql": {
      "post": {
        "tags": [
          "Module"
        ],
        "summary": "Create entity.\r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "moduleCreateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ModuleGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModuleGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ModuleGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ModuleGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModuleGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Shesha/Module/Create": {
      "post": {
        "tags": [
          "Module"
        ],
        "operationId": "moduleCreate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ModuleGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModuleGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ModuleGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ModuleGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModuleGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Shesha/Module/GetAll": {
      "get": {
        "tags": [
          "Module"
        ],
        "operationId": "moduleGetAll",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModuleGuidDynamicDtoPagedResultDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Shesha/Module/Query": {
      "get": {
        "tags": [
          "Module"
        ],
        "summary": "Query entity data. \r\nNOTE: don't use on prod, will be merged with the `Get`endpoint soon",
        "operationId": "moduleQuery",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModuleGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Shesha/Module/QueryAll": {
      "get": {
        "tags": [
          "Module"
        ],
        "summary": "Query entities list\r\nNOTE: don't use on prod, will be merged with the GetAll endpoint soon",
        "operationId": "moduleQueryAll",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `items[]` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModulePagedResultDtoGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Shesha/Module/Delete": {
      "delete": {
        "tags": [
          "Module"
        ],
        "operationId": "moduleDelete",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/Shesha/NHibernate/GetConventions": {
      "get": {
        "tags": [
          "NHibernate"
        ],
        "summary": "Get last compiled mapping conventions",
        "operationId": "nHibernateGetConventions",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Note/GetList": {
      "get": {
        "tags": [
          "Note"
        ],
        "summary": "",
        "operationId": "noteGetList",
        "parameters": [
          {
            "name": "ownerId",
            "in": "query",
            "description": "Id of the owner entity",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ownerType",
            "in": "query",
            "description": "Type short alias of the owner entity",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "category",
            "in": "query",
            "description": "Category of the note. Is used to split notes into groups",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "allCategories",
            "in": "query",
            "description": "Set to true to get notes of all categories",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoteDtoListAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Note/Create": {
      "post": {
        "tags": [
          "Note"
        ],
        "operationId": "noteCreate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNoteDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNoteDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNoteDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNoteDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoteDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Note/GetAll": {
      "get": {
        "tags": [
          "Note"
        ],
        "operationId": "noteGetAll",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoteDtoPagedResultDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Note/Query": {
      "get": {
        "tags": [
          "Note"
        ],
        "summary": "Query entity data. \r\nNOTE: don't use on prod, will be merged with the `Get`endpoint soon",
        "operationId": "noteQuery",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoteGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Note/QueryAll": {
      "get": {
        "tags": [
          "Note"
        ],
        "summary": "Query entities list\r\nNOTE: don't use on prod, will be merged with the GetAll endpoint soon",
        "operationId": "noteQueryAll",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `items[]` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotePagedResultDtoGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Note/Get": {
      "get": {
        "tags": [
          "Note"
        ],
        "operationId": "noteGet",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoteDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Note/Update": {
      "put": {
        "tags": [
          "Note"
        ],
        "operationId": "noteUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateNoteDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateNoteDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateNoteDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateNoteDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoteDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Note/Delete": {
      "delete": {
        "tags": [
          "Note"
        ],
        "operationId": "noteDelete",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Notification/Publish": {
      "post": {
        "tags": [
          "Notification"
        ],
        "operationId": "notificationPublish",
        "parameters": [
          {
            "name": "notificationName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationData"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationData"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationData"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationData"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Notification/Autocomplete": {
      "get": {
        "tags": [
          "Notification"
        ],
        "summary": "Notifications autocomplete",
        "operationId": "notificationAutocomplete",
        "parameters": [
          {
            "name": "term",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutocompleteItemDtoListAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Notification/ReSendAbpNotification": {
      "post": {
        "tags": [
          "Notification"
        ],
        "summary": "Note: for temporary usage only",
        "operationId": "notificationReSendAbpNotification",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Notification/SaveAttachment": {
      "post": {
        "tags": [
          "Notification"
        ],
        "summary": "Save notification attachment",
        "operationId": "notificationSaveAttachment",
        "parameters": [
          {
            "name": "fileName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Stream"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Stream"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Stream"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Stream"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationAttachmentDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Notification/GetAll": {
      "get": {
        "tags": [
          "Notification"
        ],
        "operationId": "notificationGetAll",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationDtoPagedResultDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Notification/Query": {
      "get": {
        "tags": [
          "Notification"
        ],
        "summary": "Query entity data. \r\nNOTE: don't use on prod, will be merged with the `Get`endpoint soon",
        "operationId": "notificationQuery",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Notification/QueryAll": {
      "get": {
        "tags": [
          "Notification"
        ],
        "summary": "Query entities list\r\nNOTE: don't use on prod, will be merged with the GetAll endpoint soon",
        "operationId": "notificationQueryAll",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `items[]` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationPagedResultDtoGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Notification/Get": {
      "get": {
        "tags": [
          "Notification"
        ],
        "operationId": "notificationGet",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Notification/Create": {
      "post": {
        "tags": [
          "Notification"
        ],
        "operationId": "notificationCreate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Notification/Update": {
      "put": {
        "tags": [
          "Notification"
        ],
        "operationId": "notificationUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Notification/Delete": {
      "delete": {
        "tags": [
          "Notification"
        ],
        "operationId": "notificationDelete",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/NotificationMessage/Resend": {
      "post": {
        "tags": [
          "NotificationMessage"
        ],
        "summary": "Resend notification message with !:",
        "operationId": "notificationMessageResend",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/NotificationMessage/GetAll": {
      "get": {
        "tags": [
          "NotificationMessage"
        ],
        "operationId": "notificationMessageGetAll",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationMessageDtoPagedResultDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/NotificationMessage/Query": {
      "get": {
        "tags": [
          "NotificationMessage"
        ],
        "summary": "Query entity data. \r\nNOTE: don't use on prod, will be merged with the `Get`endpoint soon",
        "operationId": "notificationMessageQuery",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationMessageGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/NotificationMessage/QueryAll": {
      "get": {
        "tags": [
          "NotificationMessage"
        ],
        "summary": "Query entities list\r\nNOTE: don't use on prod, will be merged with the GetAll endpoint soon",
        "operationId": "notificationMessageQueryAll",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `items[]` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationMessagePagedResultDtoGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/NotificationMessage/Get": {
      "get": {
        "tags": [
          "NotificationMessage"
        ],
        "operationId": "notificationMessageGet",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationMessageDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/NotificationMessage/Create": {
      "post": {
        "tags": [
          "NotificationMessage"
        ],
        "operationId": "notificationMessageCreate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationMessageDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationMessageDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationMessageDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationMessageDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationMessageDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/NotificationMessage/Update": {
      "put": {
        "tags": [
          "NotificationMessage"
        ],
        "operationId": "notificationMessageUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationMessageDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationMessageDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationMessageDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationMessageDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationMessageDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/NotificationMessage/Delete": {
      "delete": {
        "tags": [
          "NotificationMessage"
        ],
        "operationId": "notificationMessageDelete",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/NotificationTemplate/Delete": {
      "post": {
        "tags": [
          "NotificationTemplate"
        ],
        "operationId": "notificationTemplateDelete",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GuidEntityDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GuidEntityDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GuidEntityDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GuidEntityDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/NotificationTemplate/Update": {
      "put": {
        "tags": [
          "NotificationTemplate"
        ],
        "operationId": "notificationTemplateUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationTemplateDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationTemplateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationTemplateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationTemplateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplateDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/NotificationTemplate/GetAll": {
      "get": {
        "tags": [
          "NotificationTemplate"
        ],
        "operationId": "notificationTemplateGetAll",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplateDtoPagedResultDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/NotificationTemplate/Query": {
      "get": {
        "tags": [
          "NotificationTemplate"
        ],
        "summary": "Query entity data. \r\nNOTE: don't use on prod, will be merged with the `Get`endpoint soon",
        "operationId": "notificationTemplateQuery",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplateGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/NotificationTemplate/QueryAll": {
      "get": {
        "tags": [
          "NotificationTemplate"
        ],
        "summary": "Query entities list\r\nNOTE: don't use on prod, will be merged with the GetAll endpoint soon",
        "operationId": "notificationTemplateQueryAll",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `items[]` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplatePagedResultDtoGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/NotificationTemplate/Get": {
      "get": {
        "tags": [
          "NotificationTemplate"
        ],
        "operationId": "notificationTemplateGet",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplateDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/NotificationTemplate/Create": {
      "post": {
        "tags": [
          "NotificationTemplate"
        ],
        "operationId": "notificationTemplateCreate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationTemplateDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationTemplateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationTemplateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationTemplateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplateDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/Order/Get": {
      "get": {
        "tags": [
          "Order"
        ],
        "operationId": "orderGet",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/Order/UpdateGql": {
      "put": {
        "tags": [
          "Order"
        ],
        "summary": "Update entity data. \r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "orderUpdateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/OrderGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrderGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/Order/Update": {
      "put": {
        "tags": [
          "Order"
        ],
        "operationId": "orderUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/OrderGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrderGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/Order/CreateGql": {
      "post": {
        "tags": [
          "Order"
        ],
        "summary": "Create entity.\r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "orderCreateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/OrderGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrderGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/Order/Create": {
      "post": {
        "tags": [
          "Order"
        ],
        "operationId": "orderCreate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/OrderGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrderGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/Order/GetAll": {
      "get": {
        "tags": [
          "Order"
        ],
        "operationId": "orderGetAll",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderGuidDynamicDtoPagedResultDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/Order/Query": {
      "get": {
        "tags": [
          "Order"
        ],
        "summary": "Query entity data. \r\nNOTE: don't use on prod, will be merged with the `Get`endpoint soon",
        "operationId": "orderQuery",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/Order/QueryAll": {
      "get": {
        "tags": [
          "Order"
        ],
        "summary": "Query entities list\r\nNOTE: don't use on prod, will be merged with the GetAll endpoint soon",
        "operationId": "orderQueryAll",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `items[]` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderPagedResultDtoGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/Order/Delete": {
      "delete": {
        "tags": [
          "Order"
        ],
        "operationId": "orderDelete",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/Enterprise/OrganisationBankAccount/Get": {
      "get": {
        "tags": [
          "OrganisationBankAccount"
        ],
        "operationId": "organisationBankAccountGet",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationBankAccountGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/OrganisationBankAccount/UpdateGql": {
      "put": {
        "tags": [
          "OrganisationBankAccount"
        ],
        "summary": "Update entity data. \r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "organisationBankAccountUpdateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationBankAccountGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationBankAccountGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationBankAccountGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationBankAccountGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationBankAccountGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/OrganisationBankAccount/Update": {
      "put": {
        "tags": [
          "OrganisationBankAccount"
        ],
        "operationId": "organisationBankAccountUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationBankAccountGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationBankAccountGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationBankAccountGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationBankAccountGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationBankAccountGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/OrganisationBankAccount/CreateGql": {
      "post": {
        "tags": [
          "OrganisationBankAccount"
        ],
        "summary": "Create entity.\r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "organisationBankAccountCreateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationBankAccountGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationBankAccountGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationBankAccountGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationBankAccountGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationBankAccountGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/OrganisationBankAccount/Create": {
      "post": {
        "tags": [
          "OrganisationBankAccount"
        ],
        "operationId": "organisationBankAccountCreate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationBankAccountGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationBankAccountGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationBankAccountGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationBankAccountGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationBankAccountGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/OrganisationBankAccount/GetAll": {
      "get": {
        "tags": [
          "OrganisationBankAccount"
        ],
        "operationId": "organisationBankAccountGetAll",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationBankAccountGuidDynamicDtoPagedResultDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/OrganisationBankAccount/Query": {
      "get": {
        "tags": [
          "OrganisationBankAccount"
        ],
        "summary": "Query entity data. \r\nNOTE: don't use on prod, will be merged with the `Get`endpoint soon",
        "operationId": "organisationBankAccountQuery",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationBankAccountGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/OrganisationBankAccount/QueryAll": {
      "get": {
        "tags": [
          "OrganisationBankAccount"
        ],
        "summary": "Query entities list\r\nNOTE: don't use on prod, will be merged with the GetAll endpoint soon",
        "operationId": "organisationBankAccountQueryAll",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `items[]` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationBankAccountPagedResultDtoGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/OrganisationBankAccount/Delete": {
      "delete": {
        "tags": [
          "OrganisationBankAccount"
        ],
        "operationId": "organisationBankAccountDelete",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/Enterprise/OrganisationPost/Get": {
      "get": {
        "tags": [
          "OrganisationPost"
        ],
        "operationId": "organisationPostGet",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationPostGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/OrganisationPost/UpdateGql": {
      "put": {
        "tags": [
          "OrganisationPost"
        ],
        "summary": "Update entity data. \r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "organisationPostUpdateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationPostGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationPostGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationPostGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationPostGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationPostGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/OrganisationPost/Update": {
      "put": {
        "tags": [
          "OrganisationPost"
        ],
        "operationId": "organisationPostUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationPostGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationPostGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationPostGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationPostGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationPostGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/OrganisationPost/CreateGql": {
      "post": {
        "tags": [
          "OrganisationPost"
        ],
        "summary": "Create entity.\r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "organisationPostCreateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationPostGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationPostGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationPostGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationPostGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationPostGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/OrganisationPost/Create": {
      "post": {
        "tags": [
          "OrganisationPost"
        ],
        "operationId": "organisationPostCreate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationPostGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationPostGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationPostGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationPostGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationPostGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/OrganisationPost/GetAll": {
      "get": {
        "tags": [
          "OrganisationPost"
        ],
        "operationId": "organisationPostGetAll",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationPostGuidDynamicDtoPagedResultDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/OrganisationPost/Query": {
      "get": {
        "tags": [
          "OrganisationPost"
        ],
        "summary": "Query entity data. \r\nNOTE: don't use on prod, will be merged with the `Get`endpoint soon",
        "operationId": "organisationPostQuery",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationPostGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/OrganisationPost/QueryAll": {
      "get": {
        "tags": [
          "OrganisationPost"
        ],
        "summary": "Query entities list\r\nNOTE: don't use on prod, will be merged with the GetAll endpoint soon",
        "operationId": "organisationPostQueryAll",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `items[]` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationPostPagedResultDtoGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/OrganisationPost/Delete": {
      "delete": {
        "tags": [
          "OrganisationPost"
        ],
        "operationId": "organisationPostDelete",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/Enterprise/OrganisationPostAppointment/Get": {
      "get": {
        "tags": [
          "OrganisationPostAppointment"
        ],
        "operationId": "organisationPostAppointmentGet",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationPostAppointmentGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/OrganisationPostAppointment/UpdateGql": {
      "put": {
        "tags": [
          "OrganisationPostAppointment"
        ],
        "summary": "Update entity data. \r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "organisationPostAppointmentUpdateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationPostAppointmentGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationPostAppointmentGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationPostAppointmentGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationPostAppointmentGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationPostAppointmentGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/OrganisationPostAppointment/Update": {
      "put": {
        "tags": [
          "OrganisationPostAppointment"
        ],
        "operationId": "organisationPostAppointmentUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationPostAppointmentGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationPostAppointmentGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationPostAppointmentGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationPostAppointmentGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationPostAppointmentGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/OrganisationPostAppointment/CreateGql": {
      "post": {
        "tags": [
          "OrganisationPostAppointment"
        ],
        "summary": "Create entity.\r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "organisationPostAppointmentCreateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationPostAppointmentGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationPostAppointmentGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationPostAppointmentGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationPostAppointmentGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationPostAppointmentGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/OrganisationPostAppointment/Create": {
      "post": {
        "tags": [
          "OrganisationPostAppointment"
        ],
        "operationId": "organisationPostAppointmentCreate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationPostAppointmentGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationPostAppointmentGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationPostAppointmentGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationPostAppointmentGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationPostAppointmentGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/OrganisationPostAppointment/GetAll": {
      "get": {
        "tags": [
          "OrganisationPostAppointment"
        ],
        "operationId": "organisationPostAppointmentGetAll",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationPostAppointmentGuidDynamicDtoPagedResultDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/OrganisationPostAppointment/Query": {
      "get": {
        "tags": [
          "OrganisationPostAppointment"
        ],
        "summary": "Query entity data. \r\nNOTE: don't use on prod, will be merged with the `Get`endpoint soon",
        "operationId": "organisationPostAppointmentQuery",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationPostAppointmentGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/OrganisationPostAppointment/QueryAll": {
      "get": {
        "tags": [
          "OrganisationPostAppointment"
        ],
        "summary": "Query entities list\r\nNOTE: don't use on prod, will be merged with the GetAll endpoint soon",
        "operationId": "organisationPostAppointmentQueryAll",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `items[]` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationPostAppointmentPagedResultDtoGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/OrganisationPostAppointment/Delete": {
      "delete": {
        "tags": [
          "OrganisationPostAppointment"
        ],
        "operationId": "organisationPostAppointmentDelete",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/Enterprise/OrganisationPostLevel/Get": {
      "get": {
        "tags": [
          "OrganisationPostLevel"
        ],
        "operationId": "organisationPostLevelGet",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationPostLevelGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/OrganisationPostLevel/UpdateGql": {
      "put": {
        "tags": [
          "OrganisationPostLevel"
        ],
        "summary": "Update entity data. \r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "organisationPostLevelUpdateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationPostLevelGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationPostLevelGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationPostLevelGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationPostLevelGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationPostLevelGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/OrganisationPostLevel/Update": {
      "put": {
        "tags": [
          "OrganisationPostLevel"
        ],
        "operationId": "organisationPostLevelUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationPostLevelGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationPostLevelGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationPostLevelGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationPostLevelGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationPostLevelGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/OrganisationPostLevel/CreateGql": {
      "post": {
        "tags": [
          "OrganisationPostLevel"
        ],
        "summary": "Create entity.\r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "organisationPostLevelCreateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationPostLevelGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationPostLevelGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationPostLevelGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationPostLevelGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationPostLevelGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/OrganisationPostLevel/Create": {
      "post": {
        "tags": [
          "OrganisationPostLevel"
        ],
        "operationId": "organisationPostLevelCreate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationPostLevelGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationPostLevelGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationPostLevelGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationPostLevelGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationPostLevelGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/OrganisationPostLevel/GetAll": {
      "get": {
        "tags": [
          "OrganisationPostLevel"
        ],
        "operationId": "organisationPostLevelGetAll",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationPostLevelGuidDynamicDtoPagedResultDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/OrganisationPostLevel/Query": {
      "get": {
        "tags": [
          "OrganisationPostLevel"
        ],
        "summary": "Query entity data. \r\nNOTE: don't use on prod, will be merged with the `Get`endpoint soon",
        "operationId": "organisationPostLevelQuery",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationPostLevelGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/OrganisationPostLevel/QueryAll": {
      "get": {
        "tags": [
          "OrganisationPostLevel"
        ],
        "summary": "Query entities list\r\nNOTE: don't use on prod, will be merged with the GetAll endpoint soon",
        "operationId": "organisationPostLevelQueryAll",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `items[]` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationPostLevelPagedResultDtoGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/OrganisationPostLevel/Delete": {
      "delete": {
        "tags": [
          "OrganisationPostLevel"
        ],
        "operationId": "organisationPostLevelDelete",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Otp/SendPin": {
      "post": {
        "tags": [
          "Otp"
        ],
        "summary": "Send one-time-pin",
        "operationId": "otpSendPin",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SendPinInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendPinInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SendPinInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SendPinInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendPinDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Otp/ResendPin": {
      "post": {
        "tags": [
          "Otp"
        ],
        "summary": "Resend one-time-pin",
        "operationId": "otpResendPin",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ResendPinInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResendPinInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ResendPinInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ResendPinInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendPinDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Otp/VerifyPin": {
      "post": {
        "tags": [
          "Otp"
        ],
        "summary": "Verify one-time-pin",
        "operationId": "otpVerifyPin",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyPinInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyPinInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyPinInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyPinInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerifyPinResponseAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Otp/Get": {
      "get": {
        "tags": [
          "Otp"
        ],
        "operationId": "otpGet",
        "parameters": [
          {
            "name": "operationId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OtpDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Otp/UpdateSettings": {
      "post": {
        "tags": [
          "Otp"
        ],
        "operationId": "otpUpdateSettings",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/OtpSettingsDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OtpSettingsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OtpSettingsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OtpSettingsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Otp/GetSettings": {
      "get": {
        "tags": [
          "Otp"
        ],
        "operationId": "otpGetSettings",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OtpSettingsDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/OtpAuditItem/GetAll": {
      "get": {
        "tags": [
          "OtpAuditItem"
        ],
        "operationId": "otpAuditItemGetAll",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OtpAuditItemDtoPagedResultDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/OtpAuditItem/Query": {
      "get": {
        "tags": [
          "OtpAuditItem"
        ],
        "summary": "Query entity data. \r\nNOTE: don't use on prod, will be merged with the `Get`endpoint soon",
        "operationId": "otpAuditItemQuery",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OtpAuditItemGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/OtpAuditItem/QueryAll": {
      "get": {
        "tags": [
          "OtpAuditItem"
        ],
        "summary": "Query entities list\r\nNOTE: don't use on prod, will be merged with the GetAll endpoint soon",
        "operationId": "otpAuditItemQueryAll",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `items[]` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OtpAuditItemPagedResultDtoGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/OtpAuditItem/Get": {
      "get": {
        "tags": [
          "OtpAuditItem"
        ],
        "operationId": "otpAuditItemGet",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OtpAuditItemDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/OtpAuditItem/Create": {
      "post": {
        "tags": [
          "OtpAuditItem"
        ],
        "operationId": "otpAuditItemCreate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/OtpAuditItemDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OtpAuditItemDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OtpAuditItemDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OtpAuditItemDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OtpAuditItemDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/OtpAuditItem/Update": {
      "put": {
        "tags": [
          "OtpAuditItem"
        ],
        "operationId": "otpAuditItemUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/OtpAuditItemDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OtpAuditItemDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OtpAuditItemDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OtpAuditItemDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OtpAuditItemDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/OtpAuditItem/Delete": {
      "delete": {
        "tags": [
          "OtpAuditItem"
        ],
        "operationId": "otpAuditItemDelete",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/Enterprise/PaymentIn/Get": {
      "get": {
        "tags": [
          "PaymentIn"
        ],
        "operationId": "paymentInGet",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentInGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/PaymentIn/UpdateGql": {
      "put": {
        "tags": [
          "PaymentIn"
        ],
        "summary": "Update entity data. \r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "paymentInUpdateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentInGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentInGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentInGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentInGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentInGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/PaymentIn/Update": {
      "put": {
        "tags": [
          "PaymentIn"
        ],
        "operationId": "paymentInUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentInGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentInGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentInGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentInGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentInGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/PaymentIn/CreateGql": {
      "post": {
        "tags": [
          "PaymentIn"
        ],
        "summary": "Create entity.\r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "paymentInCreateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentInGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentInGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentInGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentInGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentInGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/PaymentIn/Create": {
      "post": {
        "tags": [
          "PaymentIn"
        ],
        "operationId": "paymentInCreate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentInGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentInGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentInGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentInGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentInGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/PaymentIn/GetAll": {
      "get": {
        "tags": [
          "PaymentIn"
        ],
        "operationId": "paymentInGetAll",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentInGuidDynamicDtoPagedResultDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/PaymentIn/Query": {
      "get": {
        "tags": [
          "PaymentIn"
        ],
        "summary": "Query entity data. \r\nNOTE: don't use on prod, will be merged with the `Get`endpoint soon",
        "operationId": "paymentInQuery",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentInGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/PaymentIn/QueryAll": {
      "get": {
        "tags": [
          "PaymentIn"
        ],
        "summary": "Query entities list\r\nNOTE: don't use on prod, will be merged with the GetAll endpoint soon",
        "operationId": "paymentInQueryAll",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `items[]` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentInPagedResultDtoGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/PaymentIn/Delete": {
      "delete": {
        "tags": [
          "PaymentIn"
        ],
        "operationId": "paymentInDelete",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/Enterprise/PaymentInByEFT/Get": {
      "get": {
        "tags": [
          "PaymentInByEFT"
        ],
        "operationId": "paymentInByEFTGet",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentInByEFTGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/PaymentInByEFT/UpdateGql": {
      "put": {
        "tags": [
          "PaymentInByEFT"
        ],
        "summary": "Update entity data. \r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "paymentInByEFTUpdateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentInByEFTGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentInByEFTGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentInByEFTGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentInByEFTGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentInByEFTGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/PaymentInByEFT/Update": {
      "put": {
        "tags": [
          "PaymentInByEFT"
        ],
        "operationId": "paymentInByEFTUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentInByEFTGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentInByEFTGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentInByEFTGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentInByEFTGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentInByEFTGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/PaymentInByEFT/CreateGql": {
      "post": {
        "tags": [
          "PaymentInByEFT"
        ],
        "summary": "Create entity.\r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "paymentInByEFTCreateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentInByEFTGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentInByEFTGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentInByEFTGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentInByEFTGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentInByEFTGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/PaymentInByEFT/Create": {
      "post": {
        "tags": [
          "PaymentInByEFT"
        ],
        "operationId": "paymentInByEFTCreate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentInByEFTGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentInByEFTGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentInByEFTGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentInByEFTGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentInByEFTGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/PaymentInByEFT/GetAll": {
      "get": {
        "tags": [
          "PaymentInByEFT"
        ],
        "operationId": "paymentInByEFTGetAll",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentInByEFTGuidDynamicDtoPagedResultDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/PaymentInByEFT/Query": {
      "get": {
        "tags": [
          "PaymentInByEFT"
        ],
        "summary": "Query entity data. \r\nNOTE: don't use on prod, will be merged with the `Get`endpoint soon",
        "operationId": "paymentInByEFTQuery",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentInByEFTGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/PaymentInByEFT/QueryAll": {
      "get": {
        "tags": [
          "PaymentInByEFT"
        ],
        "summary": "Query entities list\r\nNOTE: don't use on prod, will be merged with the GetAll endpoint soon",
        "operationId": "paymentInByEFTQueryAll",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `items[]` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentInByEFTPagedResultDtoGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/PaymentInByEFT/Delete": {
      "delete": {
        "tags": [
          "PaymentInByEFT"
        ],
        "operationId": "paymentInByEFTDelete",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/Enterprise/PaymentInvoiceAllocation/Get": {
      "get": {
        "tags": [
          "PaymentInvoiceAllocation"
        ],
        "operationId": "paymentInvoiceAllocationGet",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentInvoiceAllocationGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/PaymentInvoiceAllocation/UpdateGql": {
      "put": {
        "tags": [
          "PaymentInvoiceAllocation"
        ],
        "summary": "Update entity data. \r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "paymentInvoiceAllocationUpdateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentInvoiceAllocationGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentInvoiceAllocationGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentInvoiceAllocationGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentInvoiceAllocationGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentInvoiceAllocationGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/PaymentInvoiceAllocation/Update": {
      "put": {
        "tags": [
          "PaymentInvoiceAllocation"
        ],
        "operationId": "paymentInvoiceAllocationUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentInvoiceAllocationGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentInvoiceAllocationGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentInvoiceAllocationGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentInvoiceAllocationGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentInvoiceAllocationGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/PaymentInvoiceAllocation/CreateGql": {
      "post": {
        "tags": [
          "PaymentInvoiceAllocation"
        ],
        "summary": "Create entity.\r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "paymentInvoiceAllocationCreateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentInvoiceAllocationGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentInvoiceAllocationGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentInvoiceAllocationGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentInvoiceAllocationGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentInvoiceAllocationGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/PaymentInvoiceAllocation/Create": {
      "post": {
        "tags": [
          "PaymentInvoiceAllocation"
        ],
        "operationId": "paymentInvoiceAllocationCreate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentInvoiceAllocationGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentInvoiceAllocationGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentInvoiceAllocationGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentInvoiceAllocationGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentInvoiceAllocationGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/PaymentInvoiceAllocation/GetAll": {
      "get": {
        "tags": [
          "PaymentInvoiceAllocation"
        ],
        "operationId": "paymentInvoiceAllocationGetAll",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentInvoiceAllocationGuidDynamicDtoPagedResultDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/PaymentInvoiceAllocation/Query": {
      "get": {
        "tags": [
          "PaymentInvoiceAllocation"
        ],
        "summary": "Query entity data. \r\nNOTE: don't use on prod, will be merged with the `Get`endpoint soon",
        "operationId": "paymentInvoiceAllocationQuery",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentInvoiceAllocationGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/PaymentInvoiceAllocation/QueryAll": {
      "get": {
        "tags": [
          "PaymentInvoiceAllocation"
        ],
        "summary": "Query entities list\r\nNOTE: don't use on prod, will be merged with the GetAll endpoint soon",
        "operationId": "paymentInvoiceAllocationQueryAll",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `items[]` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentInvoiceAllocationPagedResultDtoGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/PaymentInvoiceAllocation/Delete": {
      "delete": {
        "tags": [
          "PaymentInvoiceAllocation"
        ],
        "operationId": "paymentInvoiceAllocationDelete",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/Enterprise/PaymentOut/Get": {
      "get": {
        "tags": [
          "PaymentOut"
        ],
        "operationId": "paymentOutGet",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentOutGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/PaymentOut/UpdateGql": {
      "put": {
        "tags": [
          "PaymentOut"
        ],
        "summary": "Update entity data. \r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "paymentOutUpdateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentOutGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentOutGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentOutGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentOutGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentOutGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/PaymentOut/Update": {
      "put": {
        "tags": [
          "PaymentOut"
        ],
        "operationId": "paymentOutUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentOutGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentOutGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentOutGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentOutGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentOutGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/PaymentOut/CreateGql": {
      "post": {
        "tags": [
          "PaymentOut"
        ],
        "summary": "Create entity.\r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "paymentOutCreateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentOutGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentOutGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentOutGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentOutGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentOutGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/PaymentOut/Create": {
      "post": {
        "tags": [
          "PaymentOut"
        ],
        "operationId": "paymentOutCreate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentOutGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentOutGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentOutGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentOutGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentOutGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/PaymentOut/GetAll": {
      "get": {
        "tags": [
          "PaymentOut"
        ],
        "operationId": "paymentOutGetAll",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentOutGuidDynamicDtoPagedResultDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/PaymentOut/Query": {
      "get": {
        "tags": [
          "PaymentOut"
        ],
        "summary": "Query entity data. \r\nNOTE: don't use on prod, will be merged with the `Get`endpoint soon",
        "operationId": "paymentOutQuery",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentOutGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/PaymentOut/QueryAll": {
      "get": {
        "tags": [
          "PaymentOut"
        ],
        "summary": "Query entities list\r\nNOTE: don't use on prod, will be merged with the GetAll endpoint soon",
        "operationId": "paymentOutQueryAll",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `items[]` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentOutPagedResultDtoGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/PaymentOut/Delete": {
      "delete": {
        "tags": [
          "PaymentOut"
        ],
        "operationId": "paymentOutDelete",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/Enterprise/PaymentOutByEFT/Get": {
      "get": {
        "tags": [
          "PaymentOutByEFT"
        ],
        "operationId": "paymentOutByEFTGet",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentOutByEFTGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/PaymentOutByEFT/UpdateGql": {
      "put": {
        "tags": [
          "PaymentOutByEFT"
        ],
        "summary": "Update entity data. \r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "paymentOutByEFTUpdateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentOutByEFTGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentOutByEFTGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentOutByEFTGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentOutByEFTGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentOutByEFTGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/PaymentOutByEFT/Update": {
      "put": {
        "tags": [
          "PaymentOutByEFT"
        ],
        "operationId": "paymentOutByEFTUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentOutByEFTGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentOutByEFTGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentOutByEFTGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentOutByEFTGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentOutByEFTGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/PaymentOutByEFT/CreateGql": {
      "post": {
        "tags": [
          "PaymentOutByEFT"
        ],
        "summary": "Create entity.\r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "paymentOutByEFTCreateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentOutByEFTGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentOutByEFTGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentOutByEFTGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentOutByEFTGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentOutByEFTGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/PaymentOutByEFT/Create": {
      "post": {
        "tags": [
          "PaymentOutByEFT"
        ],
        "operationId": "paymentOutByEFTCreate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentOutByEFTGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentOutByEFTGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentOutByEFTGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentOutByEFTGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentOutByEFTGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/PaymentOutByEFT/GetAll": {
      "get": {
        "tags": [
          "PaymentOutByEFT"
        ],
        "operationId": "paymentOutByEFTGetAll",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentOutByEFTGuidDynamicDtoPagedResultDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/PaymentOutByEFT/Query": {
      "get": {
        "tags": [
          "PaymentOutByEFT"
        ],
        "summary": "Query entity data. \r\nNOTE: don't use on prod, will be merged with the `Get`endpoint soon",
        "operationId": "paymentOutByEFTQuery",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentOutByEFTGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/PaymentOutByEFT/QueryAll": {
      "get": {
        "tags": [
          "PaymentOutByEFT"
        ],
        "summary": "Query entities list\r\nNOTE: don't use on prod, will be merged with the GetAll endpoint soon",
        "operationId": "paymentOutByEFTQueryAll",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `items[]` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentOutByEFTPagedResultDtoGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/PaymentOutByEFT/Delete": {
      "delete": {
        "tags": [
          "PaymentOutByEFT"
        ],
        "operationId": "paymentOutByEFTDelete",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/Enterprise/PaymentPlan/Get": {
      "get": {
        "tags": [
          "PaymentPlan"
        ],
        "operationId": "paymentPlanGet",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentPlanGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/PaymentPlan/UpdateGql": {
      "put": {
        "tags": [
          "PaymentPlan"
        ],
        "summary": "Update entity data. \r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "paymentPlanUpdateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentPlanGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentPlanGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentPlanGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentPlanGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentPlanGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/PaymentPlan/Update": {
      "put": {
        "tags": [
          "PaymentPlan"
        ],
        "operationId": "paymentPlanUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentPlanGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentPlanGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentPlanGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentPlanGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentPlanGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/PaymentPlan/CreateGql": {
      "post": {
        "tags": [
          "PaymentPlan"
        ],
        "summary": "Create entity.\r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "paymentPlanCreateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentPlanGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentPlanGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentPlanGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentPlanGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentPlanGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/PaymentPlan/Create": {
      "post": {
        "tags": [
          "PaymentPlan"
        ],
        "operationId": "paymentPlanCreate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentPlanGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentPlanGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentPlanGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentPlanGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentPlanGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/PaymentPlan/GetAll": {
      "get": {
        "tags": [
          "PaymentPlan"
        ],
        "operationId": "paymentPlanGetAll",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentPlanGuidDynamicDtoPagedResultDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/PaymentPlan/Query": {
      "get": {
        "tags": [
          "PaymentPlan"
        ],
        "summary": "Query entity data. \r\nNOTE: don't use on prod, will be merged with the `Get`endpoint soon",
        "operationId": "paymentPlanQuery",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentPlanGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/PaymentPlan/QueryAll": {
      "get": {
        "tags": [
          "PaymentPlan"
        ],
        "summary": "Query entities list\r\nNOTE: don't use on prod, will be merged with the GetAll endpoint soon",
        "operationId": "paymentPlanQueryAll",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `items[]` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentPlanPagedResultDtoGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/PaymentPlan/Delete": {
      "delete": {
        "tags": [
          "PaymentPlan"
        ],
        "operationId": "paymentPlanDelete",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/Enterprise/PaymentPlanLine/Get": {
      "get": {
        "tags": [
          "PaymentPlanLine"
        ],
        "operationId": "paymentPlanLineGet",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentPlanLineGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/PaymentPlanLine/UpdateGql": {
      "put": {
        "tags": [
          "PaymentPlanLine"
        ],
        "summary": "Update entity data. \r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "paymentPlanLineUpdateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentPlanLineGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentPlanLineGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentPlanLineGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentPlanLineGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentPlanLineGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/PaymentPlanLine/Update": {
      "put": {
        "tags": [
          "PaymentPlanLine"
        ],
        "operationId": "paymentPlanLineUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentPlanLineGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentPlanLineGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentPlanLineGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentPlanLineGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentPlanLineGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/PaymentPlanLine/CreateGql": {
      "post": {
        "tags": [
          "PaymentPlanLine"
        ],
        "summary": "Create entity.\r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "paymentPlanLineCreateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentPlanLineGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentPlanLineGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentPlanLineGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentPlanLineGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentPlanLineGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/PaymentPlanLine/Create": {
      "post": {
        "tags": [
          "PaymentPlanLine"
        ],
        "operationId": "paymentPlanLineCreate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentPlanLineGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentPlanLineGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentPlanLineGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentPlanLineGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentPlanLineGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/PaymentPlanLine/GetAll": {
      "get": {
        "tags": [
          "PaymentPlanLine"
        ],
        "operationId": "paymentPlanLineGetAll",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentPlanLineGuidDynamicDtoPagedResultDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/PaymentPlanLine/Query": {
      "get": {
        "tags": [
          "PaymentPlanLine"
        ],
        "summary": "Query entity data. \r\nNOTE: don't use on prod, will be merged with the `Get`endpoint soon",
        "operationId": "paymentPlanLineQuery",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentPlanLineGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/PaymentPlanLine/QueryAll": {
      "get": {
        "tags": [
          "PaymentPlanLine"
        ],
        "summary": "Query entities list\r\nNOTE: don't use on prod, will be merged with the GetAll endpoint soon",
        "operationId": "paymentPlanLineQueryAll",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `items[]` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentPlanLinePagedResultDtoGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/PaymentPlanLine/Delete": {
      "delete": {
        "tags": [
          "PaymentPlanLine"
        ],
        "operationId": "paymentPlanLineDelete",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/Epm/PerformanceReport/Get": {
      "get": {
        "tags": [
          "PerformanceReport"
        ],
        "operationId": "performanceReportGet",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PerformanceReportGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Epm/PerformanceReport/UpdateGql": {
      "put": {
        "tags": [
          "PerformanceReport"
        ],
        "summary": "Update entity data. \r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "performanceReportUpdateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PerformanceReportGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PerformanceReportGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PerformanceReportGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PerformanceReportGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PerformanceReportGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Epm/PerformanceReport/Update": {
      "put": {
        "tags": [
          "PerformanceReport"
        ],
        "operationId": "performanceReportUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PerformanceReportGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PerformanceReportGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PerformanceReportGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PerformanceReportGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PerformanceReportGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Epm/PerformanceReport/CreateGql": {
      "post": {
        "tags": [
          "PerformanceReport"
        ],
        "summary": "Create entity.\r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "performanceReportCreateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PerformanceReportGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PerformanceReportGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PerformanceReportGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PerformanceReportGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PerformanceReportGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Epm/PerformanceReport/Create": {
      "post": {
        "tags": [
          "PerformanceReport"
        ],
        "operationId": "performanceReportCreate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PerformanceReportGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PerformanceReportGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PerformanceReportGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PerformanceReportGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PerformanceReportGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Epm/PerformanceReport/GetAll": {
      "get": {
        "tags": [
          "PerformanceReport"
        ],
        "operationId": "performanceReportGetAll",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PerformanceReportGuidDynamicDtoPagedResultDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Epm/PerformanceReport/Query": {
      "get": {
        "tags": [
          "PerformanceReport"
        ],
        "summary": "Query entity data. \r\nNOTE: don't use on prod, will be merged with the `Get`endpoint soon",
        "operationId": "performanceReportQuery",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PerformanceReportGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Epm/PerformanceReport/QueryAll": {
      "get": {
        "tags": [
          "PerformanceReport"
        ],
        "summary": "Query entities list\r\nNOTE: don't use on prod, will be merged with the GetAll endpoint soon",
        "operationId": "performanceReportQueryAll",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `items[]` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PerformanceReportPagedResultDtoGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Epm/PerformanceReport/Delete": {
      "delete": {
        "tags": [
          "PerformanceReport"
        ],
        "operationId": "performanceReportDelete",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/Epm/PerformanceReportAllowedComponentType/Get": {
      "get": {
        "tags": [
          "PerformanceReportAllowedComponentType"
        ],
        "operationId": "performanceReportAllowedComponentTypeGet",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PerformanceReportAllowedComponentTypeGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Epm/PerformanceReportAllowedComponentType/UpdateGql": {
      "put": {
        "tags": [
          "PerformanceReportAllowedComponentType"
        ],
        "summary": "Update entity data. \r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "performanceReportAllowedComponentTypeUpdateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PerformanceReportAllowedComponentTypeGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PerformanceReportAllowedComponentTypeGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PerformanceReportAllowedComponentTypeGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PerformanceReportAllowedComponentTypeGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PerformanceReportAllowedComponentTypeGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Epm/PerformanceReportAllowedComponentType/Update": {
      "put": {
        "tags": [
          "PerformanceReportAllowedComponentType"
        ],
        "operationId": "performanceReportAllowedComponentTypeUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PerformanceReportAllowedComponentTypeGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PerformanceReportAllowedComponentTypeGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PerformanceReportAllowedComponentTypeGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PerformanceReportAllowedComponentTypeGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PerformanceReportAllowedComponentTypeGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Epm/PerformanceReportAllowedComponentType/CreateGql": {
      "post": {
        "tags": [
          "PerformanceReportAllowedComponentType"
        ],
        "summary": "Create entity.\r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "performanceReportAllowedComponentTypeCreateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PerformanceReportAllowedComponentTypeGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PerformanceReportAllowedComponentTypeGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PerformanceReportAllowedComponentTypeGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PerformanceReportAllowedComponentTypeGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PerformanceReportAllowedComponentTypeGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Epm/PerformanceReportAllowedComponentType/Create": {
      "post": {
        "tags": [
          "PerformanceReportAllowedComponentType"
        ],
        "operationId": "performanceReportAllowedComponentTypeCreate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PerformanceReportAllowedComponentTypeGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PerformanceReportAllowedComponentTypeGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PerformanceReportAllowedComponentTypeGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PerformanceReportAllowedComponentTypeGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PerformanceReportAllowedComponentTypeGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Epm/PerformanceReportAllowedComponentType/GetAll": {
      "get": {
        "tags": [
          "PerformanceReportAllowedComponentType"
        ],
        "operationId": "performanceReportAllowedComponentTypeGetAll",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PerformanceReportAllowedComponentTypeGuidDynamicDtoPagedResultDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Epm/PerformanceReportAllowedComponentType/Query": {
      "get": {
        "tags": [
          "PerformanceReportAllowedComponentType"
        ],
        "summary": "Query entity data. \r\nNOTE: don't use on prod, will be merged with the `Get`endpoint soon",
        "operationId": "performanceReportAllowedComponentTypeQuery",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PerformanceReportAllowedComponentTypeGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Epm/PerformanceReportAllowedComponentType/QueryAll": {
      "get": {
        "tags": [
          "PerformanceReportAllowedComponentType"
        ],
        "summary": "Query entities list\r\nNOTE: don't use on prod, will be merged with the GetAll endpoint soon",
        "operationId": "performanceReportAllowedComponentTypeQueryAll",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `items[]` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PerformanceReportAllowedComponentTypePagedResultDtoGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Epm/PerformanceReportAllowedComponentType/Delete": {
      "delete": {
        "tags": [
          "PerformanceReportAllowedComponentType"
        ],
        "operationId": "performanceReportAllowedComponentTypeDelete",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Epm/PerformanceReportAllowedComponentTypes/GetFlattenedAllowedComponentTypesByTemplateId": {
      "get": {
        "tags": [
          "PerformanceReportAllowedComponentTypes"
        ],
        "operationId": "performanceReportAllowedComponentTypesGetFlattenedAllowedComponentTypesByTemplateId",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FlattenedAllowedComponentTypesDtoListAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Epm/PerformanceReportTemplate/Get": {
      "get": {
        "tags": [
          "PerformanceReportTemplate"
        ],
        "operationId": "performanceReportTemplateGet",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PerformanceReportTemplateGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Epm/PerformanceReportTemplate/UpdateGql": {
      "put": {
        "tags": [
          "PerformanceReportTemplate"
        ],
        "summary": "Update entity data. \r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "performanceReportTemplateUpdateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PerformanceReportTemplateGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PerformanceReportTemplateGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PerformanceReportTemplateGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PerformanceReportTemplateGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PerformanceReportTemplateGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Epm/PerformanceReportTemplate/Update": {
      "put": {
        "tags": [
          "PerformanceReportTemplate"
        ],
        "operationId": "performanceReportTemplateUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PerformanceReportTemplateGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PerformanceReportTemplateGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PerformanceReportTemplateGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PerformanceReportTemplateGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PerformanceReportTemplateGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Epm/PerformanceReportTemplate/CreateGql": {
      "post": {
        "tags": [
          "PerformanceReportTemplate"
        ],
        "summary": "Create entity.\r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "performanceReportTemplateCreateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PerformanceReportTemplateGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PerformanceReportTemplateGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PerformanceReportTemplateGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PerformanceReportTemplateGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PerformanceReportTemplateGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Epm/PerformanceReportTemplate/Create": {
      "post": {
        "tags": [
          "PerformanceReportTemplate"
        ],
        "operationId": "performanceReportTemplateCreate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PerformanceReportTemplateGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PerformanceReportTemplateGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PerformanceReportTemplateGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PerformanceReportTemplateGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PerformanceReportTemplateGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Epm/PerformanceReportTemplate/GetAll": {
      "get": {
        "tags": [
          "PerformanceReportTemplate"
        ],
        "operationId": "performanceReportTemplateGetAll",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PerformanceReportTemplateGuidDynamicDtoPagedResultDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Epm/PerformanceReportTemplate/Query": {
      "get": {
        "tags": [
          "PerformanceReportTemplate"
        ],
        "summary": "Query entity data. \r\nNOTE: don't use on prod, will be merged with the `Get`endpoint soon",
        "operationId": "performanceReportTemplateQuery",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PerformanceReportTemplateGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Epm/PerformanceReportTemplate/QueryAll": {
      "get": {
        "tags": [
          "PerformanceReportTemplate"
        ],
        "summary": "Query entities list\r\nNOTE: don't use on prod, will be merged with the GetAll endpoint soon",
        "operationId": "performanceReportTemplateQueryAll",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `items[]` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PerformanceReportTemplatePagedResultDtoGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Epm/PerformanceReportTemplate/Delete": {
      "delete": {
        "tags": [
          "PerformanceReportTemplate"
        ],
        "operationId": "performanceReportTemplateDelete",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/Enterprise/Period/Get": {
      "get": {
        "tags": [
          "Period"
        ],
        "operationId": "periodGet",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PeriodGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/Period/UpdateGql": {
      "put": {
        "tags": [
          "Period"
        ],
        "summary": "Update entity data. \r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "periodUpdateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PeriodGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PeriodGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PeriodGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PeriodGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PeriodGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/Period/Update": {
      "put": {
        "tags": [
          "Period"
        ],
        "operationId": "periodUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PeriodGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PeriodGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PeriodGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PeriodGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PeriodGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/Period/CreateGql": {
      "post": {
        "tags": [
          "Period"
        ],
        "summary": "Create entity.\r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "periodCreateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PeriodGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PeriodGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PeriodGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PeriodGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PeriodGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/Period/Create": {
      "post": {
        "tags": [
          "Period"
        ],
        "operationId": "periodCreate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PeriodGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PeriodGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PeriodGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PeriodGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PeriodGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/Period/GetAll": {
      "get": {
        "tags": [
          "Period"
        ],
        "operationId": "periodGetAll",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PeriodGuidDynamicDtoPagedResultDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/Period/Query": {
      "get": {
        "tags": [
          "Period"
        ],
        "summary": "Query entity data. \r\nNOTE: don't use on prod, will be merged with the `Get`endpoint soon",
        "operationId": "periodQuery",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PeriodGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/Period/QueryAll": {
      "get": {
        "tags": [
          "Period"
        ],
        "summary": "Query entities list\r\nNOTE: don't use on prod, will be merged with the GetAll endpoint soon",
        "operationId": "periodQueryAll",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `items[]` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PeriodPagedResultDtoGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/Period/Delete": {
      "delete": {
        "tags": [
          "Period"
        ],
        "operationId": "periodDelete",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Permission/Get": {
      "get": {
        "tags": [
          "Permission"
        ],
        "operationId": "permissionGet",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Permission/GetAll": {
      "get": {
        "tags": [
          "Permission"
        ],
        "operationId": "permissionGetAll",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionDtoListAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Permission/GetAllTree": {
      "get": {
        "tags": [
          "Permission"
        ],
        "operationId": "permissionGetAllTree",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionDtoListAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Permission/Create": {
      "post": {
        "tags": [
          "Permission"
        ],
        "operationId": "permissionCreate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PermissionDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PermissionDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PermissionDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PermissionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Permission/Update": {
      "put": {
        "tags": [
          "Permission"
        ],
        "operationId": "permissionUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PermissionDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PermissionDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PermissionDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PermissionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Permission"
        ],
        "operationId": "permissionUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PermissionDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PermissionDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PermissionDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PermissionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Permission/UpdateParent": {
      "put": {
        "tags": [
          "Permission"
        ],
        "operationId": "permissionUpdateParent",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PermissionDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PermissionDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PermissionDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PermissionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Permission/Delete": {
      "delete": {
        "tags": [
          "Permission"
        ],
        "operationId": "permissionDelete",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Permission/Autocomplete": {
      "get": {
        "tags": [
          "Permission"
        ],
        "operationId": "permissionAutocomplete",
        "parameters": [
          {
            "name": "term",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutocompleteItemDtoListAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/PermissionedObject/GetAllFlat": {
      "get": {
        "tags": [
          "PermissionedObject"
        ],
        "summary": "Get list of protected objects",
        "operationId": "permissionedObjectGetAllFlat",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "showNested",
            "in": "query",
            "description": "",
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "showHidden",
            "in": "query",
            "description": "",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionedObjectDtoListAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/PermissionedObject/GetAllTree": {
      "get": {
        "tags": [
          "PermissionedObject"
        ],
        "summary": "Get hierarchical list of protected objects",
        "operationId": "permissionedObjectGetAllTree",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "showHidden",
            "in": "query",
            "description": "",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionedObjectDtoListAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/PermissionedObject/GetByObjectName": {
      "get": {
        "tags": [
          "PermissionedObject"
        ],
        "summary": "Get protected object by name",
        "operationId": "permissionedObjectGetByObjectName",
        "parameters": [
          {
            "name": "objectName",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionedObjectDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/PermissionedObject/SetPermissions": {
      "post": {
        "tags": [
          "PermissionedObject"
        ],
        "summary": "Set required permissions for protected object by name",
        "operationId": "permissionedObjectSetPermissions",
        "parameters": [
          {
            "name": "objectName",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RefListPermissionedAccess"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefListPermissionedAccess"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RefListPermissionedAccess"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RefListPermissionedAccess"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionedObjectDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/PermissionedObject/GetApiPermissions": {
      "get": {
        "tags": [
          "PermissionedObject"
        ],
        "summary": "Get protected object for API by Service and Action names",
        "operationId": "permissionedObjectGetApiPermissions",
        "parameters": [
          {
            "name": "serviceName",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "actionName",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionedObjectDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/PermissionedObject/Get": {
      "get": {
        "tags": [
          "PermissionedObject"
        ],
        "operationId": "permissionedObjectGet",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionedObjectDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/PermissionedObject/Update": {
      "put": {
        "tags": [
          "PermissionedObject"
        ],
        "summary": "Update protected object data",
        "operationId": "permissionedObjectUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PermissionedObjectDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PermissionedObjectDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PermissionedObjectDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PermissionedObjectDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionedObjectDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/PermissionedObject/SetApiPermissions": {
      "post": {
        "tags": [
          "PermissionedObject"
        ],
        "summary": "Set required permissions for API by Service and Action names",
        "operationId": "permissionedObjectSetApiPermissions",
        "parameters": [
          {
            "name": "serviceName",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "actionName",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RefListPermissionedAccess"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefListPermissionedAccess"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RefListPermissionedAccess"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RefListPermissionedAccess"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionedObjectDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/PermissionedObject/ClearCache": {
      "post": {
        "tags": [
          "PermissionedObject"
        ],
        "summary": "Clear protected objects cache",
        "operationId": "permissionedObjectClearCache",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/PermissionedObject/GetAll": {
      "get": {
        "tags": [
          "PermissionedObject"
        ],
        "operationId": "permissionedObjectGetAll",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionedObjectDtoPagedResultDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/PermissionedObject/Query": {
      "get": {
        "tags": [
          "PermissionedObject"
        ],
        "summary": "Query entity data. \r\nNOTE: don't use on prod, will be merged with the `Get`endpoint soon",
        "operationId": "permissionedObjectQuery",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionedObjectGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/PermissionedObject/QueryAll": {
      "get": {
        "tags": [
          "PermissionedObject"
        ],
        "summary": "Query entities list\r\nNOTE: don't use on prod, will be merged with the GetAll endpoint soon",
        "operationId": "permissionedObjectQueryAll",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `items[]` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionedObjectPagedResultDtoGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/PermissionedObject/Create": {
      "post": {
        "tags": [
          "PermissionedObject"
        ],
        "operationId": "permissionedObjectCreate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PermissionedObjectDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PermissionedObjectDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PermissionedObjectDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PermissionedObjectDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionedObjectDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/PermissionedObject/Delete": {
      "delete": {
        "tags": [
          "PermissionedObject"
        ],
        "operationId": "permissionedObjectDelete",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Person/Create": {
      "post": {
        "tags": [
          "Person"
        ],
        "operationId": "personCreate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePersonAccountDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePersonAccountDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePersonAccountDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePersonAccountDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonAccountDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Person/AutocompleteByName": {
      "get": {
        "tags": [
          "Person"
        ],
        "operationId": "personAutocompleteByName",
        "parameters": [
          {
            "name": "term",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutocompleteItemDtoListAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Person/AutocompleteByRole": {
      "get": {
        "tags": [
          "Person"
        ],
        "operationId": "personAutocompleteByRole",
        "parameters": [
          {
            "name": "term",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "role",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutocompleteItemDtoListAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Person/Update": {
      "put": {
        "tags": [
          "Person"
        ],
        "operationId": "personUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PersonAccountDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PersonAccountDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PersonAccountDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PersonAccountDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonAccountDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Person/GetAll": {
      "get": {
        "tags": [
          "Person"
        ],
        "operationId": "personGetAll",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonAccountDtoPagedResultDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Person/Query": {
      "get": {
        "tags": [
          "Person"
        ],
        "summary": "Query entity data. \r\nNOTE: don't use on prod, will be merged with the `Get`endpoint soon",
        "operationId": "personQuery",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Person/QueryAll": {
      "get": {
        "tags": [
          "Person"
        ],
        "summary": "Query entities list\r\nNOTE: don't use on prod, will be merged with the GetAll endpoint soon",
        "operationId": "personQueryAll",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `items[]` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonPagedResultDtoGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Person/Get": {
      "get": {
        "tags": [
          "Person"
        ],
        "operationId": "personGet",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonAccountDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Person/Delete": {
      "delete": {
        "tags": [
          "Person"
        ],
        "operationId": "personDelete",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/Enterprise/PriceList/Get": {
      "get": {
        "tags": [
          "PriceList"
        ],
        "operationId": "priceListGet",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PriceListGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/PriceList/UpdateGql": {
      "put": {
        "tags": [
          "PriceList"
        ],
        "summary": "Update entity data. \r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "priceListUpdateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PriceListGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PriceListGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PriceListGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PriceListGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PriceListGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/PriceList/Update": {
      "put": {
        "tags": [
          "PriceList"
        ],
        "operationId": "priceListUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PriceListGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PriceListGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PriceListGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PriceListGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PriceListGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/PriceList/CreateGql": {
      "post": {
        "tags": [
          "PriceList"
        ],
        "summary": "Create entity.\r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "priceListCreateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PriceListGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PriceListGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PriceListGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PriceListGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PriceListGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/PriceList/Create": {
      "post": {
        "tags": [
          "PriceList"
        ],
        "operationId": "priceListCreate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PriceListGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PriceListGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PriceListGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PriceListGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PriceListGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/PriceList/GetAll": {
      "get": {
        "tags": [
          "PriceList"
        ],
        "operationId": "priceListGetAll",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PriceListGuidDynamicDtoPagedResultDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/PriceList/Query": {
      "get": {
        "tags": [
          "PriceList"
        ],
        "summary": "Query entity data. \r\nNOTE: don't use on prod, will be merged with the `Get`endpoint soon",
        "operationId": "priceListQuery",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PriceListGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/PriceList/QueryAll": {
      "get": {
        "tags": [
          "PriceList"
        ],
        "summary": "Query entities list\r\nNOTE: don't use on prod, will be merged with the GetAll endpoint soon",
        "operationId": "priceListQueryAll",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `items[]` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PriceListPagedResultDtoGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/PriceList/Delete": {
      "delete": {
        "tags": [
          "PriceList"
        ],
        "operationId": "priceListDelete",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/Enterprise/PriceListProductPrice/Get": {
      "get": {
        "tags": [
          "PriceListProductPrice"
        ],
        "operationId": "priceListProductPriceGet",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PriceListProductPriceGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/PriceListProductPrice/UpdateGql": {
      "put": {
        "tags": [
          "PriceListProductPrice"
        ],
        "summary": "Update entity data. \r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "priceListProductPriceUpdateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PriceListProductPriceGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PriceListProductPriceGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PriceListProductPriceGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PriceListProductPriceGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PriceListProductPriceGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/PriceListProductPrice/Update": {
      "put": {
        "tags": [
          "PriceListProductPrice"
        ],
        "operationId": "priceListProductPriceUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PriceListProductPriceGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PriceListProductPriceGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PriceListProductPriceGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PriceListProductPriceGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PriceListProductPriceGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/PriceListProductPrice/CreateGql": {
      "post": {
        "tags": [
          "PriceListProductPrice"
        ],
        "summary": "Create entity.\r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "priceListProductPriceCreateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PriceListProductPriceGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PriceListProductPriceGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PriceListProductPriceGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PriceListProductPriceGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PriceListProductPriceGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/PriceListProductPrice/Create": {
      "post": {
        "tags": [
          "PriceListProductPrice"
        ],
        "operationId": "priceListProductPriceCreate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PriceListProductPriceGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PriceListProductPriceGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PriceListProductPriceGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PriceListProductPriceGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PriceListProductPriceGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/PriceListProductPrice/GetAll": {
      "get": {
        "tags": [
          "PriceListProductPrice"
        ],
        "operationId": "priceListProductPriceGetAll",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PriceListProductPriceGuidDynamicDtoPagedResultDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/PriceListProductPrice/Query": {
      "get": {
        "tags": [
          "PriceListProductPrice"
        ],
        "summary": "Query entity data. \r\nNOTE: don't use on prod, will be merged with the `Get`endpoint soon",
        "operationId": "priceListProductPriceQuery",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PriceListProductPriceGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/PriceListProductPrice/QueryAll": {
      "get": {
        "tags": [
          "PriceListProductPrice"
        ],
        "summary": "Query entities list\r\nNOTE: don't use on prod, will be merged with the GetAll endpoint soon",
        "operationId": "priceListProductPriceQueryAll",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `items[]` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PriceListProductPricePagedResultDtoGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/PriceListProductPrice/Delete": {
      "delete": {
        "tags": [
          "PriceListProductPrice"
        ],
        "operationId": "priceListProductPriceDelete",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/SheshaWorkflow/ProcessableEntity/{id}/PastTimeLine": {
      "get": {
        "tags": [
          "ProcessableEntity"
        ],
        "operationId": "processableEntityPastTimeLine",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowExecutionLogResponseAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/SheshaWorkflow/ProcessConfigurationDocumentTemplate/Create": {
      "post": {
        "tags": [
          "ProcessConfigurationDocumentTemplate"
        ],
        "operationId": "processConfigurationDocumentTemplateCreate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "documentTemplate"
                ],
                "type": "object",
                "properties": {
                  "documentTemplate": {
                    "type": "string",
                    "format": "binary"
                  },
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "sortOrder": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "processConfiguration.displayText": {
                    "type": "string",
                    "description": "Entity display name"
                  },
                  "processConfiguration.id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "id": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              "encoding": {
                "documentTemplate": {
                  "style": "form"
                },
                "name": {
                  "style": "form"
                },
                "description": {
                  "style": "form"
                },
                "sortOrder": {
                  "style": "form"
                },
                "processConfiguration.displayText": {
                  "style": "form"
                },
                "processConfiguration.id": {
                  "style": "form"
                },
                "id": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessConfigurationDocumentTemplateDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/SheshaWorkflow/ProcessConfigurationDocumentTemplate/GetAll": {
      "get": {
        "tags": [
          "ProcessConfigurationDocumentTemplate"
        ],
        "operationId": "processConfigurationDocumentTemplateGetAll",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessConfigurationDocumentTemplateDtoPagedResultDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/SheshaWorkflow/ProcessConfigurationDocumentTemplate/Query": {
      "get": {
        "tags": [
          "ProcessConfigurationDocumentTemplate"
        ],
        "summary": "Query entity data. \r\nNOTE: don't use on prod, will be merged with the `Get`endpoint soon",
        "operationId": "processConfigurationDocumentTemplateQuery",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessConfigurationDocumentTemplateGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/SheshaWorkflow/ProcessConfigurationDocumentTemplate/QueryAll": {
      "get": {
        "tags": [
          "ProcessConfigurationDocumentTemplate"
        ],
        "summary": "Query entities list\r\nNOTE: don't use on prod, will be merged with the GetAll endpoint soon",
        "operationId": "processConfigurationDocumentTemplateQueryAll",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `items[]` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessConfigurationDocumentTemplatePagedResultDtoGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/SheshaWorkflow/ProcessConfigurationDocumentTemplate/Get": {
      "get": {
        "tags": [
          "ProcessConfigurationDocumentTemplate"
        ],
        "operationId": "processConfigurationDocumentTemplateGet",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessConfigurationDocumentTemplateDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/SheshaWorkflow/ProcessConfigurationDocumentTemplate/Update": {
      "put": {
        "tags": [
          "ProcessConfigurationDocumentTemplate"
        ],
        "operationId": "processConfigurationDocumentTemplateUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ProcessConfigurationDocumentTemplateDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProcessConfigurationDocumentTemplateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProcessConfigurationDocumentTemplateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProcessConfigurationDocumentTemplateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessConfigurationDocumentTemplateDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/SheshaWorkflow/ProcessConfigurationDocumentTemplate/Delete": {
      "delete": {
        "tags": [
          "ProcessConfigurationDocumentTemplate"
        ],
        "operationId": "processConfigurationDocumentTemplateDelete",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/Enterprise/Product/Get": {
      "get": {
        "tags": [
          "Product"
        ],
        "operationId": "productGet",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/Product/UpdateGql": {
      "put": {
        "tags": [
          "Product"
        ],
        "summary": "Update entity data. \r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "productUpdateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/Product/Update": {
      "put": {
        "tags": [
          "Product"
        ],
        "operationId": "productUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/Product/CreateGql": {
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "Create entity.\r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "productCreateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/Product/Create": {
      "post": {
        "tags": [
          "Product"
        ],
        "operationId": "productCreate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/Product/GetAll": {
      "get": {
        "tags": [
          "Product"
        ],
        "operationId": "productGetAll",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductGuidDynamicDtoPagedResultDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/Product/Query": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Query entity data. \r\nNOTE: don't use on prod, will be merged with the `Get`endpoint soon",
        "operationId": "productQuery",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/Product/QueryAll": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Query entities list\r\nNOTE: don't use on prod, will be merged with the GetAll endpoint soon",
        "operationId": "productQueryAll",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `items[]` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductPagedResultDtoGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/Product/Delete": {
      "delete": {
        "tags": [
          "Product"
        ],
        "operationId": "productDelete",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/Epm/ProgressReport/Get": {
      "get": {
        "tags": [
          "ProgressReport"
        ],
        "operationId": "progressReportGet",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgressReportGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Epm/ProgressReport/UpdateGql": {
      "put": {
        "tags": [
          "ProgressReport"
        ],
        "summary": "Update entity data. \r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "progressReportUpdateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ProgressReportGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProgressReportGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProgressReportGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProgressReportGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgressReportGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Epm/ProgressReport/Update": {
      "put": {
        "tags": [
          "ProgressReport"
        ],
        "operationId": "progressReportUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ProgressReportGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProgressReportGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProgressReportGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProgressReportGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgressReportGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Epm/ProgressReport/CreateGql": {
      "post": {
        "tags": [
          "ProgressReport"
        ],
        "summary": "Create entity.\r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "progressReportCreateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ProgressReportGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProgressReportGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProgressReportGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProgressReportGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgressReportGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Epm/ProgressReport/Create": {
      "post": {
        "tags": [
          "ProgressReport"
        ],
        "operationId": "progressReportCreate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ProgressReportGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProgressReportGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProgressReportGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProgressReportGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgressReportGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Epm/ProgressReport/GetAll": {
      "get": {
        "tags": [
          "ProgressReport"
        ],
        "operationId": "progressReportGetAll",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgressReportGuidDynamicDtoPagedResultDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Epm/ProgressReport/Query": {
      "get": {
        "tags": [
          "ProgressReport"
        ],
        "summary": "Query entity data. \r\nNOTE: don't use on prod, will be merged with the `Get`endpoint soon",
        "operationId": "progressReportQuery",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgressReportGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Epm/ProgressReport/QueryAll": {
      "get": {
        "tags": [
          "ProgressReport"
        ],
        "summary": "Query entities list\r\nNOTE: don't use on prod, will be merged with the GetAll endpoint soon",
        "operationId": "progressReportQueryAll",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `items[]` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgressReportPagedResultDtoGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Epm/ProgressReport/Delete": {
      "delete": {
        "tags": [
          "ProgressReport"
        ],
        "operationId": "progressReportDelete",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Push/Notifiers": {
      "get": {
        "tags": [
          "PushNotifiers"
        ],
        "operationId": "pushNotifiersGetAll",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PushNotifierDtoListAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/Push/Settings": {
      "get": {
        "tags": [
          "PushSettings"
        ],
        "summary": "Get push notifications settings",
        "operationId": "pushSettingsGetSettings",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PushSettingsDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "PushSettings"
        ],
        "summary": "Update push notifications settings",
        "operationId": "pushSettingsUpdateSettings",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PushSettingsDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PushSettingsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PushSettingsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PushSettingsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/QuestionAnswers/Create": {
      "post": {
        "tags": [
          "QuestionAnswers"
        ],
        "operationId": "questionAnswersCreate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UserAnswerDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserAnswerDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserAnswerDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserAnswerDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserAnswerDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/QuestionAnswers/GetAll": {
      "get": {
        "tags": [
          "QuestionAnswers"
        ],
        "operationId": "questionAnswersGetAll",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserAnswerDtoPagedResultDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/QuestionAnswers/Query": {
      "get": {
        "tags": [
          "QuestionAnswers"
        ],
        "summary": "Query entity data. \r\nNOTE: don't use on prod, will be merged with the `Get`endpoint soon",
        "operationId": "questionAnswersQuery",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuestionAssignmentGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/QuestionAnswers/QueryAll": {
      "get": {
        "tags": [
          "QuestionAnswers"
        ],
        "summary": "Query entities list\r\nNOTE: don't use on prod, will be merged with the GetAll endpoint soon",
        "operationId": "questionAnswersQueryAll",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `items[]` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuestionAssignmentPagedResultDtoGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/QuestionAnswers/Get": {
      "get": {
        "tags": [
          "QuestionAnswers"
        ],
        "operationId": "questionAnswersGet",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserAnswerDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/QuestionAnswers/Update": {
      "put": {
        "tags": [
          "QuestionAnswers"
        ],
        "operationId": "questionAnswersUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UserAnswerDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserAnswerDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserAnswerDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserAnswerDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserAnswerDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/QuestionAnswers/Delete": {
      "delete": {
        "tags": [
          "QuestionAnswers"
        ],
        "operationId": "questionAnswersDelete",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/ReferenceList/GetItems": {
      "get": {
        "tags": [
          "ReferenceList"
        ],
        "summary": "Get ReferenceList Items",
        "operationId": "referenceListGetItems",
        "parameters": [
          {
            "name": "namespace",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReferenceListItemDtoListAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/ReferenceList/ClearCache": {
      "post": {
        "tags": [
          "ReferenceList"
        ],
        "summary": "Clear reference list cache",
        "operationId": "referenceListClearCacheFull",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/ReferenceList/ClearCache/{namespace}/{name}": {
      "post": {
        "tags": [
          "ReferenceList"
        ],
        "operationId": "referenceListClearCache",
        "parameters": [
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/ReferenceList/GetAll": {
      "get": {
        "tags": [
          "ReferenceList"
        ],
        "operationId": "referenceListGetAll",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReferenceListDtoPagedResultDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/ReferenceList/Query": {
      "get": {
        "tags": [
          "ReferenceList"
        ],
        "summary": "Query entity data. \r\nNOTE: don't use on prod, will be merged with the `Get`endpoint soon",
        "operationId": "referenceListQuery",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReferenceListGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/ReferenceList/QueryAll": {
      "get": {
        "tags": [
          "ReferenceList"
        ],
        "summary": "Query entities list\r\nNOTE: don't use on prod, will be merged with the GetAll endpoint soon",
        "operationId": "referenceListQueryAll",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `items[]` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReferenceListPagedResultDtoGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/ReferenceList/Get": {
      "get": {
        "tags": [
          "ReferenceList"
        ],
        "operationId": "referenceListGet",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReferenceListDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/ReferenceList/Create": {
      "post": {
        "tags": [
          "ReferenceList"
        ],
        "operationId": "referenceListCreate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ReferenceListDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReferenceListDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReferenceListDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ReferenceListDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReferenceListDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/ReferenceList/Update": {
      "put": {
        "tags": [
          "ReferenceList"
        ],
        "operationId": "referenceListUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ReferenceListDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReferenceListDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReferenceListDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ReferenceListDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReferenceListDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/ReferenceList/Delete": {
      "delete": {
        "tags": [
          "ReferenceList"
        ],
        "operationId": "referenceListDelete",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/ReferenceListItem/GetAll": {
      "get": {
        "tags": [
          "ReferenceListItem"
        ],
        "operationId": "referenceListItemGetAll",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReferenceListItemDtoPagedResultDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/ReferenceListItem/Query": {
      "get": {
        "tags": [
          "ReferenceListItem"
        ],
        "summary": "Query entity data. \r\nNOTE: don't use on prod, will be merged with the `Get`endpoint soon",
        "operationId": "referenceListItemQuery",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReferenceListItemGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/ReferenceListItem/QueryAll": {
      "get": {
        "tags": [
          "ReferenceListItem"
        ],
        "summary": "Query entities list\r\nNOTE: don't use on prod, will be merged with the GetAll endpoint soon",
        "operationId": "referenceListItemQueryAll",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `items[]` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReferenceListItemPagedResultDtoGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/ReferenceListItem/Get": {
      "get": {
        "tags": [
          "ReferenceListItem"
        ],
        "operationId": "referenceListItemGet",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReferenceListItemDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/ReferenceListItem/Create": {
      "post": {
        "tags": [
          "ReferenceListItem"
        ],
        "operationId": "referenceListItemCreate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ReferenceListItemDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReferenceListItemDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReferenceListItemDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ReferenceListItemDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReferenceListItemDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/ReferenceListItem/Update": {
      "put": {
        "tags": [
          "ReferenceListItem"
        ],
        "operationId": "referenceListItemUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ReferenceListItemDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReferenceListItemDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReferenceListItemDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ReferenceListItemDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReferenceListItemDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/ReferenceListItem/Delete": {
      "delete": {
        "tags": [
          "ReferenceListItem"
        ],
        "operationId": "referenceListItemDelete",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/ReportDesigner/GetReportDesignerModel": {
      "post": {
        "tags": [
          "ReportDesigner"
        ],
        "operationId": "reportDesignerGetReportDesignerModel",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "reportUrl": {
                    "type": "string"
                  }
                }
              },
              "encoding": {
                "reportUrl": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActionResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Reporting/ReportingReport/PrepareReport": {
      "post": {
        "tags": [
          "ReportingReport"
        ],
        "operationId": "reportingReportPrepareReport",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/Reporting/ReportingReport/GetParameters": {
      "get": {
        "tags": [
          "ReportingReport"
        ],
        "operationId": "reportingReportGetParameters",
        "parameters": [
          {
            "name": "reportId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportingReportParameterDtoListAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Reporting/ReportingReport/GetAll": {
      "get": {
        "tags": [
          "ReportingReport"
        ],
        "operationId": "reportingReportGetAll",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportingReportDtoPagedResultDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Reporting/ReportingReport/Query": {
      "get": {
        "tags": [
          "ReportingReport"
        ],
        "summary": "Query entity data. \r\nNOTE: don't use on prod, will be merged with the `Get`endpoint soon",
        "operationId": "reportingReportQuery",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportingReportGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Reporting/ReportingReport/QueryAll": {
      "get": {
        "tags": [
          "ReportingReport"
        ],
        "summary": "Query entities list\r\nNOTE: don't use on prod, will be merged with the GetAll endpoint soon",
        "operationId": "reportingReportQueryAll",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `items[]` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportingReportPagedResultDtoGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Reporting/ReportingReport/Get": {
      "get": {
        "tags": [
          "ReportingReport"
        ],
        "operationId": "reportingReportGet",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportingReportDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Reporting/ReportingReport/Create": {
      "post": {
        "tags": [
          "ReportingReport"
        ],
        "operationId": "reportingReportCreate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ReportingReportDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportingReportDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportingReportDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ReportingReportDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportingReportDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Reporting/ReportingReport/Update": {
      "put": {
        "tags": [
          "ReportingReport"
        ],
        "operationId": "reportingReportUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ReportingReportDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportingReportDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportingReportDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ReportingReportDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportingReportDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Reporting/ReportingReport/Delete": {
      "delete": {
        "tags": [
          "ReportingReport"
        ],
        "operationId": "reportingReportDelete",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/Reporting/ReportingReportParameter/GetAll": {
      "get": {
        "tags": [
          "ReportingReportParameter"
        ],
        "operationId": "reportingReportParameterGetAll",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportingReportParameterDtoPagedResultDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Reporting/ReportingReportParameter/Query": {
      "get": {
        "tags": [
          "ReportingReportParameter"
        ],
        "summary": "Query entity data. \r\nNOTE: don't use on prod, will be merged with the `Get`endpoint soon",
        "operationId": "reportingReportParameterQuery",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportingReportParameterGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Reporting/ReportingReportParameter/QueryAll": {
      "get": {
        "tags": [
          "ReportingReportParameter"
        ],
        "summary": "Query entities list\r\nNOTE: don't use on prod, will be merged with the GetAll endpoint soon",
        "operationId": "reportingReportParameterQueryAll",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `items[]` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportingReportParameterPagedResultDtoGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Reporting/ReportingReportParameter/Get": {
      "get": {
        "tags": [
          "ReportingReportParameter"
        ],
        "operationId": "reportingReportParameterGet",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportingReportParameterDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Reporting/ReportingReportParameter/Create": {
      "post": {
        "tags": [
          "ReportingReportParameter"
        ],
        "operationId": "reportingReportParameterCreate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ReportingReportParameterDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportingReportParameterDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportingReportParameterDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ReportingReportParameterDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportingReportParameterDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Reporting/ReportingReportParameter/Update": {
      "put": {
        "tags": [
          "ReportingReportParameter"
        ],
        "operationId": "reportingReportParameterUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ReportingReportParameterDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportingReportParameterDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportingReportParameterDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ReportingReportParameterDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportingReportParameterDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Reporting/ReportingReportParameter/Delete": {
      "delete": {
        "tags": [
          "ReportingReportParameter"
        ],
        "operationId": "reportingReportParameterDelete",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Role/Create": {
      "post": {
        "tags": [
          "Role"
        ],
        "operationId": "roleCreate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRoleDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRoleDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRoleDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRoleDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Role/GetRoles": {
      "get": {
        "tags": [
          "Role"
        ],
        "operationId": "roleGetRoles",
        "parameters": [
          {
            "name": "permission",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleListDtoListResultDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Role/Update": {
      "put": {
        "tags": [
          "Role"
        ],
        "operationId": "roleUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RoleDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RoleDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Role/Delete": {
      "delete": {
        "tags": [
          "Role"
        ],
        "operationId": "roleDelete",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Role/GetAllPermissions": {
      "get": {
        "tags": [
          "Role"
        ],
        "operationId": "roleGetAllPermissions",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionDtoListResultDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Role/GetRoleForEdit": {
      "get": {
        "tags": [
          "Role"
        ],
        "operationId": "roleGetRoleForEdit",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRoleForEditOutputAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Role/Get": {
      "get": {
        "tags": [
          "Role"
        ],
        "operationId": "roleGet",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Role/GetAll": {
      "get": {
        "tags": [
          "Role"
        ],
        "operationId": "roleGetAll",
        "parameters": [
          {
            "name": "keyword",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleDtoPagedResultDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Scheduler/ScheduledJob/StartJob": {
      "post": {
        "tags": [
          "ScheduledJob"
        ],
        "summary": "Run scheduled job",
        "operationId": "scheduledJobStartJob",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Scheduled job Id",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GuidAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Scheduler/ScheduledJob/EnqueueAll": {
      "post": {
        "tags": [
          "ScheduledJob"
        ],
        "summary": "Enqueue all jobs using Hangfire",
        "operationId": "scheduledJobEnqueueAll",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/Scheduler/ScheduledJob/RunTrigger": {
      "post": {
        "tags": [
          "ScheduledJob"
        ],
        "summary": "Run scheduled job trigger",
        "operationId": "scheduledJobRunTrigger",
        "parameters": [
          {
            "name": "triggerId",
            "in": "query",
            "description": "Trigger Id",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/Scheduler/ScheduledJob/BootstrapScheduledJobs": {
      "post": {
        "tags": [
          "ScheduledJob"
        ],
        "summary": "Bootstraps all scheduled jobs and default CRON triggers",
        "operationId": "scheduledJobBootstrapScheduledJobs",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Scheduler/ScheduledJob/Create": {
      "post": {
        "tags": [
          "ScheduledJob"
        ],
        "operationId": "scheduledJobCreate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduledJobDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduledJobDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduledJobDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduledJobDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduledJobDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Scheduler/ScheduledJob/Update": {
      "put": {
        "tags": [
          "ScheduledJob"
        ],
        "operationId": "scheduledJobUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduledJobDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduledJobDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduledJobDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduledJobDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduledJobDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Scheduler/ScheduledJob/Delete": {
      "delete": {
        "tags": [
          "ScheduledJob"
        ],
        "operationId": "scheduledJobDelete",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/Scheduler/ScheduledJob/GetAll": {
      "get": {
        "tags": [
          "ScheduledJob"
        ],
        "operationId": "scheduledJobGetAll",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduledJobDtoPagedResultDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Scheduler/ScheduledJob/Query": {
      "get": {
        "tags": [
          "ScheduledJob"
        ],
        "summary": "Query entity data. \r\nNOTE: don't use on prod, will be merged with the `Get`endpoint soon",
        "operationId": "scheduledJobQuery",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduledJobGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Scheduler/ScheduledJob/QueryAll": {
      "get": {
        "tags": [
          "ScheduledJob"
        ],
        "summary": "Query entities list\r\nNOTE: don't use on prod, will be merged with the GetAll endpoint soon",
        "operationId": "scheduledJobQueryAll",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `items[]` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduledJobPagedResultDtoGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Scheduler/ScheduledJob/Get": {
      "get": {
        "tags": [
          "ScheduledJob"
        ],
        "operationId": "scheduledJobGet",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduledJobDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Scheduler/ScheduledJobExecution/GetEventLogItems": {
      "get": {
        "tags": [
          "ScheduledJobExecution"
        ],
        "summary": "Get event log items for the specified job execution",
        "operationId": "scheduledJobExecutionGetEventLogItems",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventLogItemListAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Scheduler/ScheduledJobExecution/DownloadLogFile": {
      "get": {
        "tags": [
          "ScheduledJobExecution"
        ],
        "summary": "Download log file of the job execution",
        "operationId": "scheduledJobExecutionDownloadLogFile",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Id of the scheduled job execution",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileStreamResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Scheduler/ScheduledJobExecution/GetAll": {
      "get": {
        "tags": [
          "ScheduledJobExecution"
        ],
        "operationId": "scheduledJobExecutionGetAll",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduledJobExecutionDtoPagedResultDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Scheduler/ScheduledJobExecution/Query": {
      "get": {
        "tags": [
          "ScheduledJobExecution"
        ],
        "summary": "Query entity data. \r\nNOTE: don't use on prod, will be merged with the `Get`endpoint soon",
        "operationId": "scheduledJobExecutionQuery",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduledJobExecutionGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Scheduler/ScheduledJobExecution/QueryAll": {
      "get": {
        "tags": [
          "ScheduledJobExecution"
        ],
        "summary": "Query entities list\r\nNOTE: don't use on prod, will be merged with the GetAll endpoint soon",
        "operationId": "scheduledJobExecutionQueryAll",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `items[]` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduledJobExecutionPagedResultDtoGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Scheduler/ScheduledJobExecution/Get": {
      "get": {
        "tags": [
          "ScheduledJobExecution"
        ],
        "operationId": "scheduledJobExecutionGet",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduledJobExecutionDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Scheduler/ScheduledJobExecution/Create": {
      "post": {
        "tags": [
          "ScheduledJobExecution"
        ],
        "operationId": "scheduledJobExecutionCreate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduledJobExecutionDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduledJobExecutionDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduledJobExecutionDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduledJobExecutionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduledJobExecutionDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Scheduler/ScheduledJobExecution/Update": {
      "put": {
        "tags": [
          "ScheduledJobExecution"
        ],
        "operationId": "scheduledJobExecutionUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduledJobExecutionDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduledJobExecutionDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduledJobExecutionDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduledJobExecutionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduledJobExecutionDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Scheduler/ScheduledJobExecution/Delete": {
      "delete": {
        "tags": [
          "ScheduledJobExecution"
        ],
        "operationId": "scheduledJobExecutionDelete",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/Scheduler/ScheduledJobTrigger/Create": {
      "post": {
        "tags": [
          "ScheduledJobTrigger"
        ],
        "operationId": "scheduledJobTriggerCreate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduledJobTriggerDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduledJobTriggerDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduledJobTriggerDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduledJobTriggerDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduledJobTriggerDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Scheduler/ScheduledJobTrigger/Update": {
      "put": {
        "tags": [
          "ScheduledJobTrigger"
        ],
        "operationId": "scheduledJobTriggerUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduledJobTriggerDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduledJobTriggerDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduledJobTriggerDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduledJobTriggerDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduledJobTriggerDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Scheduler/ScheduledJobTrigger/Delete": {
      "delete": {
        "tags": [
          "ScheduledJobTrigger"
        ],
        "operationId": "scheduledJobTriggerDelete",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/Scheduler/ScheduledJobTrigger/GetAll": {
      "get": {
        "tags": [
          "ScheduledJobTrigger"
        ],
        "operationId": "scheduledJobTriggerGetAll",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduledJobTriggerDtoPagedResultDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Scheduler/ScheduledJobTrigger/Query": {
      "get": {
        "tags": [
          "ScheduledJobTrigger"
        ],
        "summary": "Query entity data. \r\nNOTE: don't use on prod, will be merged with the `Get`endpoint soon",
        "operationId": "scheduledJobTriggerQuery",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduledJobTriggerGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Scheduler/ScheduledJobTrigger/QueryAll": {
      "get": {
        "tags": [
          "ScheduledJobTrigger"
        ],
        "summary": "Query entities list\r\nNOTE: don't use on prod, will be merged with the GetAll endpoint soon",
        "operationId": "scheduledJobTriggerQueryAll",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `items[]` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduledJobTriggerPagedResultDtoGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Scheduler/ScheduledJobTrigger/Get": {
      "get": {
        "tags": [
          "ScheduledJobTrigger"
        ],
        "operationId": "scheduledJobTriggerGet",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduledJobTriggerDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/SecurityQuestions/GetAll": {
      "get": {
        "tags": [
          "SecurityQuestions"
        ],
        "operationId": "securityQuestionsGetAll",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SecurityQuestionDtoPagedResultDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/SecurityQuestions/Query": {
      "get": {
        "tags": [
          "SecurityQuestions"
        ],
        "summary": "Query entity data. \r\nNOTE: don't use on prod, will be merged with the `Get`endpoint soon",
        "operationId": "securityQuestionsQuery",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SecurityQuestionGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/SecurityQuestions/QueryAll": {
      "get": {
        "tags": [
          "SecurityQuestions"
        ],
        "summary": "Query entities list\r\nNOTE: don't use on prod, will be merged with the GetAll endpoint soon",
        "operationId": "securityQuestionsQueryAll",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `items[]` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SecurityQuestionPagedResultDtoGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/SecurityQuestions/Get": {
      "get": {
        "tags": [
          "SecurityQuestions"
        ],
        "operationId": "securityQuestionsGet",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SecurityQuestionDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/SecurityQuestions/Create": {
      "post": {
        "tags": [
          "SecurityQuestions"
        ],
        "operationId": "securityQuestionsCreate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SecurityQuestionDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SecurityQuestionDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SecurityQuestionDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SecurityQuestionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SecurityQuestionDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/SecurityQuestions/Update": {
      "put": {
        "tags": [
          "SecurityQuestions"
        ],
        "operationId": "securityQuestionsUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SecurityQuestionDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SecurityQuestionDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SecurityQuestionDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SecurityQuestionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SecurityQuestionDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/SecurityQuestions/Delete": {
      "delete": {
        "tags": [
          "SecurityQuestions"
        ],
        "operationId": "securityQuestionsDelete",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/Enterprise/Sequence/Get": {
      "get": {
        "tags": [
          "Sequence"
        ],
        "operationId": "sequenceGet",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SequenceGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/Sequence/UpdateGql": {
      "put": {
        "tags": [
          "Sequence"
        ],
        "summary": "Update entity data. \r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "sequenceUpdateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SequenceGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SequenceGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SequenceGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SequenceGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SequenceGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/Sequence/Update": {
      "put": {
        "tags": [
          "Sequence"
        ],
        "operationId": "sequenceUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SequenceGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SequenceGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SequenceGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SequenceGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SequenceGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/Sequence/CreateGql": {
      "post": {
        "tags": [
          "Sequence"
        ],
        "summary": "Create entity.\r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "sequenceCreateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SequenceGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SequenceGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SequenceGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SequenceGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SequenceGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/Sequence/Create": {
      "post": {
        "tags": [
          "Sequence"
        ],
        "operationId": "sequenceCreate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SequenceGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SequenceGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SequenceGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SequenceGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SequenceGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/Sequence/GetAll": {
      "get": {
        "tags": [
          "Sequence"
        ],
        "operationId": "sequenceGetAll",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SequenceGuidDynamicDtoPagedResultDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/Sequence/Query": {
      "get": {
        "tags": [
          "Sequence"
        ],
        "summary": "Query entity data. \r\nNOTE: don't use on prod, will be merged with the `Get`endpoint soon",
        "operationId": "sequenceQuery",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SequenceGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/Sequence/QueryAll": {
      "get": {
        "tags": [
          "Sequence"
        ],
        "summary": "Query entities list\r\nNOTE: don't use on prod, will be merged with the GetAll endpoint soon",
        "operationId": "sequenceQueryAll",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `items[]` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SequencePagedResultDtoGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/Sequence/Delete": {
      "delete": {
        "tags": [
          "Sequence"
        ],
        "operationId": "sequenceDelete",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/Enterprise/Service/Get": {
      "get": {
        "tags": [
          "Service"
        ],
        "operationId": "serviceGet",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/Service/UpdateGql": {
      "put": {
        "tags": [
          "Service"
        ],
        "summary": "Update entity data. \r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "serviceUpdateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/Service/Update": {
      "put": {
        "tags": [
          "Service"
        ],
        "operationId": "serviceUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/Service/CreateGql": {
      "post": {
        "tags": [
          "Service"
        ],
        "summary": "Create entity.\r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "serviceCreateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/Service/Create": {
      "post": {
        "tags": [
          "Service"
        ],
        "operationId": "serviceCreate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/Service/GetAll": {
      "get": {
        "tags": [
          "Service"
        ],
        "operationId": "serviceGetAll",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceGuidDynamicDtoPagedResultDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/Service/Query": {
      "get": {
        "tags": [
          "Service"
        ],
        "summary": "Query entity data. \r\nNOTE: don't use on prod, will be merged with the `Get`endpoint soon",
        "operationId": "serviceQuery",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/Service/QueryAll": {
      "get": {
        "tags": [
          "Service"
        ],
        "summary": "Query entities list\r\nNOTE: don't use on prod, will be merged with the GetAll endpoint soon",
        "operationId": "serviceQueryAll",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `items[]` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServicePagedResultDtoGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/Service/Delete": {
      "delete": {
        "tags": [
          "Service"
        ],
        "operationId": "serviceDelete",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Session/GetCurrentLoginInformations": {
      "get": {
        "tags": [
          "Session"
        ],
        "operationId": "sessionGetCurrentLoginInformations",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCurrentLoginInformationsOutputAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Session/GetGrantedShaRoles": {
      "get": {
        "tags": [
          "Session"
        ],
        "summary": "I am using this method to get user roles and it is being used on login of a user and also when changing work Order Type, Please contact me(Moses) before removing it",
        "operationId": "sessionGetGrantedShaRoles",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringListAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Session/ClearPermissionsCache": {
      "post": {
        "tags": [
          "Session"
        ],
        "summary": "Clears permissions cache",
        "operationId": "sessionClearPermissionsCache",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/ShaRole/Create": {
      "post": {
        "tags": [
          "ShaRole"
        ],
        "operationId": "shaRoleCreate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateShaRoleDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateShaRoleDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateShaRoleDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateShaRoleDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShaRoleDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/ShaRole/Update": {
      "put": {
        "tags": [
          "ShaRole"
        ],
        "operationId": "shaRoleUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ShaRoleDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShaRoleDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ShaRoleDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ShaRoleDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShaRoleDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/ShaRole/Delete": {
      "delete": {
        "tags": [
          "ShaRole"
        ],
        "operationId": "shaRoleDelete",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/ShaRole/GetAll": {
      "get": {
        "tags": [
          "ShaRole"
        ],
        "operationId": "shaRoleGetAll",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShaRoleDtoPagedResultDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/ShaRole/Query": {
      "get": {
        "tags": [
          "ShaRole"
        ],
        "summary": "Query entity data. \r\nNOTE: don't use on prod, will be merged with the `Get`endpoint soon",
        "operationId": "shaRoleQuery",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShaRoleGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/ShaRole/QueryAll": {
      "get": {
        "tags": [
          "ShaRole"
        ],
        "summary": "Query entities list\r\nNOTE: don't use on prod, will be merged with the GetAll endpoint soon",
        "operationId": "shaRoleQueryAll",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `items[]` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShaRolePagedResultDtoGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/ShaRole/Get": {
      "get": {
        "tags": [
          "ShaRole"
        ],
        "operationId": "shaRoleGet",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShaRoleDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/ShaRoleAppointedPerson/Create": {
      "post": {
        "tags": [
          "ShaRoleAppointedPerson"
        ],
        "summary": "Creates new appointment",
        "operationId": "shaRoleAppointedPersonCreate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateShaRoleAppointedPersonDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateShaRoleAppointedPersonDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateShaRoleAppointedPersonDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateShaRoleAppointedPersonDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShaRoleAppointedPersonDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/ShaRoleAppointedPerson/Update": {
      "put": {
        "tags": [
          "ShaRoleAppointedPerson"
        ],
        "operationId": "shaRoleAppointedPersonUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ShaRoleAppointedPersonDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShaRoleAppointedPersonDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ShaRoleAppointedPersonDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ShaRoleAppointedPersonDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShaRoleAppointedPersonDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/ShaRoleAppointedPerson/Delete": {
      "post": {
        "tags": [
          "ShaRoleAppointedPerson"
        ],
        "operationId": "shaRoleAppointedPersonDelete",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GuidEntityDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GuidEntityDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GuidEntityDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GuidEntityDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/ShaRoleAppointedPerson/GetAll": {
      "get": {
        "tags": [
          "ShaRoleAppointedPerson"
        ],
        "operationId": "shaRoleAppointedPersonGetAll",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShaRoleAppointedPersonDtoPagedResultDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/ShaRoleAppointedPerson/Query": {
      "get": {
        "tags": [
          "ShaRoleAppointedPerson"
        ],
        "summary": "Query entity data. \r\nNOTE: don't use on prod, will be merged with the `Get`endpoint soon",
        "operationId": "shaRoleAppointedPersonQuery",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShaRoleAppointedPersonGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/ShaRoleAppointedPerson/QueryAll": {
      "get": {
        "tags": [
          "ShaRoleAppointedPerson"
        ],
        "summary": "Query entities list\r\nNOTE: don't use on prod, will be merged with the GetAll endpoint soon",
        "operationId": "shaRoleAppointedPersonQueryAll",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `items[]` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShaRoleAppointedPersonPagedResultDtoGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/ShaRoleAppointedPerson/Get": {
      "get": {
        "tags": [
          "ShaRoleAppointedPerson"
        ],
        "operationId": "shaRoleAppointedPersonGet",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShaRoleAppointedPersonDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/ShaRoleAppointedPost/Get": {
      "get": {
        "tags": [
          "ShaRoleAppointedPost"
        ],
        "operationId": "shaRoleAppointedPostGet",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShaRoleAppointedPostGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/ShaRoleAppointedPost/UpdateGql": {
      "put": {
        "tags": [
          "ShaRoleAppointedPost"
        ],
        "summary": "Update entity data. \r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "shaRoleAppointedPostUpdateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ShaRoleAppointedPostGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShaRoleAppointedPostGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ShaRoleAppointedPostGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ShaRoleAppointedPostGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShaRoleAppointedPostGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/ShaRoleAppointedPost/Update": {
      "put": {
        "tags": [
          "ShaRoleAppointedPost"
        ],
        "operationId": "shaRoleAppointedPostUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ShaRoleAppointedPostGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShaRoleAppointedPostGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ShaRoleAppointedPostGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ShaRoleAppointedPostGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShaRoleAppointedPostGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/ShaRoleAppointedPost/CreateGql": {
      "post": {
        "tags": [
          "ShaRoleAppointedPost"
        ],
        "summary": "Create entity.\r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "shaRoleAppointedPostCreateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ShaRoleAppointedPostGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShaRoleAppointedPostGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ShaRoleAppointedPostGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ShaRoleAppointedPostGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShaRoleAppointedPostGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/ShaRoleAppointedPost/Create": {
      "post": {
        "tags": [
          "ShaRoleAppointedPost"
        ],
        "operationId": "shaRoleAppointedPostCreate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ShaRoleAppointedPostGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShaRoleAppointedPostGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ShaRoleAppointedPostGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ShaRoleAppointedPostGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShaRoleAppointedPostGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/ShaRoleAppointedPost/GetAll": {
      "get": {
        "tags": [
          "ShaRoleAppointedPost"
        ],
        "operationId": "shaRoleAppointedPostGetAll",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShaRoleAppointedPostGuidDynamicDtoPagedResultDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/ShaRoleAppointedPost/Query": {
      "get": {
        "tags": [
          "ShaRoleAppointedPost"
        ],
        "summary": "Query entity data. \r\nNOTE: don't use on prod, will be merged with the `Get`endpoint soon",
        "operationId": "shaRoleAppointedPostQuery",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShaRoleAppointedPostGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/ShaRoleAppointedPost/QueryAll": {
      "get": {
        "tags": [
          "ShaRoleAppointedPost"
        ],
        "summary": "Query entities list\r\nNOTE: don't use on prod, will be merged with the GetAll endpoint soon",
        "operationId": "shaRoleAppointedPostQueryAll",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `items[]` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShaRoleAppointedPostPagedResultDtoGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/ShaRoleAppointedPost/Delete": {
      "delete": {
        "tags": [
          "ShaRoleAppointedPost"
        ],
        "operationId": "shaRoleAppointedPostDelete",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/Enterprise/ShaRoleAppointedPostLevel/Get": {
      "get": {
        "tags": [
          "ShaRoleAppointedPostLevel"
        ],
        "operationId": "shaRoleAppointedPostLevelGet",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShaRoleAppointedPostLevelGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/ShaRoleAppointedPostLevel/UpdateGql": {
      "put": {
        "tags": [
          "ShaRoleAppointedPostLevel"
        ],
        "summary": "Update entity data. \r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "shaRoleAppointedPostLevelUpdateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ShaRoleAppointedPostLevelGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShaRoleAppointedPostLevelGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ShaRoleAppointedPostLevelGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ShaRoleAppointedPostLevelGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShaRoleAppointedPostLevelGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/ShaRoleAppointedPostLevel/Update": {
      "put": {
        "tags": [
          "ShaRoleAppointedPostLevel"
        ],
        "operationId": "shaRoleAppointedPostLevelUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ShaRoleAppointedPostLevelGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShaRoleAppointedPostLevelGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ShaRoleAppointedPostLevelGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ShaRoleAppointedPostLevelGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShaRoleAppointedPostLevelGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/ShaRoleAppointedPostLevel/CreateGql": {
      "post": {
        "tags": [
          "ShaRoleAppointedPostLevel"
        ],
        "summary": "Create entity.\r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "shaRoleAppointedPostLevelCreateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ShaRoleAppointedPostLevelGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShaRoleAppointedPostLevelGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ShaRoleAppointedPostLevelGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ShaRoleAppointedPostLevelGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShaRoleAppointedPostLevelGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/ShaRoleAppointedPostLevel/Create": {
      "post": {
        "tags": [
          "ShaRoleAppointedPostLevel"
        ],
        "operationId": "shaRoleAppointedPostLevelCreate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ShaRoleAppointedPostLevelGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShaRoleAppointedPostLevelGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ShaRoleAppointedPostLevelGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ShaRoleAppointedPostLevelGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShaRoleAppointedPostLevelGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/ShaRoleAppointedPostLevel/GetAll": {
      "get": {
        "tags": [
          "ShaRoleAppointedPostLevel"
        ],
        "operationId": "shaRoleAppointedPostLevelGetAll",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShaRoleAppointedPostLevelGuidDynamicDtoPagedResultDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/ShaRoleAppointedPostLevel/Query": {
      "get": {
        "tags": [
          "ShaRoleAppointedPostLevel"
        ],
        "summary": "Query entity data. \r\nNOTE: don't use on prod, will be merged with the `Get`endpoint soon",
        "operationId": "shaRoleAppointedPostLevelQuery",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShaRoleAppointedPostLevelGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/ShaRoleAppointedPostLevel/QueryAll": {
      "get": {
        "tags": [
          "ShaRoleAppointedPostLevel"
        ],
        "summary": "Query entities list\r\nNOTE: don't use on prod, will be merged with the GetAll endpoint soon",
        "operationId": "shaRoleAppointedPostLevelQueryAll",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `items[]` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShaRoleAppointedPostLevelPagedResultDtoGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/ShaRoleAppointedPostLevel/Delete": {
      "delete": {
        "tags": [
          "ShaRoleAppointedPostLevel"
        ],
        "operationId": "shaRoleAppointedPostLevelDelete",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/ShaUserLoginAttempts/GetAll": {
      "get": {
        "tags": [
          "ShaUserLoginAttempts"
        ],
        "operationId": "shaUserLoginAttemptsGetAll",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShaUserLoginAttemptDtoPagedResultDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/ShaUserLoginAttempts/Query": {
      "get": {
        "tags": [
          "ShaUserLoginAttempts"
        ],
        "summary": "Query entity data. \r\nNOTE: don't use on prod, will be merged with the `Get`endpoint soon",
        "operationId": "shaUserLoginAttemptsQuery",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShaUserLoginAttemptGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/ShaUserLoginAttempts/QueryAll": {
      "get": {
        "tags": [
          "ShaUserLoginAttempts"
        ],
        "summary": "Query entities list\r\nNOTE: don't use on prod, will be merged with the GetAll endpoint soon",
        "operationId": "shaUserLoginAttemptsQueryAll",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `items[]` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShaUserLoginAttemptPagedResultDtoGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/ShaUserLoginAttempts/Get": {
      "get": {
        "tags": [
          "ShaUserLoginAttempts"
        ],
        "operationId": "shaUserLoginAttemptsGet",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShaUserLoginAttemptDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/ShaUserLoginAttempts/Create": {
      "post": {
        "tags": [
          "ShaUserLoginAttempts"
        ],
        "operationId": "shaUserLoginAttemptsCreate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ShaUserLoginAttemptDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShaUserLoginAttemptDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ShaUserLoginAttemptDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ShaUserLoginAttemptDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShaUserLoginAttemptDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/ShaUserLoginAttempts/Update": {
      "put": {
        "tags": [
          "ShaUserLoginAttempts"
        ],
        "operationId": "shaUserLoginAttemptsUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ShaUserLoginAttemptDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShaUserLoginAttemptDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ShaUserLoginAttemptDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ShaUserLoginAttemptDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShaUserLoginAttemptDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/ShaUserLoginAttempts/Delete": {
      "delete": {
        "tags": [
          "ShaUserLoginAttempts"
        ],
        "operationId": "shaUserLoginAttemptsDelete",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Sms/Gateways": {
      "get": {
        "tags": [
          "SmsGateways"
        ],
        "operationId": "smsGatewaysGetAll",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SmsGatewayDtoListAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/Sms/Settings": {
      "get": {
        "tags": [
          "SmsSettings"
        ],
        "operationId": "smsSettingsGetSettings",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SmsSettingsDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "SmsSettings"
        ],
        "operationId": "smsSettingsUpdateSettings",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SmsSettingsDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SmsSettingsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SmsSettingsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SmsSettingsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v2/Sms/Settings": {
      "get": {
        "tags": [
          "SmsSettings"
        ],
        "operationId": "smsSettingsGetSettingsV2",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SmsSettingsV2DtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "SmsSettings"
        ],
        "operationId": "smsSettingsUpdateSettingsV2",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SmsSettingsV2Dto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SmsSettingsV2Dto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SmsSettingsV2Dto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SmsSettingsV2Dto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "SmsSettings"
        ],
        "operationId": "smsSettingsUpdateSettingsV2",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SmsSettingsV2Dto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SmsSettingsV2Dto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SmsSettingsV2Dto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SmsSettingsV2Dto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/Enterprise/Statement/Get": {
      "get": {
        "tags": [
          "Statement"
        ],
        "operationId": "statementGet",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatementGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/Statement/UpdateGql": {
      "put": {
        "tags": [
          "Statement"
        ],
        "summary": "Update entity data. \r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "statementUpdateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/StatementGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StatementGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/StatementGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/StatementGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatementGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/Statement/Update": {
      "put": {
        "tags": [
          "Statement"
        ],
        "operationId": "statementUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/StatementGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StatementGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/StatementGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/StatementGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatementGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/Statement/CreateGql": {
      "post": {
        "tags": [
          "Statement"
        ],
        "summary": "Create entity.\r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "statementCreateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/StatementGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StatementGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/StatementGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/StatementGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatementGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/Statement/Create": {
      "post": {
        "tags": [
          "Statement"
        ],
        "operationId": "statementCreate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/StatementGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StatementGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/StatementGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/StatementGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatementGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/Statement/GetAll": {
      "get": {
        "tags": [
          "Statement"
        ],
        "operationId": "statementGetAll",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatementGuidDynamicDtoPagedResultDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/Statement/Query": {
      "get": {
        "tags": [
          "Statement"
        ],
        "summary": "Query entity data. \r\nNOTE: don't use on prod, will be merged with the `Get`endpoint soon",
        "operationId": "statementQuery",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatementGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/Statement/QueryAll": {
      "get": {
        "tags": [
          "Statement"
        ],
        "summary": "Query entities list\r\nNOTE: don't use on prod, will be merged with the GetAll endpoint soon",
        "operationId": "statementQueryAll",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `items[]` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatementPagedResultDtoGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/Statement/Delete": {
      "delete": {
        "tags": [
          "Statement"
        ],
        "operationId": "statementDelete",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/StoredFile/Download": {
      "get": {
        "tags": [
          "StoredFile"
        ],
        "operationId": "storedFileDownload",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "versionNo",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileStreamResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/StoredFile/Upload": {
      "post": {
        "tags": [
          "StoredFile"
        ],
        "operationId": "storedFileUpload",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "file",
                  "ownerId",
                  "ownerType"
                ],
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "description": "File content",
                    "format": "binary"
                  },
                  "ownerId": {
                    "type": "string",
                    "description": "Id of the owner entity"
                  },
                  "ownerType": {
                    "type": "string",
                    "description": "Type short alias of the owner entity"
                  },
                  "filesCategory": {
                    "type": "integer",
                    "description": "Category of the file. Is used to split attachments into groups",
                    "format": "int32"
                  },
                  "propertyName": {
                    "type": "string",
                    "description": "Property name of the owner entity. Is used for direct links only (when owner references file using foreign key)"
                  }
                }
              },
              "encoding": {
                "file": {
                  "style": "form"
                },
                "ownerId": {
                  "style": "form"
                },
                "ownerType": {
                  "style": "form"
                },
                "filesCategory": {
                  "style": "form"
                },
                "propertyName": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoredFileDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/StoredFile/UploadStatic": {
      "post": {
        "tags": [
          "StoredFile"
        ],
        "summary": "",
        "operationId": "storedFileUploadStatic",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "file"
                ],
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Id of the stored file",
                    "format": "uuid"
                  },
                  "filesCategory": {
                    "type": "integer",
                    "description": "Category of the file. Is used to split attachments into groups",
                    "format": "int32"
                  },
                  "propertyName": {
                    "type": "string",
                    "description": "Property name of the owner entity. Is used for direct links only (when owner references file using foreign key)"
                  },
                  "file": {
                    "type": "string",
                    "description": "File content",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "id": {
                  "style": "form"
                },
                "filesCategory": {
                  "style": "form"
                },
                "propertyName": {
                  "style": "form"
                },
                "file": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoredFileDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/StoredFile/UploadNewVersion": {
      "post": {
        "tags": [
          "StoredFile"
        ],
        "operationId": "storedFileUploadNewVersion",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "file"
                ],
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Id of the file",
                    "format": "uuid"
                  },
                  "file": {
                    "type": "string",
                    "description": "File content",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "id": {
                  "style": "form"
                },
                "file": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoredFileDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/StoredFile/Delete": {
      "delete": {
        "tags": [
          "StoredFile"
        ],
        "summary": "Delete file",
        "operationId": "storedFileDelete",
        "parameters": [
          {
            "name": "fileId",
            "in": "query",
            "description": "File Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "ownerId",
            "in": "query",
            "description": "Id of the owner entity",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ownerType",
            "in": "query",
            "description": "Type short alias of the owner entity",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "propertyName",
            "in": "query",
            "description": "Property name of the owner entity. Is used for direct links only (when owner references file using foreign key)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/StoredFile/DownloadZip": {
      "get": {
        "tags": [
          "StoredFile"
        ],
        "summary": "Download zip archive of all files linked to a specified entity",
        "operationId": "storedFileDownloadZip",
        "parameters": [
          {
            "name": "allCategories",
            "in": "query",
            "description": "Set to true to get files of all categories",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ownerId",
            "in": "query",
            "description": "Id of the owner entity",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ownerType",
            "in": "query",
            "description": "Type short alias of the owner entity",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filesCategory",
            "in": "query",
            "description": "Category of the file. Is used to split attachments into groups",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "propertyName",
            "in": "query",
            "description": "Property name of the owner entity. Is used for direct links only (when owner references file using foreign key)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileStreamResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/StoredFile/FilesList": {
      "get": {
        "tags": [
          "StoredFile"
        ],
        "summary": "Get list of files attached to a specified entity",
        "operationId": "storedFileFilesList",
        "parameters": [
          {
            "name": "ownerId",
            "in": "query",
            "description": "Id of the owner entity",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ownerType",
            "in": "query",
            "description": "Type short alias of the owner entity",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filesCategory",
            "in": "query",
            "description": "Category of the file. Is used to split attachments into groups",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "propertyName",
            "in": "query",
            "description": "Property name of the owner entity. Is used for direct links only (when owner references file using foreign key)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "allCategories",
            "in": "query",
            "description": "Set to true to get files of all categories",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoredFileDtoListAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/StoredFile": {
      "put": {
        "tags": [
          "StoredFile"
        ],
        "summary": "Update existing file",
        "operationId": "storedFileCreateOrUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "file"
                ],
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Id of the stored file",
                    "format": "uuid"
                  },
                  "ownerId": {
                    "type": "string",
                    "description": "Id of the owner entity"
                  },
                  "ownerType": {
                    "type": "string",
                    "description": "Type short alias of the owner entity"
                  },
                  "filesCategory": {
                    "type": "integer",
                    "description": "Category of the file. Is used to split attachments into groups",
                    "format": "int32"
                  },
                  "propertyName": {
                    "type": "string",
                    "description": "Property name of the owner entity. Is used for direct links only (when owner references file using foreign key)"
                  },
                  "file": {
                    "type": "string",
                    "description": "File content",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "id": {
                  "style": "form"
                },
                "ownerId": {
                  "style": "form"
                },
                "ownerType": {
                  "style": "form"
                },
                "filesCategory": {
                  "style": "form"
                },
                "propertyName": {
                  "style": "form"
                },
                "file": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoredFileDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "StoredFile"
        ],
        "summary": "Get file by id",
        "operationId": "storedFileGet",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoredFileDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "StoredFile"
        ],
        "summary": "Delete file",
        "operationId": "storedFileDeleteFile",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/StoredFile/EntityProperty": {
      "get": {
        "tags": [
          "StoredFile"
        ],
        "summary": "Get file as property of the entity",
        "operationId": "storedFileGetEntityProperty",
        "parameters": [
          {
            "name": "propertyName",
            "in": "query",
            "description": "Property name of the owner entity. Is used for direct links only (when owner references file using foreign key)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ownerId",
            "in": "query",
            "description": "Id of the owner entity",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ownerType",
            "in": "query",
            "description": "Type short alias of the owner entity",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoredFileDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/StoredFile/StoredFile/{fileId}/Versions": {
      "get": {
        "tags": [
          "StoredFile"
        ],
        "summary": "Get versions of the file with specified Id",
        "operationId": "storedFileGetFileVersions",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "Id of the file",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoredFileVersionInfoDtoListAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/Supplier/Create": {
      "post": {
        "tags": [
          "Supplier"
        ],
        "operationId": "supplierCreate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SupplierDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SupplierDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SupplierDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SupplierDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SupplierDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/Supplier/Update": {
      "put": {
        "tags": [
          "Supplier"
        ],
        "operationId": "supplierUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SupplierDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SupplierDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SupplierDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SupplierDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SupplierDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/Supplier/Delete": {
      "delete": {
        "tags": [
          "Supplier"
        ],
        "summary": "",
        "operationId": "supplierDelete",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/Enterprise/Supplier/Activate": {
      "post": {
        "tags": [
          "Supplier"
        ],
        "operationId": "supplierActivate",
        "parameters": [
          {
            "name": "supplierId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SupplierDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/Supplier/Deactivate": {
      "post": {
        "tags": [
          "Supplier"
        ],
        "operationId": "supplierDeactivate",
        "parameters": [
          {
            "name": "supplierId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SupplierDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/Supplier/GetAll": {
      "get": {
        "tags": [
          "Supplier"
        ],
        "operationId": "supplierGetAll",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SupplierDtoPagedResultDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/Supplier/Query": {
      "get": {
        "tags": [
          "Supplier"
        ],
        "summary": "Query entity data. \r\nNOTE: don't use on prod, will be merged with the `Get`endpoint soon",
        "operationId": "supplierQuery",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SupplierGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/Supplier/QueryAll": {
      "get": {
        "tags": [
          "Supplier"
        ],
        "summary": "Query entities list\r\nNOTE: don't use on prod, will be merged with the GetAll endpoint soon",
        "operationId": "supplierQueryAll",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `items[]` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SupplierPagedResultDtoGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/Supplier/Get": {
      "get": {
        "tags": [
          "Supplier"
        ],
        "operationId": "supplierGet",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SupplierDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/SupplierPrice/Get": {
      "get": {
        "tags": [
          "SupplierPrice"
        ],
        "operationId": "supplierPriceGet",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SupplierPriceGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/SupplierPrice/UpdateGql": {
      "put": {
        "tags": [
          "SupplierPrice"
        ],
        "summary": "Update entity data. \r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "supplierPriceUpdateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SupplierPriceGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SupplierPriceGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SupplierPriceGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SupplierPriceGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SupplierPriceGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/SupplierPrice/Update": {
      "put": {
        "tags": [
          "SupplierPrice"
        ],
        "operationId": "supplierPriceUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SupplierPriceGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SupplierPriceGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SupplierPriceGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SupplierPriceGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SupplierPriceGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/SupplierPrice/CreateGql": {
      "post": {
        "tags": [
          "SupplierPrice"
        ],
        "summary": "Create entity.\r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "supplierPriceCreateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SupplierPriceGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SupplierPriceGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SupplierPriceGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SupplierPriceGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SupplierPriceGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/SupplierPrice/Create": {
      "post": {
        "tags": [
          "SupplierPrice"
        ],
        "operationId": "supplierPriceCreate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SupplierPriceGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SupplierPriceGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SupplierPriceGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SupplierPriceGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SupplierPriceGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/SupplierPrice/GetAll": {
      "get": {
        "tags": [
          "SupplierPrice"
        ],
        "operationId": "supplierPriceGetAll",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SupplierPriceGuidDynamicDtoPagedResultDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/SupplierPrice/Query": {
      "get": {
        "tags": [
          "SupplierPrice"
        ],
        "summary": "Query entity data. \r\nNOTE: don't use on prod, will be merged with the `Get`endpoint soon",
        "operationId": "supplierPriceQuery",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SupplierPriceGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/SupplierPrice/QueryAll": {
      "get": {
        "tags": [
          "SupplierPrice"
        ],
        "summary": "Query entities list\r\nNOTE: don't use on prod, will be merged with the GetAll endpoint soon",
        "operationId": "supplierPriceQueryAll",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `items[]` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SupplierPricePagedResultDtoGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/SupplierPrice/Delete": {
      "delete": {
        "tags": [
          "SupplierPrice"
        ],
        "operationId": "supplierPriceDelete",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/Enterprise/TaxRate/Get": {
      "get": {
        "tags": [
          "TaxRate"
        ],
        "operationId": "taxRateGet",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxRateGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/TaxRate/UpdateGql": {
      "put": {
        "tags": [
          "TaxRate"
        ],
        "summary": "Update entity data. \r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "taxRateUpdateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TaxRateGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaxRateGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TaxRateGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TaxRateGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxRateGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/TaxRate/Update": {
      "put": {
        "tags": [
          "TaxRate"
        ],
        "operationId": "taxRateUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TaxRateGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaxRateGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TaxRateGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TaxRateGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxRateGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/TaxRate/CreateGql": {
      "post": {
        "tags": [
          "TaxRate"
        ],
        "summary": "Create entity.\r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "taxRateCreateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TaxRateGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaxRateGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TaxRateGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TaxRateGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxRateGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/TaxRate/Create": {
      "post": {
        "tags": [
          "TaxRate"
        ],
        "operationId": "taxRateCreate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TaxRateGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaxRateGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TaxRateGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TaxRateGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxRateGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/TaxRate/GetAll": {
      "get": {
        "tags": [
          "TaxRate"
        ],
        "operationId": "taxRateGetAll",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxRateGuidDynamicDtoPagedResultDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/TaxRate/Query": {
      "get": {
        "tags": [
          "TaxRate"
        ],
        "summary": "Query entity data. \r\nNOTE: don't use on prod, will be merged with the `Get`endpoint soon",
        "operationId": "taxRateQuery",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxRateGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/TaxRate/QueryAll": {
      "get": {
        "tags": [
          "TaxRate"
        ],
        "summary": "Query entities list\r\nNOTE: don't use on prod, will be merged with the GetAll endpoint soon",
        "operationId": "taxRateQueryAll",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `items[]` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxRatePagedResultDtoGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Enterprise/TaxRate/Delete": {
      "delete": {
        "tags": [
          "TaxRate"
        ],
        "operationId": "taxRateDelete",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Tenant/Create": {
      "post": {
        "tags": [
          "Tenant"
        ],
        "operationId": "tenantCreate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTenantDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTenantDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTenantDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTenantDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Tenant/Delete": {
      "delete": {
        "tags": [
          "Tenant"
        ],
        "operationId": "tenantDelete",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Tenant/Get": {
      "get": {
        "tags": [
          "Tenant"
        ],
        "operationId": "tenantGet",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Tenant/GetAll": {
      "get": {
        "tags": [
          "Tenant"
        ],
        "operationId": "tenantGetAll",
        "parameters": [
          {
            "name": "keyword",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isActive",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantDtoPagedResultDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Tenant/Update": {
      "put": {
        "tags": [
          "Tenant"
        ],
        "operationId": "tenantUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TenantDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TenantDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TenantDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TenantDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/TokenAuth/Authenticate": {
      "post": {
        "tags": [
          "TokenAuth"
        ],
        "operationId": "tokenAuthAuthenticate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticateResultModelAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/TokenAuth/SignOff": {
      "post": {
        "tags": [
          "TokenAuth"
        ],
        "operationId": "tokenAuthSignOff",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/TokenAuth/GetExternalAuthenticationProviders": {
      "get": {
        "tags": [
          "TokenAuth"
        ],
        "operationId": "tokenAuthGetExternalAuthenticationProviders",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalLoginProviderInfoModelListAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/TokenAuth/ExternalAuthenticate": {
      "post": {
        "tags": [
          "TokenAuth"
        ],
        "operationId": "tokenAuthExternalAuthenticate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalAuthenticateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalAuthenticateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalAuthenticateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalAuthenticateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalAuthenticateResultModelAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Epm/UnitOfMeasure/Get": {
      "get": {
        "tags": [
          "UnitOfMeasure"
        ],
        "operationId": "unitOfMeasureGet",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitOfMeasureGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Epm/UnitOfMeasure/UpdateGql": {
      "put": {
        "tags": [
          "UnitOfMeasure"
        ],
        "summary": "Update entity data. \r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "unitOfMeasureUpdateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UnitOfMeasureGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnitOfMeasureGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UnitOfMeasureGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UnitOfMeasureGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitOfMeasureGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Epm/UnitOfMeasure/Update": {
      "put": {
        "tags": [
          "UnitOfMeasure"
        ],
        "operationId": "unitOfMeasureUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UnitOfMeasureGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnitOfMeasureGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UnitOfMeasureGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UnitOfMeasureGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitOfMeasureGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Epm/UnitOfMeasure/CreateGql": {
      "post": {
        "tags": [
          "UnitOfMeasure"
        ],
        "summary": "Create entity.\r\nNOTE: don't use on prod, will be merged with the `Update`endpoint soon",
        "operationId": "unitOfMeasureCreateGql",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UnitOfMeasureGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnitOfMeasureGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UnitOfMeasureGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UnitOfMeasureGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitOfMeasureGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Epm/UnitOfMeasure/Create": {
      "post": {
        "tags": [
          "UnitOfMeasure"
        ],
        "operationId": "unitOfMeasureCreate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UnitOfMeasureGuidDynamicDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnitOfMeasureGuidDynamicDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UnitOfMeasureGuidDynamicDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UnitOfMeasureGuidDynamicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitOfMeasureGuidDynamicDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Epm/UnitOfMeasure/GetAll": {
      "get": {
        "tags": [
          "UnitOfMeasure"
        ],
        "operationId": "unitOfMeasureGetAll",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitOfMeasureGuidDynamicDtoPagedResultDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Epm/UnitOfMeasure/Query": {
      "get": {
        "tags": [
          "UnitOfMeasure"
        ],
        "summary": "Query entity data. \r\nNOTE: don't use on prod, will be merged with the `Get`endpoint soon",
        "operationId": "unitOfMeasureQuery",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `result` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitOfMeasureGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Epm/UnitOfMeasure/QueryAll": {
      "get": {
        "tags": [
          "UnitOfMeasure"
        ],
        "summary": "Query entities list\r\nNOTE: don't use on prod, will be merged with the GetAll endpoint soon",
        "operationId": "unitOfMeasureQueryAll",
        "parameters": [
          {
            "name": "properties",
            "in": "query",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter string in JsonLogic format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quickSearch",
            "in": "query",
            "description": "Quick search string. Is used to search entities by text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NOTE: shape of the `items[]` depends on the `properties` argument. When `properties` argument is not specified - it returns top level properties of the entity, all referenced entities are presented as their Id values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitOfMeasurePagedResultDtoGraphQLDataResultAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/Epm/UnitOfMeasure/Delete": {
      "delete": {
        "tags": [
          "UnitOfMeasure"
        ],
        "operationId": "unitOfMeasureDelete",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/User/Create": {
      "post": {
        "tags": [
          "User"
        ],
        "operationId": "userCreate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/User/Update": {
      "put": {
        "tags": [
          "User"
        ],
        "operationId": "userUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UserDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/User/Delete": {
      "delete": {
        "tags": [
          "User"
        ],
        "operationId": "userDelete",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/User/InactivateUser": {
      "post": {
        "tags": [
          "User"
        ],
        "operationId": "userInactivateUser",
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/User/ActivateUser": {
      "post": {
        "tags": [
          "User"
        ],
        "operationId": "userActivateUser",
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/User/GetRoles": {
      "get": {
        "tags": [
          "User"
        ],
        "operationId": "userGetRoles",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleDtoListResultDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/User/ChangeLanguage": {
      "post": {
        "tags": [
          "User"
        ],
        "operationId": "userChangeLanguage",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeUserLanguageDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeUserLanguageDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeUserLanguageDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeUserLanguageDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/User/ResetPasswordSendOtp": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Send One-time pin for password reset",
        "operationId": "userResetPasswordSendOtp",
        "parameters": [
          {
            "name": "mobileNo",
            "in": "query",
            "description": "mobile number of the user",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResetPasswordSendOtpResponseAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/User/GetUserPasswordResetOptions": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Retrieve the password reset options allowed for the user.",
        "operationId": "userGetUserPasswordResetOptions",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResetPasswordOptionDtoListAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/User/SendSMSOTP": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Send SMS OTP provided username.",
        "operationId": "userSendSMSOTP",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/User/GetSecurityQuestions": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get a user's selected security questions",
        "operationId": "userGetSecurityQuestions",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SecurityQuestionDtoListAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/User/ValidateResetCode": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Validate provided OTP or Email token",
        "operationId": "userValidateResetCode",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordValidateCodeInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordValidateCodeInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordValidateCodeInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordValidateCodeInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResetPasswordVerifyOtpResponseAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/User/ValidateSecurityQuestions": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Validating security questions submitted by the user",
        "operationId": "userValidateSecurityQuestions",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SecurityQuestionVerificationDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SecurityQuestionVerificationDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SecurityQuestionVerificationDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SecurityQuestionVerificationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResetPasswordVerifyOtpResponseAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/User/SendEmailLink": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Send an email to the user with a link to reset their password",
        "operationId": "userSendEmailLink",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/User/ResetPasswordVerifyOtp": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Verify one-time pin that was used for password reset. Returns a token that should be used for password update",
        "operationId": "userResetPasswordVerifyOtp",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordVerifyOtpInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordVerifyOtpInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordVerifyOtpInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordVerifyOtpInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResetPasswordVerifyOtpResponseAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/User/ResetPasswordUsingToken": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Resets a password of the user using token",
        "operationId": "userResetPasswordUsingToken",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordUsingTokenInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordUsingTokenInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordUsingTokenInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordUsingTokenInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/User/ChangePassword": {
      "post": {
        "tags": [
          "User"
        ],
        "operationId": "userChangePassword",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/User/ResetPassword": {
      "post": {
        "tags": [
          "User"
        ],
        "operationId": "userResetPassword",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/User/GetUserAuthConfig": {
      "get": {
        "tags": [
          "User"
        ],
        "operationId": "userGetUserAuthConfig",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbpUserAuthConfigDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/User/Get": {
      "get": {
        "tags": [
          "User"
        ],
        "operationId": "userGet",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/User/GetAll": {
      "get": {
        "tags": [
          "User"
        ],
        "operationId": "userGetAll",
        "parameters": [
          {
            "name": "keyword",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isActive",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "skipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDtoPagedResultDtoAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/SheshaWorkflow/Workflow/BootstrapWorkflowDefinitions": {
      "post": {
        "tags": [
          "Workflow"
        ],
        "operationId": "workflowBootstrapWorkflowDefinitions",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/SheshaWorkflow/Workflow/BootstrapProcessConfigurations": {
      "post": {
        "tags": [
          "Workflow"
        ],
        "operationId": "workflowBootstrapProcessConfigurations",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/SheshaWorkflow/Workflow/GetIncomingItems": {
      "get": {
        "tags": [
          "Workflow"
        ],
        "operationId": "workflowGetIncomingItems",
        "parameters": [
          {
            "name": "latestInTop",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "currentPage",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "itemTypes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ItemTypeFilterModel"
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InboxItemsResponseAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/SheshaWorkflow/Workflow/GetMyItems": {
      "get": {
        "tags": [
          "Workflow"
        ],
        "operationId": "workflowGetMyItems",
        "parameters": [
          {
            "name": "latestInTop",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "currentPage",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "itemTypes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ItemTypeFilterModel"
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MyItemsResponseAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/SheshaWorkflow/Workflow/GetArchivedItems": {
      "get": {
        "tags": [
          "Workflow"
        ],
        "operationId": "workflowGetArchivedItems",
        "parameters": [
          {
            "name": "latestInTop",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "currentPage",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "itemTypes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ItemTypeFilterModel"
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArchivedItemsResponseAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/SheshaWorkflow/Workflow/GetSentItems": {
      "get": {
        "tags": [
          "Workflow"
        ],
        "operationId": "workflowGetSentItems",
        "parameters": [
          {
            "name": "latestInTop",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "currentPage",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "itemTypes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ItemTypeFilterModel"
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SentItemsResponseAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/SheshaWorkflow/Workflow/GetDraftItems": {
      "get": {
        "tags": [
          "Workflow"
        ],
        "operationId": "workflowGetDraftItems",
        "parameters": [
          {
            "name": "latestInTop",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "currentPage",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "itemTypes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ItemTypeFilterModel"
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DraftItemsResponseAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/SheshaWorkflow/Workflow/{id}/PastTimeLine": {
      "get": {
        "tags": [
          "Workflow"
        ],
        "operationId": "workflowPastTimeLine",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowExecutionLogResponseAjaxResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generated by AbpExceptionFilter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AjaxResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/SheshaWorkflow/WorkflowHighLevelAssignee/Resolve": {
      "post": {
        "tags": [
          "WorkflowHighLevelAssignee"
        ],
        "operationId": "workflowHighLevelAssigneeResolve",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AbpUserAuthConfigDto": {
        "type": "object",
        "properties": {
          "allPermissions": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "grantedPermissions": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AbpUserAuthConfigDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/AbpUserAuthConfigDto"
          }
        },
        "additionalProperties": false
      },
      "AccountTransferGraphQLDataResult": {
        "type": "object",
        "properties": {
          "transferMethod": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "transferReason": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "dateCompleted": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "toAccount": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "fromReference": {
            "type": "string"
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "rejectionReason": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "additionalInfoJson": {
            "type": "string"
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "fromAccountEntity": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "signedRequest": {
            "type": "string"
          },
          "toReference": {
            "type": "string"
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "AccountTransferGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/AccountTransferGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "AccountTransferGuidDynamicDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AccountTransferGuidDynamicDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/AccountTransferGuidDynamicDto"
          }
        },
        "additionalProperties": false
      },
      "AccountTransferGuidDynamicDtoPagedResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountTransferGuidDynamicDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AccountTransferGuidDynamicDtoPagedResultDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/AccountTransferGuidDynamicDtoPagedResultDto"
          }
        },
        "additionalProperties": false
      },
      "AccountTransferPagedResultDtoGraphQLDataResult": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DynamicDto_AccountTransferFullProxy"
            }
          }
        },
        "additionalProperties": false,
        "description": "NOTE: shape of the response depends on the `properties` argument"
      },
      "AccountTransferPagedResultDtoGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/AccountTransferPagedResultDtoGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "ActionResult": {
        "type": "object",
        "additionalProperties": false
      },
      "ActionResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/ActionResult"
          }
        },
        "additionalProperties": false
      },
      "AjaxResponseBase": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "AllowableChildComponentTypeGraphQLDataResult": {
        "type": "object",
        "properties": {
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "parentComponentType": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "canBeRoot": {
            "type": "boolean",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "childComponentType": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "AllowableChildComponentTypeGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/AllowableChildComponentTypeGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "AllowableChildComponentTypeGuidDynamicDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AllowableChildComponentTypeGuidDynamicDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/AllowableChildComponentTypeGuidDynamicDto"
          }
        },
        "additionalProperties": false
      },
      "AllowableChildComponentTypeGuidDynamicDtoPagedResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AllowableChildComponentTypeGuidDynamicDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AllowableChildComponentTypeGuidDynamicDtoPagedResultDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/AllowableChildComponentTypeGuidDynamicDtoPagedResultDto"
          }
        },
        "additionalProperties": false
      },
      "AllowableChildComponentTypePagedResultDtoGraphQLDataResult": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DynamicDto_AllowableChildComponentTypeFullProxy"
            }
          }
        },
        "additionalProperties": false,
        "description": "NOTE: shape of the response depends on the `properties` argument"
      },
      "AllowableChildComponentTypePagedResultDtoGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/AllowableChildComponentTypePagedResultDtoGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "ApplicationInfoDto": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "nullable": true
          },
          "releaseDate": {
            "type": "string",
            "format": "date-time"
          },
          "features": {
            "type": "object",
            "additionalProperties": {
              "type": "boolean",
              "nullable": true
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ArchivedItemDto": {
        "type": "object",
        "additionalProperties": false
      },
      "ArchivedItemsResponse": {
        "type": "object",
        "properties": {
          "paging": {
            "$ref": "#/components/schemas/PagingModel"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ArchivedItemDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ArchivedItemsResponseAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/ArchivedItemsResponse"
          }
        },
        "additionalProperties": false
      },
      "AreaCreateDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "shortName": {
            "type": "string",
            "nullable": true
          },
          "parentArea": {
            "$ref": "#/components/schemas/GuidNullableEntityWithDisplayNameDto"
          },
          "comments": {
            "type": "string",
            "nullable": true
          },
          "areaType": {
            "$ref": "#/components/schemas/ReferenceListItemValueDto"
          }
        },
        "additionalProperties": false
      },
      "AreaDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "shortName": {
            "type": "string",
            "nullable": true
          },
          "parentArea": {
            "$ref": "#/components/schemas/GuidNullableEntityWithDisplayNameDto"
          },
          "comments": {
            "type": "string",
            "nullable": true
          },
          "areaType": {
            "$ref": "#/components/schemas/ReferenceListItemValueDto"
          }
        },
        "additionalProperties": false
      },
      "AreaDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/AreaDto"
          }
        },
        "additionalProperties": false
      },
      "AreaDtoPagedResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AreaDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AreaDtoPagedResultDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/AreaDtoPagedResultDto"
          }
        },
        "additionalProperties": false
      },
      "AreaGraphQLDataResult": {
        "type": "object",
        "properties": {
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "comments": {
            "type": "string"
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "parentArea": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "areaType": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "shortName": {
            "type": "string"
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "AreaGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/AreaGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "AreaPagedResultDtoGraphQLDataResult": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DynamicDto_AreaFullProxy"
            }
          }
        },
        "additionalProperties": false,
        "description": "NOTE: shape of the response depends on the `properties` argument"
      },
      "AreaPagedResultDtoGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/AreaPagedResultDtoGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "AreaTreeItemDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "parentId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "hasChilds": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "AreaTreeItemDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/AreaTreeItemDto"
          }
        },
        "additionalProperties": false
      },
      "AreaTreeItemDtoListAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AreaTreeItemDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AreaUpdateDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "shortName": {
            "type": "string",
            "nullable": true
          },
          "comments": {
            "type": "string",
            "nullable": true
          },
          "areaType": {
            "$ref": "#/components/schemas/ReferenceListItemValueDto"
          }
        },
        "additionalProperties": false
      },
      "AssemblyInfoDto": {
        "type": "object",
        "properties": {
          "location": {
            "type": "string",
            "nullable": true
          },
          "fullName": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "string",
            "nullable": true
          },
          "architecture": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AuthenticateModel": {
        "required": [
          "password",
          "userNameOrEmailAddress"
        ],
        "type": "object",
        "properties": {
          "userNameOrEmailAddress": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string"
          },
          "password": {
            "maxLength": 32,
            "minLength": 0,
            "type": "string"
          },
          "imei": {
            "type": "string",
            "description": "Optional IMEI number. Is used for mobile applications",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AuthenticateResultModel": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "nullable": true
          },
          "encryptedAccessToken": {
            "type": "string",
            "nullable": true
          },
          "expireInSeconds": {
            "type": "integer",
            "format": "int32"
          },
          "expireOn": {
            "type": "string",
            "format": "date-time"
          },
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "personId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "deviceName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AuthenticateResultModelAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/AuthenticateResultModel"
          }
        },
        "additionalProperties": false
      },
      "AuthorizationSettingsDto": {
        "type": "object",
        "properties": {
          "isLockoutEnabled": {
            "type": "boolean",
            "description": "Lockout enabled (default value for new users)"
          },
          "defaultAccountLockoutSeconds": {
            "type": "integer",
            "description": "Lockout time in seconds",
            "format": "int32"
          },
          "maxFailedAccessAttemptsBeforeLockout": {
            "type": "integer",
            "description": "Max failed logon attempts before lockout",
            "format": "int32"
          },
          "requireDigit": {
            "type": "boolean",
            "description": "Passwords: require digits"
          },
          "requireLowercase": {
            "type": "boolean",
            "description": "Passwords: require lower case character"
          },
          "requireNonAlphanumeric": {
            "type": "boolean",
            "description": "Passwords: non alphanumeric character"
          },
          "requireUppercase": {
            "type": "boolean",
            "description": "Passwords: require upper case character"
          },
          "requiredLength": {
            "type": "integer",
            "description": "Passwords: min length",
            "format": "int32"
          },
          "autoLogoffTimeout": {
            "type": "integer",
            "description": "Auto logoff timeout (in case of user inactivity). Set to 0 to disable",
            "format": "int32"
          },
          "resetPasswordWithEmailLinkIsSupported": {
            "type": "boolean",
            "description": "Allow users to reset passwords with reset link sent to their emails."
          },
          "resetPasswordWithEmailLinkExpiryDelay": {
            "type": "integer",
            "description": "Email link expiry delay",
            "format": "int32"
          },
          "resetPasswordWithSmsOtpIsSupported": {
            "type": "boolean",
            "description": "Allow users to reset passwords using OTPs sent to their phone numbers."
          },
          "resetPasswordWithSmsOtpExpiryDelay": {
            "type": "integer",
            "description": "OTP expiry delay",
            "format": "int32"
          },
          "resetPasswordWithSecurityQuestionsIsSupported": {
            "type": "boolean",
            "description": "Allow users to reset passwords using predefined security questions and answers."
          },
          "resetPasswordWithSecurityQuestionsNumQuestionsAllowed": {
            "type": "integer",
            "description": "TODO: Decide whether to use this property or not",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Authorization options"
      },
      "AuthorizationSettingsDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/AuthorizationSettingsDto"
          }
        },
        "additionalProperties": false
      },
      "AutocompleteItemDto": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "nullable": true
          },
          "displayText": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Generic DTO of the simple autocomplete item"
      },
      "AutocompleteItemDtoListAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AutocompleteItemDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BackupDataDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "backupPath": {
            "type": "string",
            "nullable": true
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BackupDataDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/BackupDataDto"
          }
        },
        "additionalProperties": false
      },
      "BankAccountGraphQLDataResult": {
        "type": "object",
        "properties": {
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "branchCode": {
            "type": "string"
          },
          "accountNumber": {
            "type": "string"
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "accountType": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "accountName": {
            "type": "string"
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "ownerPerson": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "currentBalance": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "branchName": {
            "type": "string"
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "ownerOrganisation": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "currency": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "bank": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "BankAccountGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/BankAccountGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "BankAccountGuidDynamicDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BankAccountGuidDynamicDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/BankAccountGuidDynamicDto"
          }
        },
        "additionalProperties": false
      },
      "BankAccountGuidDynamicDtoPagedResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BankAccountGuidDynamicDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "BankAccountGuidDynamicDtoPagedResultDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/BankAccountGuidDynamicDtoPagedResultDto"
          }
        },
        "additionalProperties": false
      },
      "BankAccountPagedResultDtoGraphQLDataResult": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DynamicDto_BankAccountFullProxy"
            }
          }
        },
        "additionalProperties": false,
        "description": "NOTE: shape of the response depends on the `properties` argument"
      },
      "BankAccountPagedResultDtoGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/BankAccountPagedResultDtoGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "BankTransactionGraphQLDataResult": {
        "type": "object",
        "properties": {
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "allocationApprovedBy": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "allocationApprovedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "reference": {
            "type": "string"
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "allocatedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "balance": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "bankAccount": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "allocationMechanism": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "allocatedAccount": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "comments": {
            "type": "string"
          },
          "amount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "allocatedBy": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "transactionDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "allocationRejectedComments": {
            "type": "string"
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "allocatedOrganisation": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "allocatedPerson": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "allocationStatus": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "transactionType": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "BankTransactionGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/BankTransactionGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "BankTransactionGuidDynamicDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BankTransactionGuidDynamicDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/BankTransactionGuidDynamicDto"
          }
        },
        "additionalProperties": false
      },
      "BankTransactionGuidDynamicDtoPagedResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BankTransactionGuidDynamicDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "BankTransactionGuidDynamicDtoPagedResultDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/BankTransactionGuidDynamicDtoPagedResultDto"
          }
        },
        "additionalProperties": false
      },
      "BankTransactionPagedResultDtoGraphQLDataResult": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DynamicDto_BankTransactionFullProxy"
            }
          }
        },
        "additionalProperties": false,
        "description": "NOTE: shape of the response depends on the `properties` argument"
      },
      "BankTransactionPagedResultDtoGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/BankTransactionPagedResultDtoGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "BooleanAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "CancelVersionInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id of the current version",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "description": "Cancel version input"
      },
      "ChangePasswordDto": {
        "required": [
          "currentPassword",
          "newPassword"
        ],
        "type": "object",
        "properties": {
          "currentPassword": {
            "type": "string"
          },
          "newPassword": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ChangeUserLanguageDto": {
        "required": [
          "languageName"
        ],
        "type": "object",
        "properties": {
          "languageName": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "CheckListDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "Name of the check list",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Description",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "CheckList DTO"
      },
      "CheckListDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/CheckListDto"
          }
        },
        "additionalProperties": false
      },
      "CheckListDtoPagedResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CheckListDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CheckListDtoPagedResultDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/CheckListDtoPagedResultDto"
          }
        },
        "additionalProperties": false
      },
      "CheckListGraphQLDataResult": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "CheckListGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/CheckListGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "CheckListItemDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "checkListId": {
            "type": "string",
            "description": "Id of the check list which current item belongs to",
            "format": "uuid"
          },
          "parentId": {
            "type": "string",
            "description": "Parent item id",
            "format": "uuid",
            "nullable": true
          },
          "orderIndex": {
            "type": "integer",
            "description": "Order index of the item",
            "format": "int32"
          },
          "itemType": {
            "$ref": "#/components/schemas/ReferenceListItemValueDto"
          },
          "name": {
            "type": "string",
            "description": "Item name",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Item description",
            "nullable": true
          },
          "allowAddComments": {
            "type": "boolean",
            "description": "If true, the user is able to add comments to this item/group"
          },
          "commentsHeading": {
            "type": "string",
            "description": "Heading of the comments box",
            "nullable": true
          },
          "commentsVisibilityExpression": {
            "type": "string",
            "description": "Custom visibility of comments (javascript expression)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "CheckListItem DTO"
      },
      "CheckListItemDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/CheckListItemDto"
          }
        },
        "additionalProperties": false
      },
      "CheckListItemDtoPagedResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CheckListItemDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CheckListItemDtoPagedResultDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/CheckListItemDtoPagedResultDto"
          }
        },
        "additionalProperties": false
      },
      "CheckListItemGraphQLDataResult": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "itemType": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "parent": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "commentsHeading": {
            "type": "string"
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "checkList": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "allowAddComments": {
            "type": "boolean",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "commentsVisibilityExpression": {
            "type": "string"
          },
          "orderIndex": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "CheckListItemGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/CheckListItemGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "CheckListItemModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "itemType": {
            "type": "integer",
            "description": "Item type (group = 1, two state = 2, tri state = 3), see !:RefListCheckListItemType",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Item name",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Item description",
            "nullable": true
          },
          "allowAddComments": {
            "type": "boolean",
            "description": "If true, the user is able to add comments to this item/group"
          },
          "commentsHeading": {
            "type": "string",
            "description": "Heading of the comments box",
            "nullable": true
          },
          "commentsVisibilityExpression": {
            "type": "string",
            "description": "Custom visibility of comments (javascript expression)",
            "nullable": true
          },
          "childItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CheckListItemModel"
            },
            "description": "Child items",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Check list item model"
      },
      "CheckListItemPagedResultDtoGraphQLDataResult": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DynamicDto_CheckListItemFullProxy"
            }
          }
        },
        "additionalProperties": false,
        "description": "NOTE: shape of the response depends on the `properties` argument"
      },
      "CheckListItemPagedResultDtoGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/CheckListItemPagedResultDtoGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "CheckListItemSelectionDto": {
        "type": "object",
        "properties": {
          "checkListItemId": {
            "type": "string",
            "description": "Check list item id",
            "format": "uuid"
          },
          "selection": {
            "type": "integer",
            "description": "User selection (yes = 1, no = 2, na = 3), see Shesha.Enterprise.CheckLists.RefListCheckListSelectionType",
            "format": "int32",
            "nullable": true
          },
          "comments": {
            "type": "string",
            "description": "User comments",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Check list item selection made by the user"
      },
      "CheckListItemSelectionDtoListAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CheckListItemSelectionDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CheckListItemSelectionGraphQLDataResult": {
        "type": "object",
        "properties": {
          "comments": {
            "type": "string"
          },
          "entityType": {
            "type": "string"
          },
          "ownerId": {
            "type": "string"
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "selection": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "entityId": {
            "type": "string"
          },
          "checkListItem": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "ownerType": {
            "type": "string"
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "CheckListItemSelectionGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/CheckListItemSelectionGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "CheckListItemSelectionGuidDynamicDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CheckListItemSelectionGuidDynamicDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/CheckListItemSelectionGuidDynamicDto"
          }
        },
        "additionalProperties": false
      },
      "CheckListItemSelectionGuidDynamicDtoPagedResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CheckListItemSelectionGuidDynamicDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CheckListItemSelectionGuidDynamicDtoPagedResultDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/CheckListItemSelectionGuidDynamicDtoPagedResultDto"
          }
        },
        "additionalProperties": false
      },
      "CheckListItemSelectionPagedResultDtoGraphQLDataResult": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DynamicDto_CheckListItemSelectionFullProxy"
            }
          }
        },
        "additionalProperties": false,
        "description": "NOTE: shape of the response depends on the `properties` argument"
      },
      "CheckListItemSelectionPagedResultDtoGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/CheckListItemSelectionPagedResultDtoGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "CheckListModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "Name of the check list",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Description",
            "nullable": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CheckListItemModel"
            },
            "description": "Items of the check list",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Checklist model"
      },
      "CheckListModelAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/CheckListModel"
          }
        },
        "additionalProperties": false
      },
      "CheckListPagedResultDtoGraphQLDataResult": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DynamicDto_CheckListFullProxy"
            }
          }
        },
        "additionalProperties": false,
        "description": "NOTE: shape of the response depends on the `properties` argument"
      },
      "CheckListPagedResultDtoGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/CheckListPagedResultDtoGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "CheckListTreeItemDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "Name",
            "nullable": true
          },
          "parentId": {
            "type": "string",
            "description": "Parent Id",
            "format": "uuid",
            "nullable": true
          },
          "orderIndex": {
            "type": "integer",
            "description": "Order Index",
            "format": "int32"
          },
          "hasChilds": {
            "type": "boolean",
            "description": "If true, indicates that item has child items"
          }
        },
        "additionalProperties": false,
        "description": "Check list item DTO for tree component"
      },
      "CheckListTreeItemDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/CheckListTreeItemDto"
          }
        },
        "additionalProperties": false
      },
      "CheckListTreeItemDtoListAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CheckListTreeItemDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CheckListTreeItemGraphQLDataResult": {
        "type": "object",
        "properties": {
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "parentId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "hasChilds": {
            "type": "boolean",
            "nullable": true
          },
          "orderIndex": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "checkListId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "CheckListTreeItemGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/CheckListTreeItemGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "CheckListTreeItemGuidDynamicDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CheckListTreeItemGuidDynamicDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/CheckListTreeItemGuidDynamicDto"
          }
        },
        "additionalProperties": false
      },
      "CheckListTreeItemGuidDynamicDtoPagedResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CheckListTreeItemGuidDynamicDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CheckListTreeItemGuidDynamicDtoPagedResultDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/CheckListTreeItemGuidDynamicDtoPagedResultDto"
          }
        },
        "additionalProperties": false
      },
      "CheckListTreeItemPagedResultDtoGraphQLDataResult": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DynamicDto_CheckListTreeItemFullProxy"
            }
          }
        },
        "additionalProperties": false,
        "description": "NOTE: shape of the response depends on the `properties` argument"
      },
      "CheckListTreeItemPagedResultDtoGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/CheckListTreeItemPagedResultDtoGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "ComponentGraphQLDataResult": {
        "type": "object",
        "properties": {
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "responsibleReporting": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "refNo": {
            "type": "string"
          },
          "area": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "responsibleQA2": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "perfIndexWeight": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "ragCalculationMethod": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "finalIndicatorTarget": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "indicatorDefinition": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "responsibleOrganisation": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "latestPerfIndex": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "dataLimitations": {
            "type": "string"
          },
          "orderIndex": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "ragThresholds": {
            "type": "string"
          },
          "latestIndicatorValue": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "responsibleQA1": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "indicatorProgressReportingMethod": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "finalExpenditureTarget": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "performanceReport": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "description": {
            "type": "string"
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "latestExpenditureActual": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "latestRAGValue": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "parent": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "componentType": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "ragThresholdsList": {
            "$ref": "#/components/schemas/RAGThresholdsList"
          },
          "predecessor": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "dataSource": {
            "type": "string"
          },
          "perfIndexCalculationMethod": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "ComponentGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/ComponentGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "ComponentGuidDynamicDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ComponentGuidDynamicDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/ComponentGuidDynamicDto"
          }
        },
        "additionalProperties": false
      },
      "ComponentGuidDynamicDtoPagedResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ComponentGuidDynamicDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ComponentGuidDynamicDtoPagedResultDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/ComponentGuidDynamicDtoPagedResultDto"
          }
        },
        "additionalProperties": false
      },
      "ComponentPagedResultDtoGraphQLDataResult": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DynamicDto_ComponentFullProxy"
            }
          }
        },
        "additionalProperties": false,
        "description": "NOTE: shape of the response depends on the `properties` argument"
      },
      "ComponentPagedResultDtoGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/ComponentPagedResultDtoGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "ComponentProgressReportGraphQLDataResult": {
        "type": "object",
        "properties": {
          "reportedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "achievements": {
            "type": "string"
          },
          "correctiveMeasure": {
            "type": "string"
          },
          "qA2Comments": {
            "type": "string"
          },
          "expenditurerActual": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "component": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "poeRequired": {
            "type": "boolean",
            "nullable": true
          },
          "qA2CompletedBy": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "varianceReason": {
            "type": "string"
          },
          "auditStatus": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "auditCompletedBy": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "qA1CompletedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "otherComments": {
            "type": "string"
          },
          "qA2CompletedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "portfolioOfEvidence": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "auditOutcome": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "indicatorActual": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "ragValue": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "progressReportStatus": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "trend": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "qA1CompletedBy": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "qA1Comments": {
            "type": "string"
          },
          "progressReport": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "skipReportingThisPeriod": {
            "type": "boolean",
            "nullable": true
          },
          "indicatorTarget": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "auditComments": {
            "type": "string"
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "perfIndex": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "expenditureTarget": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "parent": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "reportedBy": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "auditCompletedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "ComponentProgressReportGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/ComponentProgressReportGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "ComponentProgressReportGuidDynamicDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ComponentProgressReportGuidDynamicDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/ComponentProgressReportGuidDynamicDto"
          }
        },
        "additionalProperties": false
      },
      "ComponentProgressReportGuidDynamicDtoPagedResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ComponentProgressReportGuidDynamicDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ComponentProgressReportGuidDynamicDtoPagedResultDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/ComponentProgressReportGuidDynamicDtoPagedResultDto"
          }
        },
        "additionalProperties": false
      },
      "ComponentProgressReportPagedResultDtoGraphQLDataResult": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DynamicDto_ComponentProgressReportFullProxy"
            }
          }
        },
        "additionalProperties": false,
        "description": "NOTE: shape of the response depends on the `properties` argument"
      },
      "ComponentProgressReportPagedResultDtoGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/ComponentProgressReportPagedResultDtoGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "ComponentTypeGraphQLDataResult": {
        "type": "object",
        "properties": {
          "icon": {
            "type": "string"
          },
          "caption": {
            "type": "string"
          },
          "progressAuditRequired": {
            "type": "boolean",
            "nullable": true
          },
          "description": {
            "type": "string"
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "showInAdminTree": {
            "type": "boolean",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "adminTreeUpdateForm": {
            "type": "string"
          },
          "progressDetailsSubForm": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "showInViewerTree": {
            "type": "boolean",
            "nullable": true
          },
          "adminTreeCreateForm": {
            "type": "string"
          },
          "adminTreeDetailsForm": {
            "type": "string"
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "viewerTreeDetailsForm": {
            "type": "string"
          },
          "progressQA2Required": {
            "type": "boolean",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "progressReportingRequired": {
            "type": "boolean",
            "nullable": true
          },
          "isIndicator": {
            "type": "boolean",
            "nullable": true
          },
          "progressQA1Required": {
            "type": "boolean",
            "nullable": true
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "ComponentTypeGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/ComponentTypeGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "ComponentTypeGuidDynamicDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ComponentTypeGuidDynamicDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/ComponentTypeGuidDynamicDto"
          }
        },
        "additionalProperties": false
      },
      "ComponentTypeGuidDynamicDtoPagedResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ComponentTypeGuidDynamicDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ComponentTypeGuidDynamicDtoPagedResultDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/ComponentTypeGuidDynamicDtoPagedResultDto"
          }
        },
        "additionalProperties": false
      },
      "ComponentTypePagedResultDtoGraphQLDataResult": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DynamicDto_ComponentTypeFullProxy"
            }
          }
        },
        "additionalProperties": false,
        "description": "NOTE: shape of the response depends on the `properties` argument"
      },
      "ComponentTypePagedResultDtoGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/ComponentTypePagedResultDtoGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "ConfigurableComponentDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "path": {
            "type": "string",
            "description": "Form path/id is used to identify a form",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Form name",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Description",
            "nullable": true
          },
          "settings": {
            "type": "string",
            "description": "Settings in JSON format",
            "nullable": true
          },
          "modelType": {
            "type": "string",
            "description": "Type of the form model",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Configurable Component DTO"
      },
      "ConfigurableComponentDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/ConfigurableComponentDto"
          }
        },
        "additionalProperties": false
      },
      "ConfigurableComponentUpdateSettingsInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "settings": {
            "type": "string",
            "description": "Settings in JSON format",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Update component settings input"
      },
      "ConfigurationItemGraphQLDataResult": {
        "type": "object",
        "properties": {
          "createdByImport": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "module": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "creatorUser": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "description": {
            "type": "string"
          },
          "origin": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "itemType": {
            "type": "string"
          },
          "versionStatus": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "versionNo": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "baseItem": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isLast": {
            "type": "boolean",
            "nullable": true
          },
          "parentVersion": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "lastModifierUser": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "suppress": {
            "type": "boolean",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deleterUser": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "label": {
            "type": "string"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "ConfigurationItemGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/ConfigurationItemGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "ConfigurationItemGuidDynamicDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ConfigurationItemGuidDynamicDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/ConfigurationItemGuidDynamicDto"
          }
        },
        "additionalProperties": false
      },
      "ConfigurationItemGuidDynamicDtoPagedResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConfigurationItemGuidDynamicDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ConfigurationItemGuidDynamicDtoPagedResultDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/ConfigurationItemGuidDynamicDtoPagedResultDto"
          }
        },
        "additionalProperties": false
      },
      "ConfigurationItemPagedResultDtoGraphQLDataResult": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DynamicDto_ConfigurationItemFullProxy"
            }
          }
        },
        "additionalProperties": false,
        "description": "NOTE: shape of the response depends on the `properties` argument"
      },
      "ConfigurationItemPagedResultDtoGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/ConfigurationItemPagedResultDtoGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "ConfigurationItemVersionStatus": {
        "enum": [
          1,
          2,
          3,
          4,
          5
        ],
        "type": "integer",
        "description": "Status of the Shesha.Domain.ConfigurationItems.ConfigurationItem",
        "format": "int32"
      },
      "ContractGraphQLDataResult": {
        "type": "object",
        "properties": {
          "extSysSource": {
            "type": "string"
          },
          "contractNumber": {
            "type": "string"
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "contractValue": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "extSysSyncStatus": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "primaryContactEmail": {
            "type": "string"
          },
          "supplier": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "extSysLastSyncDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "invoicedToDate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "extSysFirstSyncDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "contractStartDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "extSysSyncError": {
            "type": "string"
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "extSysId": {
            "type": "string"
          },
          "contractName": {
            "type": "string"
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "primaryContactTelephone": {
            "type": "string"
          },
          "contractDescription": {
            "type": "string"
          },
          "contractEndDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "ContractGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/ContractGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "ContractGuidDynamicDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ContractGuidDynamicDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/ContractGuidDynamicDto"
          }
        },
        "additionalProperties": false
      },
      "ContractGuidDynamicDtoPagedResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContractGuidDynamicDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ContractGuidDynamicDtoPagedResultDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/ContractGuidDynamicDtoPagedResultDto"
          }
        },
        "additionalProperties": false
      },
      "ContractPagedResultDtoGraphQLDataResult": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DynamicDto_ContractFullProxy"
            }
          }
        },
        "additionalProperties": false,
        "description": "NOTE: shape of the response depends on the `properties` argument"
      },
      "ContractPagedResultDtoGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/ContractPagedResultDtoGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "CreateFormConfigurationDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "moduleId": {
            "type": "string",
            "description": "Form path/id is used to identify a form",
            "format": "uuid",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Form name",
            "nullable": true
          },
          "label": {
            "type": "string",
            "description": "Label",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Description",
            "nullable": true
          },
          "markup": {
            "type": "string",
            "description": "Markup in JSON format",
            "nullable": true
          },
          "modelType": {
            "type": "string",
            "description": "Type of the form model",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Type of form (index, detail etc)",
            "nullable": true
          },
          "templateId": {
            "type": "string",
            "description": "Template that is used for the form creation",
            "format": "uuid",
            "nullable": true
          },
          "isTemplate": {
            "type": "boolean",
            "description": "If true, indeicates that the form is a template"
          }
        },
        "additionalProperties": false,
        "description": "Form configuration DTO"
      },
      "CreateNewVersionInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id of the current version",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "description": "Create new version input"
      },
      "CreateNoteDto": {
        "required": [
          "noteText",
          "ownerId",
          "ownerType"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "ownerId": {
            "type": "string",
            "description": "Id of the owner entity"
          },
          "ownerType": {
            "type": "string",
            "description": "Type short alias of the owner entity"
          },
          "category": {
            "type": "integer",
            "description": "Category of the note. Is used to split notes into groups",
            "format": "int32",
            "nullable": true
          },
          "priority": {
            "type": "integer",
            "description": "Note importance (priority)",
            "format": "int32",
            "nullable": true
          },
          "parentId": {
            "type": "string",
            "description": "Id of the parent note",
            "format": "uuid",
            "nullable": true
          },
          "noteText": {
            "type": "string",
            "description": "Text"
          }
        },
        "additionalProperties": false
      },
      "CreatePersonAccountDto": {
        "required": [
          "emailAddress",
          "firstName",
          "lastName",
          "password",
          "passwordConfirmation",
          "userName"
        ],
        "type": "object",
        "properties": {
          "userName": {
            "minLength": 5,
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "passwordConfirmation": {
            "type": "string"
          },
          "firstName": {
            "minLength": 1,
            "type": "string"
          },
          "lastName": {
            "minLength": 1,
            "type": "string"
          },
          "mobileNumber": {
            "type": "string",
            "nullable": true
          },
          "emailAddress": {
            "type": "string",
            "format": "email"
          },
          "typeOfAccount": {
            "$ref": "#/components/schemas/ReferenceListItemValueDto"
          }
        },
        "additionalProperties": false
      },
      "CreateRoleDto": {
        "required": [
          "displayName",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 32,
            "minLength": 0,
            "type": "string"
          },
          "displayName": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string"
          },
          "normalizedName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "maxLength": 5000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "grantedPermissions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateShaRoleAppointedPersonDto": {
        "type": "object",
        "properties": {
          "roleId": {
            "type": "string",
            "format": "uuid"
          },
          "person": {
            "$ref": "#/components/schemas/GuidNullableEntityWithDisplayNameDto"
          },
          "regions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GuidEntityWithDisplayNameDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateShaRoleDto": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string"
          },
          "nameSpace": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "description": {
            "maxLength": 2000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "canAssignToMultiple": {
            "type": "boolean"
          },
          "canAssignToPerson": {
            "type": "boolean"
          },
          "canAssignToRole": {
            "type": "boolean"
          },
          "canAssignToOrganisationRoleLevel": {
            "type": "boolean"
          },
          "canAssignToUnit": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "CreateTenantDto": {
        "required": [
          "adminEmailAddress",
          "name",
          "tenancyName"
        ],
        "type": "object",
        "properties": {
          "tenancyName": {
            "maxLength": 64,
            "minLength": 0,
            "pattern": "^[a-zA-Z][a-zA-Z0-9_-]{1,}$",
            "type": "string"
          },
          "name": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string"
          },
          "adminEmailAddress": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string"
          },
          "connectionString": {
            "maxLength": 1024,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "CreateUserDto": {
        "required": [
          "emailAddress",
          "name",
          "password",
          "surname",
          "userName"
        ],
        "type": "object",
        "properties": {
          "userName": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string"
          },
          "name": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string"
          },
          "surname": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string"
          },
          "emailAddress": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "format": "email"
          },
          "isActive": {
            "type": "boolean"
          },
          "roleNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "supportedPasswordResetMethods": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "nullable": true
          },
          "password": {
            "maxLength": 32,
            "minLength": 0,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "CurrencyGraphQLDataResult": {
        "type": "object",
        "properties": {
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "fullName": {
            "type": "string"
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "symbol": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "CurrencyGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/CurrencyGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "CurrencyGuidDynamicDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CurrencyGuidDynamicDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/CurrencyGuidDynamicDto"
          }
        },
        "additionalProperties": false
      },
      "CurrencyGuidDynamicDtoPagedResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CurrencyGuidDynamicDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CurrencyGuidDynamicDtoPagedResultDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/CurrencyGuidDynamicDtoPagedResultDto"
          }
        },
        "additionalProperties": false
      },
      "CurrencyPagedResultDtoGraphQLDataResult": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DynamicDto_CurrencyFullProxy"
            }
          }
        },
        "additionalProperties": false,
        "description": "NOTE: shape of the response depends on the `properties` argument"
      },
      "CurrencyPagedResultDtoGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/CurrencyPagedResultDtoGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "DataTableColumnDto": {
        "type": "object",
        "properties": {
          "propertyName": {
            "type": "string",
            "description": "Name of the property in the model",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Column name",
            "nullable": true
          },
          "caption": {
            "type": "string",
            "description": "Caption",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Description",
            "nullable": true
          },
          "dataType": {
            "type": "string",
            "description": "Data type",
            "nullable": true
          },
          "referenceListName": {
            "type": "string",
            "description": "Reference list name",
            "nullable": true
          },
          "referenceListNamespace": {
            "type": "string",
            "description": "Reference list namespace",
            "nullable": true
          },
          "entityReferenceTypeShortAlias": {
            "type": "string",
            "description": "Entity type short alias",
            "nullable": true
          },
          "autocompleteUrl": {
            "type": "string",
            "description": "Autocomplete url",
            "nullable": true
          },
          "allowInherited": {
            "type": "boolean",
            "description": "Allow selection of inherited entities, is used in pair with <seealso cref=\"P:Shesha.DataTables.DataTableColumnDto.AutocompleteUrl\" />"
          },
          "isFilterable": {
            "type": "boolean",
            "description": "Indicates is column filterable or not"
          },
          "isSortable": {
            "type": "boolean",
            "description": "Indicates is column sortable or not"
          }
        },
        "additionalProperties": false,
        "description": "Datatable column DTO"
      },
      "DataTableColumnDtoListAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataTableColumnDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DeviceForceUpdateDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "appStoreUrl": {
            "type": "string",
            "nullable": true
          },
          "osType": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "versionNo": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Registered mobile device DTO"
      },
      "DeviceForceUpdateDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/DeviceForceUpdateDto"
          }
        },
        "additionalProperties": false
      },
      "DeviceForceUpdateDtoPagedResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeviceForceUpdateDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DeviceForceUpdateDtoPagedResultDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/DeviceForceUpdateDtoPagedResultDto"
          }
        },
        "additionalProperties": false
      },
      "DeviceForceUpdateGraphQLDataResult": {
        "type": "object",
        "properties": {
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "versionNo": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "osType": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "appStoreUrl": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "DeviceForceUpdateGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/DeviceForceUpdateGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "DeviceForceUpdatePagedResultDtoGraphQLDataResult": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DynamicDto_DeviceForceUpdateFullProxy"
            }
          }
        },
        "additionalProperties": false,
        "description": "NOTE: shape of the response depends on the `properties` argument"
      },
      "DeviceForceUpdatePagedResultDtoGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/DeviceForceUpdatePagedResultDtoGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "DeviceRegistrationDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "deviceRegistrationId": {
            "type": "string",
            "nullable": true
          },
          "personId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "description": "Registered mobile device DTO"
      },
      "DeviceRegistrationDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/DeviceRegistrationDto"
          }
        },
        "additionalProperties": false
      },
      "DeviceRegistrationInput": {
        "type": "object",
        "properties": {
          "deviceRegistrationId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Registered mobile device DTO"
      },
      "DistributionListGraphQLDataResult": {
        "type": "object",
        "properties": {
          "namespace": {
            "type": "string"
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "DistributionListGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/DistributionListGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "DistributionListGuidDynamicDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DistributionListGuidDynamicDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/DistributionListGuidDynamicDto"
          }
        },
        "additionalProperties": false
      },
      "DistributionListGuidDynamicDtoPagedResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DistributionListGuidDynamicDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DistributionListGuidDynamicDtoPagedResultDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/DistributionListGuidDynamicDtoPagedResultDto"
          }
        },
        "additionalProperties": false
      },
      "DistributionListItemGraphQLDataResult": {
        "type": "object",
        "properties": {
          "person": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "cc": {
            "type": "string"
          },
          "postLevel": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "email": {
            "type": "string"
          },
          "subType": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "distributionList": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "post": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "type": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "mobileNo": {
            "type": "string"
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "shaRole": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "notifyByEmail": {
            "type": "boolean",
            "nullable": true
          },
          "notifyBySms": {
            "type": "boolean",
            "nullable": true
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "DistributionListItemGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/DistributionListItemGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "DistributionListItemGuidDynamicDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DistributionListItemGuidDynamicDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/DistributionListItemGuidDynamicDto"
          }
        },
        "additionalProperties": false
      },
      "DistributionListItemGuidDynamicDtoPagedResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DistributionListItemGuidDynamicDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DistributionListItemGuidDynamicDtoPagedResultDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/DistributionListItemGuidDynamicDtoPagedResultDto"
          }
        },
        "additionalProperties": false
      },
      "DistributionListItemPagedResultDtoGraphQLDataResult": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DynamicDto_DistributionListItemFullProxy"
            }
          }
        },
        "additionalProperties": false,
        "description": "NOTE: shape of the response depends on the `properties` argument"
      },
      "DistributionListItemPagedResultDtoGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/DistributionListItemPagedResultDtoGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "DistributionListPagedResultDtoGraphQLDataResult": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DynamicDto_DistributionListFullProxy"
            }
          }
        },
        "additionalProperties": false,
        "description": "NOTE: shape of the response depends on the `properties` argument"
      },
      "DistributionListPagedResultDtoGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/DistributionListPagedResultDtoGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "DraftItemDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "entityId": {
            "type": "string",
            "format": "uuid"
          },
          "entityTypeShortAlias": {
            "type": "string",
            "nullable": true
          },
          "subType": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "processConfigurationId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "priority": {
            "$ref": "#/components/schemas/RefListPriority"
          },
          "processName": {
            "type": "string",
            "nullable": true
          },
          "fullNumber": {
            "type": "string",
            "nullable": true
          },
          "heading": {
            "type": "string",
            "nullable": true
          },
          "checkpointDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dueDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "DraftItemsResponse": {
        "type": "object",
        "properties": {
          "paging": {
            "$ref": "#/components/schemas/PagingModel"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DraftItemDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DraftItemsResponseAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/DraftItemsResponse"
          }
        },
        "additionalProperties": false
      },
      "DynamicDto_AccountTransferFullProxy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          },
          "transferMethod": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "transferReason": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "dateCompleted": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "toAccount": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "fromReference": {
            "type": "string",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "rejectionReason": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "additionalInfoJson": {
            "type": "string",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "fromAccountEntity": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "signedRequest": {
            "type": "string",
            "nullable": true
          },
          "toReference": {
            "type": "string",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DynamicDto_AllowableChildComponentTypeFullProxy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "parentComponentType": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "canBeRoot": {
            "type": "boolean",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "childComponentType": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DynamicDto_AreaFullProxy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "comments": {
            "type": "string",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "parentArea": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "areaType": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "shortName": {
            "type": "string",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DynamicDto_BankAccountFullProxy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "branchCode": {
            "type": "string",
            "nullable": true
          },
          "accountNumber": {
            "type": "string",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "accountType": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "accountName": {
            "type": "string",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "ownerPerson": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "currentBalance": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "branchName": {
            "type": "string",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "ownerOrganisation": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "currency": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "bank": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DynamicDto_BankTransactionFullProxy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "allocationApprovedBy": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "allocationApprovedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "reference": {
            "type": "string",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "allocatedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "balance": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "bankAccount": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "allocationMechanism": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "allocatedAccount": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "comments": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "allocatedBy": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "transactionDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "allocationRejectedComments": {
            "type": "string",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "allocatedOrganisation": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "allocatedPerson": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "allocationStatus": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "transactionType": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DynamicDto_CheckListFullProxy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DynamicDto_CheckListItemFullProxy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "itemType": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "parent": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "commentsHeading": {
            "type": "string",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "checkList": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "allowAddComments": {
            "type": "boolean",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "commentsVisibilityExpression": {
            "type": "string",
            "nullable": true
          },
          "orderIndex": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DynamicDto_CheckListItemSelectionFullProxy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          },
          "comments": {
            "type": "string",
            "nullable": true
          },
          "entityType": {
            "type": "string",
            "nullable": true
          },
          "ownerId": {
            "type": "string",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "selection": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "entityId": {
            "type": "string",
            "nullable": true
          },
          "checkListItem": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "ownerType": {
            "type": "string",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DynamicDto_CheckListTreeItemFullProxy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "parentId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "hasChilds": {
            "type": "boolean",
            "nullable": true
          },
          "orderIndex": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "checkListId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DynamicDto_ComponentFullProxy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "responsibleReporting": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "refNo": {
            "type": "string",
            "nullable": true
          },
          "area": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "responsibleQA2": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "perfIndexWeight": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "ragCalculationMethod": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "finalIndicatorTarget": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "indicatorDefinition": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "responsibleOrganisation": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "latestPerfIndex": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "dataLimitations": {
            "type": "string",
            "nullable": true
          },
          "orderIndex": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "ragThresholds": {
            "type": "string",
            "nullable": true
          },
          "latestIndicatorValue": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "responsibleQA1": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "indicatorProgressReportingMethod": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "finalExpenditureTarget": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "performanceReport": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "latestExpenditureActual": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "latestRAGValue": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "parent": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "componentType": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "ragThresholdsList": {
            "$ref": "#/components/schemas/RAGThresholdsList"
          },
          "predecessor": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "dataSource": {
            "type": "string",
            "nullable": true
          },
          "perfIndexCalculationMethod": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DynamicDto_ComponentProgressReportFullProxy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          },
          "reportedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "achievements": {
            "type": "string",
            "nullable": true
          },
          "correctiveMeasure": {
            "type": "string",
            "nullable": true
          },
          "qA2Comments": {
            "type": "string",
            "nullable": true
          },
          "expenditurerActual": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "component": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "poeRequired": {
            "type": "boolean",
            "nullable": true
          },
          "qA2CompletedBy": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "varianceReason": {
            "type": "string",
            "nullable": true
          },
          "auditStatus": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "auditCompletedBy": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "qA1CompletedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "otherComments": {
            "type": "string",
            "nullable": true
          },
          "qA2CompletedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "portfolioOfEvidence": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "auditOutcome": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "indicatorActual": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "ragValue": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "progressReportStatus": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "trend": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "qA1CompletedBy": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "qA1Comments": {
            "type": "string",
            "nullable": true
          },
          "progressReport": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "skipReportingThisPeriod": {
            "type": "boolean",
            "nullable": true
          },
          "indicatorTarget": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "auditComments": {
            "type": "string",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "perfIndex": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "expenditureTarget": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "parent": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "reportedBy": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "auditCompletedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DynamicDto_ComponentTypeFullProxy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          },
          "icon": {
            "type": "string",
            "nullable": true
          },
          "caption": {
            "type": "string",
            "nullable": true
          },
          "progressAuditRequired": {
            "type": "boolean",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "showInAdminTree": {
            "type": "boolean",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "adminTreeUpdateForm": {
            "type": "string",
            "nullable": true
          },
          "progressDetailsSubForm": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "showInViewerTree": {
            "type": "boolean",
            "nullable": true
          },
          "adminTreeCreateForm": {
            "type": "string",
            "nullable": true
          },
          "adminTreeDetailsForm": {
            "type": "string",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "viewerTreeDetailsForm": {
            "type": "string",
            "nullable": true
          },
          "progressQA2Required": {
            "type": "boolean",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "progressReportingRequired": {
            "type": "boolean",
            "nullable": true
          },
          "isIndicator": {
            "type": "boolean",
            "nullable": true
          },
          "progressQA1Required": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DynamicDto_ConfigurationItemFullProxy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          },
          "createdByImport": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "module": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "creatorUser": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "origin": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "itemType": {
            "type": "string",
            "nullable": true
          },
          "versionStatus": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "versionNo": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "baseItem": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isLast": {
            "type": "boolean",
            "nullable": true
          },
          "parentVersion": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "lastModifierUser": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "suppress": {
            "type": "boolean",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deleterUser": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "label": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DynamicDto_ContractFullProxy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          },
          "extSysSource": {
            "type": "string",
            "nullable": true
          },
          "contractNumber": {
            "type": "string",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "contractValue": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "extSysSyncStatus": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "primaryContactEmail": {
            "type": "string",
            "nullable": true
          },
          "supplier": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "extSysLastSyncDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "invoicedToDate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "extSysFirstSyncDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "contractStartDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "extSysSyncError": {
            "type": "string",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "extSysId": {
            "type": "string",
            "nullable": true
          },
          "contractName": {
            "type": "string",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "primaryContactTelephone": {
            "type": "string",
            "nullable": true
          },
          "contractDescription": {
            "type": "string",
            "nullable": true
          },
          "contractEndDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DynamicDto_CurrencyFullProxy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "fullName": {
            "type": "string",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "symbol": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DynamicDto_DeviceForceUpdateFullProxy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "versionNo": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "osType": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "appStoreUrl": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DynamicDto_DistributionListFullProxy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          },
          "namespace": {
            "type": "string",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DynamicDto_DistributionListItemFullProxy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          },
          "person": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "cc": {
            "type": "string",
            "nullable": true
          },
          "postLevel": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "subType": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "distributionList": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "post": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "type": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "mobileNo": {
            "type": "string",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "shaRole": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "notifyByEmail": {
            "type": "boolean",
            "nullable": true
          },
          "notifyBySms": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DynamicDto_EmployeeFullProxy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          },
          "preferredContactMethod": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "title": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "identityNumber": {
            "type": "string",
            "nullable": true
          },
          "officeRoomNo": {
            "type": "string",
            "nullable": true
          },
          "officeNumber": {
            "type": "string",
            "nullable": true
          },
          "isShiftWorker": {
            "type": "boolean",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "homeNumber": {
            "type": "string",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "mobileNumber1": {
            "type": "string",
            "nullable": true
          },
          "detailsValidated": {
            "type": "boolean",
            "nullable": true
          },
          "emailAddress1": {
            "type": "string",
            "nullable": true
          },
          "officeLocation": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "middleName": {
            "type": "string",
            "nullable": true
          },
          "gender": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "smallSignatureFile": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "user": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "mobileNumber2": {
            "type": "string",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "customShortName": {
            "type": "string",
            "nullable": true
          },
          "signatureType": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "fullName": {
            "type": "string",
            "nullable": true
          },
          "workAddress": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "address": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "photo": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "securityClearanceEndDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "hasNoComputer": {
            "type": "boolean",
            "nullable": true
          },
          "employeeNo": {
            "type": "string",
            "nullable": true
          },
          "signatureFile": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "securityClearance": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "emailAddress2": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "faxNumber": {
            "type": "string",
            "nullable": true
          },
          "initials": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DynamicDto_EntityConfigFullProxy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          },
          "className": {
            "type": "string",
            "nullable": true
          },
          "friendlyName": {
            "type": "string",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "typeShortAlias": {
            "type": "string",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "configuration": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "parent": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "propertiesMD5": {
            "type": "string",
            "nullable": true
          },
          "generateAppService": {
            "type": "boolean",
            "nullable": true
          },
          "fullClassName": {
            "type": "string",
            "nullable": true
          },
          "source": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "tableName": {
            "type": "string",
            "nullable": true
          },
          "itemType": {
            "type": "string",
            "nullable": true
          },
          "discriminatorValue": {
            "type": "string",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "namespace": {
            "type": "string",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DynamicDto_EntityPropertyFullProxy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "suppress": {
            "type": "boolean",
            "nullable": true
          },
          "isFrameworkRelated": {
            "type": "boolean",
            "nullable": true
          },
          "minLength": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "referenceListName": {
            "type": "string",
            "nullable": true
          },
          "dataFormat": {
            "type": "string",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "entityType": {
            "type": "string",
            "nullable": true
          },
          "dataType": {
            "type": "string",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "audited": {
            "type": "boolean",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "source": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "regExp": {
            "type": "string",
            "nullable": true
          },
          "readOnly": {
            "type": "boolean",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "label": {
            "type": "string",
            "nullable": true
          },
          "itemsType": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "parentProperty": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "validationMessage": {
            "type": "string",
            "nullable": true
          },
          "referenceListNamespace": {
            "type": "string",
            "nullable": true
          },
          "max": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "min": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "maxLength": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "entityConfig": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "required": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DynamicDto_FinancialAccountFullProxy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          },
          "currency": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "lastTransactionProcessedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "totalPaid": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "creditLimit": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "collectionStatus": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "balance": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "pendingBalance": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "totalInvoiced": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DynamicDto_FinancialTransactionFullProxy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "runningBalance": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "transactionDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "allocatedStatus": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "sourceEntityType": {
            "type": "string",
            "nullable": true
          },
          "transactionType": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "account": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "allocatedAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "cancellationReason": {
            "type": "string",
            "nullable": true
          },
          "reference": {
            "type": "string",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "sourceEntityId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DynamicDto_FormConfigurationFullProxy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          },
          "isTemplate": {
            "type": "boolean",
            "nullable": true
          },
          "itemType": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "configuration": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "fullName": {
            "type": "string",
            "nullable": true
          },
          "markup": {
            "type": "string",
            "nullable": true
          },
          "modelType": {
            "type": "string",
            "nullable": true
          },
          "template": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DynamicDto_FormFullProxy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "modelType": {
            "type": "string",
            "nullable": true
          },
          "settings": {
            "type": "string",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DynamicDto_FrontEndAppFullProxy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DynamicDto_HomeUrlAppointmentFullProxy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "homeUrlId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "roleId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DynamicDto_HomeUrlRouteFullProxy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "roles": {
            "type": "string",
            "nullable": true
          },
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "orderIndex": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "app": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "homeUrl": {
            "type": "string",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DynamicDto_ImportResultFullProxy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          },
          "sourceType": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "rowsAffected": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "rowsInactivated": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rowsInserted": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "startedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "rowsSkippedNotChanged": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isSuccess": {
            "type": "boolean",
            "nullable": true
          },
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "finishedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "importedFile": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "rowsUpdated": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "avgSpeed": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "rowsSkipped": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "importedFileMD5": {
            "type": "string",
            "nullable": true
          },
          "logFile": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DynamicDto_IndicatorDefinitionFullProxy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "whatMeasured": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "purpose": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "calculationType": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "unitOfMeasure": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "methodOfCalculation": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DynamicDto_InvoiceFullProxy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "dueDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "invoicingPeriodStartDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "taxAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "cancelledReason": {
            "type": "string",
            "nullable": true
          },
          "vatNumber": {
            "type": "string",
            "nullable": true
          },
          "telNumber": {
            "type": "string",
            "nullable": true
          },
          "extSysSyncError": {
            "type": "string",
            "nullable": true
          },
          "paymentTerms": {
            "type": "string",
            "nullable": true
          },
          "invoiceNo": {
            "type": "string",
            "nullable": true
          },
          "faxNumber": {
            "type": "string",
            "nullable": true
          },
          "invoiceDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "issuedTo": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "cellNumber": {
            "type": "string",
            "nullable": true
          },
          "invoiceDescription": {
            "type": "string",
            "nullable": true
          },
          "invoiceSendStatus": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "extSysSyncStatus": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "contract": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "extSysSource": {
            "type": "string",
            "nullable": true
          },
          "contactPerson": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "totalInclTax": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "issuedBy": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "invoiceType": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "paymentMethod": {
            "type": "string",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "type": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "totalExclTax": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "issuedToPerson": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "invoiceTitle": {
            "type": "string",
            "nullable": true
          },
          "extSysId": {
            "type": "string",
            "nullable": true
          },
          "extSysLastSyncDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "invoicingPeriodEndDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "extSysFirstSyncDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "account": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DynamicDto_InvoiceLineItemFullProxy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lineItemTaxAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "itemDescription": {
            "type": "string",
            "nullable": true
          },
          "extSysSyncError": {
            "type": "string",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "extSysId": {
            "type": "string",
            "nullable": true
          },
          "priceList": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "lineItemSubTotalInclTax": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "servicePeriodStartDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "orderIndex": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "unitPrice": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "extSysFirstSyncDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "product": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "lineItemSubTotal": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "invoice": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "extSysLastSyncDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "unitOfMeasure": {
            "type": "string",
            "nullable": true
          },
          "extSysSyncStatus": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "extSysSource": {
            "type": "string",
            "nullable": true
          },
          "servicePeriodEndDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "itemName": {
            "type": "string",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DynamicDto_LogonMessageAuditItemFullProxy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "person": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "message": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "dontShowAgain": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DynamicDto_LogonMessageFullProxy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          },
          "content": {
            "type": "string",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "visibility": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "publicationStartDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "publicationEndDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "distributionList": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DynamicDto_MobileDeviceFullProxy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "isLocked": {
            "type": "boolean",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "imei": {
            "type": "string",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creatorUser": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "readRouteName": {
            "type": "string",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DynamicDto_ModuleFullProxy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          },
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "isEnabled": {
            "type": "boolean",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DynamicDto_NoteFullProxy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "author": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "category": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "parent": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "ownerId": {
            "type": "string",
            "nullable": true
          },
          "noteText": {
            "type": "string",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "priority": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "ownerType": {
            "type": "string",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DynamicDto_NotificationFullProxy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "fullName": {
            "type": "string",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "namespace": {
            "type": "string",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DynamicDto_NotificationMessageFullProxy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          },
          "sendType": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "body": {
            "type": "string",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "sender": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "tenantNotification": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "notification": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "tryCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sendDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "recipientText": {
            "type": "string",
            "nullable": true
          },
          "subject": {
            "type": "string",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "recipient": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "template": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DynamicDto_NotificationTemplateFullProxy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "bodyFormat": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isEnabled": {
            "type": "boolean",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "subject": {
            "type": "string",
            "nullable": true
          },
          "sendType": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "body": {
            "type": "string",
            "nullable": true
          },
          "notification": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DynamicDto_OrderFullProxy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          },
          "requester": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "requisitionNo": {
            "type": "string",
            "nullable": true
          },
          "refNo": {
            "type": "string",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "requestedCollectionDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "receiver": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "confirmedCollectionDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DynamicDto_OrganisationBankAccountFullProxy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          },
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "validToDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "bankAccount": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "inactive": {
            "type": "boolean",
            "nullable": true
          },
          "organisation": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "role": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "validFromDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DynamicDto_OrganisationPostAppointmentFullProxy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "storedFile": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "appointmentStatus": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "organisationPost": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "appointmentEndDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "appointmentStartDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "employee": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "userHasOpened": {
            "type": "boolean",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DynamicDto_OrganisationPostFullProxy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          },
          "supervisorPost": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "shortName": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "organisationUnit": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "organisationPostLevel": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "discriminatorName": {
            "type": "string",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "postDiscriminator": {
            "type": "string",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isUnitSupervisor": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DynamicDto_OrganisationPostLevelFullProxy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "shortName": {
            "type": "string",
            "nullable": true
          },
          "signOffAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "rankLevel": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "daysAllowedToRespond": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fullName": {
            "type": "string",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DynamicDto_OtpAuditItemFullProxy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          },
          "recipientType": {
            "type": "string",
            "nullable": true
          },
          "expiresOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "recipientId": {
            "type": "string",
            "nullable": true
          },
          "otp": {
            "type": "string",
            "nullable": true
          },
          "sendType": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "sendStatus": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "actionType": {
            "type": "string",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "sentOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "sendTo": {
            "type": "string",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DynamicDto_PaymentInByEFTFullProxy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          },
          "account": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "paymentMethodReference": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "paymentDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "proofOfPayemnt": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "bankTransaction": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DynamicDto_PaymentInFullProxy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "paymentMethodReference": {
            "type": "string",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "paymentDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "account": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DynamicDto_PaymentInvoiceAllocationFullProxy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          },
          "invoice": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "financialTransaction": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "paymentIn": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DynamicDto_PaymentOutByEFTFullProxy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          },
          "paymentDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "account": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "bankTransaction": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "paymentMethodReference": {
            "type": "string",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DynamicDto_PaymentOutFullProxy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "account": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "paymentMethodReference": {
            "type": "string",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "paymentDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DynamicDto_PaymentPlanFullProxy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "penaltyAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "account": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "amountPaidToDate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "planAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "discountAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "planStartDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "planEndDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "planStatus": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DynamicDto_PaymentPlanLineFullProxy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "paymentPlan": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "paymentPlanLineStatus": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "allocatedStatus": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "paidDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "plannedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "plannedAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "paidAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DynamicDto_PerformanceReportAllowedComponentTypeFullProxy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "componentType": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "performanceReportTemplate": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "canBeRoot": {
            "type": "boolean",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DynamicDto_PerformanceReportFullProxy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "template": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "periodCovered": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "shortName": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DynamicDto_PerformanceReportTemplateFullProxy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "periodTypeCovered": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "adminPermission": {
            "type": "string",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "processManagerPermission": {
            "type": "string",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "shortName": {
            "type": "string",
            "nullable": true
          },
          "progressReportingCycle": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DynamicDto_PeriodFullProxy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "parentPeriod": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "periodEnd": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "shortName": {
            "type": "string",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "periodType": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "periodStart": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DynamicDto_PermissionedObjectFullProxy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          },
          "inherited": {
            "type": "boolean",
            "nullable": true
          },
          "access": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "object": {
            "type": "string",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "module": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "permissions": {
            "type": "string",
            "nullable": true
          },
          "category": {
            "type": "string",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "parent": {
            "type": "string",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "dependency": {
            "type": "string",
            "nullable": true
          },
          "hidden": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DynamicDto_PersonFullProxy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          },
          "customShortName": {
            "type": "string",
            "nullable": true
          },
          "preferredContactMethod": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "middleName": {
            "type": "string",
            "nullable": true
          },
          "mobileNumber2": {
            "type": "string",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "emailAddress1": {
            "type": "string",
            "nullable": true
          },
          "mobileNumber1": {
            "type": "string",
            "nullable": true
          },
          "initials": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "photo": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "homeNumber": {
            "type": "string",
            "nullable": true
          },
          "workAddress": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "gender": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "emailAddress2": {
            "type": "string",
            "nullable": true
          },
          "user": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "fullName": {
            "type": "string",
            "nullable": true
          },
          "identityNumber": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DynamicDto_PriceListFullProxy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "flags": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "applicablePeriod": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DynamicDto_PriceListProductPriceFullProxy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "priceList": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "product": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DynamicDto_ProcessConfigurationDocumentTemplateFullProxy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "sortOrder": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "processConfiguration": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "emailTemplate": {
            "type": "string",
            "nullable": true
          },
          "documentTemplate": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DynamicDto_ProductFullProxy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          },
          "extSysLastSyncDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "extSysSource": {
            "type": "string",
            "nullable": true
          },
          "extSysFirstSyncDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "productCode": {
            "type": "string",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "defaultTaxRate": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "extSysId": {
            "type": "string",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "extSysSyncStatus": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "productType": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "productSubType": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "extSysSyncError": {
            "type": "string",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "defaultUnitOfMeasure": {
            "type": "string",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DynamicDto_ProgressReportFullProxy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "performanceReport": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "periodCovered": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DynamicDto_QuestionAssignmentFullProxy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "answer": {
            "type": "string",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "user": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "selectedQuestion": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DynamicDto_ReferenceListFullProxy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "namespace": {
            "type": "string",
            "nullable": true
          },
          "noSelectionValue": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "hardLinkToApplication": {
            "type": "boolean",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DynamicDto_ReferenceListItemFullProxy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "parent": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "orderIndex": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "referenceList": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "hardLinkToApplication": {
            "type": "boolean",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "item": {
            "type": "string",
            "nullable": true
          },
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "itemValue": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DynamicDto_ReportingReportFullProxy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          },
          "useCustomParameters": {
            "type": "boolean",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "customFilterView": {
            "type": "string",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "reportDefinitionXml": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "parameterFormPath": {
            "type": "string",
            "nullable": true
          },
          "showInReportsMenu": {
            "type": "boolean",
            "nullable": true
          },
          "category": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "connectionStringName": {
            "type": "string",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "orderIndex": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "reportState": {
            "type": "string",
            "nullable": true
          },
          "visibilityRole": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "generatedFieldsList": {
            "type": "string",
            "nullable": true
          },
          "cronExpression": {
            "type": "string",
            "nullable": true
          },
          "reportType": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DynamicDto_ReportingReportParameterFullProxy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "hideParameter": {
            "type": "boolean",
            "nullable": true
          },
          "entityTypeShortAlias": {
            "type": "string",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "referenceListName": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "parameterValue": {
            "type": "string",
            "nullable": true
          },
          "reportingReport": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "internalName": {
            "type": "string",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "type": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "referenceListNamespace": {
            "type": "string",
            "nullable": true
          },
          "parameterOrderIndex": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "columnName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DynamicDto_ScheduledJobExecutionFullProxy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "job": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "finishedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "startedBy": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "parentExecution": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "startedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "trigger": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "logFilePath": {
            "type": "string",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DynamicDto_ScheduledJobFullProxy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "jobName": {
            "type": "string",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "jobDescription": {
            "type": "string",
            "nullable": true
          },
          "startupMode": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "jobNamespace": {
            "type": "string",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "jobStatus": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DynamicDto_ScheduledJobTriggerFullProxy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "job": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "parametersJson": {
            "type": "string",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "cronString": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DynamicDto_SecurityQuestionFullProxy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "question": {
            "type": "string",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DynamicDto_SequenceFullProxy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastIssuedNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "seriesName": {
            "type": "string",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "sequenceName": {
            "type": "string",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "lastIssuedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DynamicDto_ServiceFullProxy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          },
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "comments": {
            "type": "string",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "serviceCategory": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "serviceName": {
            "type": "string",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DynamicDto_ShaRoleAppointedPersonFullProxy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          },
          "role": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "person": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DynamicDto_ShaRoleAppointedPostFullProxy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "role": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "organisationPost": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DynamicDto_ShaRoleAppointedPostLevelFullProxy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          },
          "organisationPostLevel": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "role": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DynamicDto_ShaRoleFullProxy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "canAssignToMultiple": {
            "type": "boolean",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isProcessConfigurationSpecific": {
            "type": "boolean",
            "nullable": true
          },
          "canAssignToPerson": {
            "type": "boolean",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "canAssignToRole": {
            "type": "boolean",
            "nullable": true
          },
          "canAssignToOrganisationRoleLevel": {
            "type": "boolean",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "nameSpace": {
            "type": "string",
            "nullable": true
          },
          "hardLinkToApplication": {
            "type": "boolean",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "sortIndex": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isRegionSpecific": {
            "type": "boolean",
            "nullable": true
          },
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "canAssignToUnit": {
            "type": "boolean",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DynamicDto_ShaUserLoginAttemptFullProxy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "clientIpAddress": {
            "type": "string",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "loginAttemptNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "deviceName": {
            "type": "string",
            "nullable": true
          },
          "result": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tenancyName": {
            "type": "string",
            "nullable": true
          },
          "userNameOrEmailAddress": {
            "type": "string",
            "nullable": true
          },
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "browserInfo": {
            "type": "string",
            "nullable": true
          },
          "imei": {
            "type": "string",
            "nullable": true
          },
          "clientName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DynamicDto_StatementFullProxy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "current": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "ninetyDays": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "thirtyDays": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "overNinetyDays": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "statementFile": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "sixtyDays": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "account": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "statementDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DynamicDto_SupplierFullProxy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          },
          "organisationType": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "freeTextAddress": {
            "type": "string",
            "nullable": true
          },
          "extSysSyncStatus": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "supplierNo": {
            "type": "string",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "primaryContact": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "contactEmail": {
            "type": "string",
            "nullable": true
          },
          "shortAlias": {
            "type": "string",
            "nullable": true
          },
          "extSysFirstSyncDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "supplierStatus": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "extSysSyncError": {
            "type": "string",
            "nullable": true
          },
          "contactMobileNo": {
            "type": "string",
            "nullable": true
          },
          "extSysLastSyncDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "parent": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "extSysId": {
            "type": "string",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "extSysSource": {
            "type": "string",
            "nullable": true
          },
          "companyRegistrationNo": {
            "type": "string",
            "nullable": true
          },
          "vatRegistrationNo": {
            "type": "string",
            "nullable": true
          },
          "primaryAddress": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DynamicDto_SupplierPriceFullProxy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          },
          "extSysId": {
            "type": "string",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "supplier": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "extSysFirstSyncDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "extSysSyncStatus": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "product": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "price": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "extSysSyncError": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "extSysSource": {
            "type": "string",
            "nullable": true
          },
          "extSysLastSyncDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "contract": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DynamicDto_TaxRateFullProxy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          },
          "extSysLastSyncDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "extSysSyncError": {
            "type": "string",
            "nullable": true
          },
          "rate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "extSysSyncStatus": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "extSysSource": {
            "type": "string",
            "nullable": true
          },
          "extSysFirstSyncDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "extSysId": {
            "type": "string",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DynamicDto_UnitOfMeasureFullProxy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "displayComponent": {
            "type": "string",
            "nullable": true
          },
          "unitPrefix": {
            "type": "string",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "editComponent": {
            "type": "string",
            "nullable": true
          },
          "displayFormatString": {
            "type": "string",
            "nullable": true
          },
          "unitSuffix": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EmployeeGraphQLDataResult": {
        "type": "object",
        "properties": {
          "preferredContactMethod": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "title": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "identityNumber": {
            "type": "string"
          },
          "officeRoomNo": {
            "type": "string"
          },
          "officeNumber": {
            "type": "string"
          },
          "isShiftWorker": {
            "type": "boolean",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "homeNumber": {
            "type": "string"
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "mobileNumber1": {
            "type": "string"
          },
          "detailsValidated": {
            "type": "boolean",
            "nullable": true
          },
          "emailAddress1": {
            "type": "string"
          },
          "officeLocation": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "middleName": {
            "type": "string"
          },
          "gender": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "smallSignatureFile": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "user": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "mobileNumber2": {
            "type": "string"
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "customShortName": {
            "type": "string"
          },
          "signatureType": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "fullName": {
            "type": "string"
          },
          "workAddress": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "address": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "photo": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "securityClearanceEndDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "hasNoComputer": {
            "type": "boolean",
            "nullable": true
          },
          "employeeNo": {
            "type": "string"
          },
          "signatureFile": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "firstName": {
            "type": "string"
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "securityClearance": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "emailAddress2": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "faxNumber": {
            "type": "string"
          },
          "initials": {
            "type": "string"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "EmployeeGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/EmployeeGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "EmployeeGuidDynamicDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EmployeeGuidDynamicDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/EmployeeGuidDynamicDto"
          }
        },
        "additionalProperties": false
      },
      "EmployeeGuidDynamicDtoPagedResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmployeeGuidDynamicDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "EmployeeGuidDynamicDtoPagedResultDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/EmployeeGuidDynamicDtoPagedResultDto"
          }
        },
        "additionalProperties": false
      },
      "EmployeePagedResultDtoGraphQLDataResult": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DynamicDto_EmployeeFullProxy"
            }
          }
        },
        "additionalProperties": false,
        "description": "NOTE: shape of the response depends on the `properties` argument"
      },
      "EmployeePagedResultDtoGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/EmployeePagedResultDtoGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "EntityConfigDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "friendlyName": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "typeShortAlias": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "tableName": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "className": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "namespace": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "discriminatorValue": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "source": {
            "$ref": "#/components/schemas/MetadataSourceType"
          },
          "suppress": {
            "type": "boolean"
          },
          "generateAppService": {
            "type": "boolean"
          }
        },
        "additionalProperties": false,
        "description": "Entity config DTO"
      },
      "EntityConfigDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/EntityConfigDto"
          }
        },
        "additionalProperties": false
      },
      "EntityConfigDtoPagedResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EntityConfigDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "EntityConfigDtoPagedResultDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/EntityConfigDtoPagedResultDto"
          }
        },
        "additionalProperties": false
      },
      "EntityConfigGraphQLDataResult": {
        "type": "object",
        "properties": {
          "className": {
            "type": "string"
          },
          "friendlyName": {
            "type": "string"
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "typeShortAlias": {
            "type": "string"
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "configuration": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "parent": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "propertiesMD5": {
            "type": "string"
          },
          "generateAppService": {
            "type": "boolean",
            "nullable": true
          },
          "fullClassName": {
            "type": "string"
          },
          "source": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "tableName": {
            "type": "string"
          },
          "itemType": {
            "type": "string"
          },
          "discriminatorValue": {
            "type": "string"
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "namespace": {
            "type": "string"
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "EntityConfigGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/EntityConfigGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "EntityConfigPagedResultDtoGraphQLDataResult": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DynamicDto_EntityConfigFullProxy"
            }
          }
        },
        "additionalProperties": false,
        "description": "NOTE: shape of the response depends on the `properties` argument"
      },
      "EntityConfigPagedResultDtoGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/EntityConfigPagedResultDtoGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "EntityPropertyDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "entityConfigName": {
            "type": "string",
            "description": "Entity Config Name",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Property Name",
            "nullable": true
          },
          "label": {
            "type": "string",
            "description": "Label (display name)",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Description",
            "nullable": true
          },
          "dataType": {
            "type": "string",
            "description": "Data type",
            "nullable": true
          },
          "dataFormat": {
            "type": "string",
            "description": "Data format",
            "nullable": true
          },
          "entityType": {
            "type": "string",
            "description": "Entity type. Aplicable for entity references",
            "nullable": true
          },
          "referenceListName": {
            "type": "string",
            "description": "Reference list name",
            "nullable": true
          },
          "referenceListNamespace": {
            "type": "string",
            "description": "Reference list namespace",
            "nullable": true
          },
          "source": {
            "$ref": "#/components/schemas/MetadataSourceType"
          },
          "properties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EntityPropertyDto"
            },
            "description": "Child properties, applicable for complex data types (e.g. object, array)",
            "nullable": true
          },
          "itemsType": {
            "$ref": "#/components/schemas/EntityPropertyDto"
          },
          "suppress": {
            "type": "boolean",
            "description": "If true, the property is not returned from Get end-points and is ignored if submitted on Create/Update end-points\r\nThe property should also not be listed on the form configurator property list"
          },
          "required": {
            "type": "boolean",
            "description": "Indicates if a property value is required in order to save"
          },
          "readOnly": {
            "type": "boolean",
            "description": "If true, the property cannot be edited via the dynamically generated create/update end-points:\r\n- property should not be listed on create/update end-points\r\n- should be set to 'True' and not editable for read-only properties of domain classes"
          },
          "audited": {
            "type": "boolean",
            "description": "Equivalent to Audited attribute on the property"
          },
          "min": {
            "type": "number",
            "description": "Validation min",
            "format": "double",
            "nullable": true
          },
          "max": {
            "type": "number",
            "description": "Validation max",
            "format": "double",
            "nullable": true
          },
          "minLength": {
            "type": "integer",
            "description": "Validation min length",
            "format": "int32",
            "nullable": true
          },
          "maxLength": {
            "type": "integer",
            "description": "Validation max length",
            "format": "int32",
            "nullable": true
          },
          "regExp": {
            "type": "string",
            "description": "Validation RegularExpression",
            "nullable": true
          },
          "validationMessage": {
            "type": "string",
            "description": "Validation message",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Entity property DTO"
      },
      "EntityPropertyDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/EntityPropertyDto"
          }
        },
        "additionalProperties": false
      },
      "EntityPropertyDtoPagedResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EntityPropertyDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "EntityPropertyDtoPagedResultDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/EntityPropertyDtoPagedResultDto"
          }
        },
        "additionalProperties": false
      },
      "EntityPropertyGraphQLDataResult": {
        "type": "object",
        "properties": {
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "suppress": {
            "type": "boolean",
            "nullable": true
          },
          "isFrameworkRelated": {
            "type": "boolean",
            "nullable": true
          },
          "minLength": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "referenceListName": {
            "type": "string"
          },
          "dataFormat": {
            "type": "string"
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "entityType": {
            "type": "string"
          },
          "dataType": {
            "type": "string"
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "audited": {
            "type": "boolean",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "source": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "regExp": {
            "type": "string"
          },
          "readOnly": {
            "type": "boolean",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "label": {
            "type": "string"
          },
          "itemsType": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "parentProperty": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "description": {
            "type": "string"
          },
          "validationMessage": {
            "type": "string"
          },
          "referenceListNamespace": {
            "type": "string"
          },
          "max": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "min": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "maxLength": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "entityConfig": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "required": {
            "type": "boolean",
            "nullable": true
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "EntityPropertyGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/EntityPropertyGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "EntityPropertyPagedResultDtoGraphQLDataResult": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DynamicDto_EntityPropertyFullProxy"
            }
          }
        },
        "additionalProperties": false,
        "description": "NOTE: shape of the response depends on the `properties` argument"
      },
      "EntityPropertyPagedResultDtoGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/EntityPropertyPagedResultDtoGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "ErrorInfo": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "details": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationErrorInfo"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EventLogItem": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Logged message",
            "nullable": true
          },
          "timeStamp": {
            "type": "string",
            "description": "Event timestamp",
            "format": "date-time"
          },
          "level": {
            "type": "string",
            "description": "Level (info/warn/error)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents event log item logged by Shesha.Scheduler.SignalR.SignalrAppender"
      },
      "EventLogItemListAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventLogItem"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ExcelColumn": {
        "type": "object",
        "properties": {
          "propertyName": {
            "type": "string",
            "nullable": true
          },
          "label": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "list of excel columns"
      },
      "ExportToExcelInput": {
        "type": "object",
        "properties": {
          "maxResultCount": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "skipCount": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "sorting": {
            "type": "string",
            "nullable": true
          },
          "filter": {
            "type": "string",
            "description": "Filter string in JsonLogic format",
            "nullable": true
          },
          "quickSearch": {
            "type": "string",
            "description": "Quick search string. Is used to search entities by text",
            "nullable": true
          },
          "properties": {
            "type": "string",
            "description": "List of properties to fetch in GraphQL-like syntax. Supports nested properties",
            "nullable": true
          },
          "entityType": {
            "type": "string",
            "nullable": true
          },
          "columns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExcelColumn"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Export to excel input"
      },
      "ExternalAuthenticateModel": {
        "required": [
          "authProvider",
          "providerAccessCode",
          "providerKey"
        ],
        "type": "object",
        "properties": {
          "authProvider": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string"
          },
          "providerKey": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string"
          },
          "providerAccessCode": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ExternalAuthenticateResultModel": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "nullable": true
          },
          "encryptedAccessToken": {
            "type": "string",
            "nullable": true
          },
          "expireInSeconds": {
            "type": "integer",
            "format": "int32"
          },
          "waitingForActivation": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ExternalAuthenticateResultModelAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/ExternalAuthenticateResultModel"
          }
        },
        "additionalProperties": false
      },
      "ExternalLoginProviderInfoModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "clientId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ExternalLoginProviderInfoModelListAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExternalLoginProviderInfoModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FileContentResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "type": "string",
            "format": "binary",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FileStreamResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "type": "string",
            "format": "binary",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FinancialAccountGraphQLDataResult": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "lastTransactionProcessedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "totalPaid": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "creditLimit": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "collectionStatus": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "balance": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "pendingBalance": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "totalInvoiced": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "FinancialAccountGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/FinancialAccountGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "FinancialAccountGuidDynamicDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FinancialAccountGuidDynamicDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/FinancialAccountGuidDynamicDto"
          }
        },
        "additionalProperties": false
      },
      "FinancialAccountGuidDynamicDtoPagedResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FinancialAccountGuidDynamicDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "FinancialAccountGuidDynamicDtoPagedResultDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/FinancialAccountGuidDynamicDtoPagedResultDto"
          }
        },
        "additionalProperties": false
      },
      "FinancialAccountPagedResultDtoGraphQLDataResult": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DynamicDto_FinancialAccountFullProxy"
            }
          }
        },
        "additionalProperties": false,
        "description": "NOTE: shape of the response depends on the `properties` argument"
      },
      "FinancialAccountPagedResultDtoGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/FinancialAccountPagedResultDtoGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "FinancialTransactionGraphQLDataResult": {
        "type": "object",
        "properties": {
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "runningBalance": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "transactionDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "allocatedStatus": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "sourceEntityType": {
            "type": "string"
          },
          "transactionType": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "description": {
            "type": "string"
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "account": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "allocatedAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "cancellationReason": {
            "type": "string"
          },
          "reference": {
            "type": "string"
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "sourceEntityId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "FinancialTransactionGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/FinancialTransactionGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "FinancialTransactionGuidDynamicDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FinancialTransactionGuidDynamicDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/FinancialTransactionGuidDynamicDto"
          }
        },
        "additionalProperties": false
      },
      "FinancialTransactionGuidDynamicDtoPagedResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FinancialTransactionGuidDynamicDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "FinancialTransactionGuidDynamicDtoPagedResultDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/FinancialTransactionGuidDynamicDtoPagedResultDto"
          }
        },
        "additionalProperties": false
      },
      "FinancialTransactionPagedResultDtoGraphQLDataResult": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DynamicDto_FinancialTransactionFullProxy"
            }
          }
        },
        "additionalProperties": false,
        "description": "NOTE: shape of the response depends on the `properties` argument"
      },
      "FinancialTransactionPagedResultDtoGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/FinancialTransactionPagedResultDtoGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "FlatPermissionDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FlattenedAllowedComponentTypesDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "formPath": {
            "type": "string",
            "nullable": true
          },
          "componentTypeId": {
            "type": "string",
            "format": "uuid"
          },
          "componentTypeName": {
            "type": "string",
            "nullable": true
          },
          "canBeRoot": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "FlattenedAllowedComponentTypesDtoListAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FlattenedAllowedComponentTypesDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FormConfigurationDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "moduleId": {
            "type": "string",
            "description": "Module Id",
            "format": "uuid",
            "nullable": true
          },
          "originId": {
            "type": "string",
            "description": "Origin id",
            "format": "uuid",
            "nullable": true
          },
          "module": {
            "type": "string",
            "description": "Module name",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Form name",
            "nullable": true
          },
          "label": {
            "type": "string",
            "description": "Label",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Description",
            "nullable": true
          },
          "markup": {
            "type": "string",
            "description": "Markup in JSON format",
            "nullable": true
          },
          "modelType": {
            "type": "string",
            "description": "Type of the form model",
            "nullable": true
          },
          "versionNo": {
            "type": "integer",
            "description": "Version number",
            "format": "int32"
          },
          "isLastVersion": {
            "type": "boolean",
            "description": "If true, indicates that this is a last version of the form"
          },
          "versionStatus": {
            "$ref": "#/components/schemas/ConfigurationItemVersionStatus"
          },
          "suppress": {
            "type": "boolean"
          }
        },
        "additionalProperties": false,
        "description": "Form configuration DTO"
      },
      "FormConfigurationDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/FormConfigurationDto"
          }
        },
        "additionalProperties": false
      },
      "FormConfigurationDtoPagedResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FormConfigurationDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "FormConfigurationDtoPagedResultDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/FormConfigurationDtoPagedResultDto"
          }
        },
        "additionalProperties": false
      },
      "FormConfigurationGraphQLDataResult": {
        "type": "object",
        "properties": {
          "isTemplate": {
            "type": "boolean",
            "nullable": true
          },
          "itemType": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "configuration": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "fullName": {
            "type": "string"
          },
          "markup": {
            "type": "string"
          },
          "modelType": {
            "type": "string"
          },
          "template": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "FormConfigurationGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/FormConfigurationGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "FormConfigurationPagedResultDtoGraphQLDataResult": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DynamicDto_FormConfigurationFullProxy"
            }
          }
        },
        "additionalProperties": false,
        "description": "NOTE: shape of the response depends on the `properties` argument"
      },
      "FormConfigurationPagedResultDtoGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/FormConfigurationPagedResultDtoGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "FormDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "path": {
            "type": "string",
            "description": "Form path/id is used to identify a form",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Form name",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Description",
            "nullable": true
          },
          "markup": {
            "type": "string",
            "description": "Form markup (components) in JSON format",
            "nullable": true
          },
          "modelType": {
            "type": "string",
            "description": "Type of the form model",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Type",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Form DTO"
      },
      "FormDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/FormDto"
          }
        },
        "additionalProperties": false
      },
      "FormDtoPagedResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FormDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "FormDtoPagedResultDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/FormDtoPagedResultDto"
          }
        },
        "additionalProperties": false
      },
      "FormGraphQLDataResult": {
        "type": "object",
        "properties": {
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "modelType": {
            "type": "string"
          },
          "settings": {
            "type": "string"
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "description": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "type": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "FormGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/FormGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "FormPagedResultDtoGraphQLDataResult": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DynamicDto_FormFullProxy"
            }
          }
        },
        "additionalProperties": false,
        "description": "NOTE: shape of the response depends on the `properties` argument"
      },
      "FormPagedResultDtoGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/FormPagedResultDtoGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "FormUpdateMarkupInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "markup": {
            "type": "string",
            "description": "Form markup (components) in JSON format",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Form update markup input"
      },
      "FrontEndAppGraphQLDataResult": {
        "type": "object",
        "properties": {
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "description": {
            "type": "string"
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "FrontEndAppGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/FrontEndAppGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "FrontEndAppGuidDynamicDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FrontEndAppGuidDynamicDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/FrontEndAppGuidDynamicDto"
          }
        },
        "additionalProperties": false
      },
      "FrontEndAppGuidDynamicDtoPagedResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FrontEndAppGuidDynamicDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "FrontEndAppGuidDynamicDtoPagedResultDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/FrontEndAppGuidDynamicDtoPagedResultDto"
          }
        },
        "additionalProperties": false
      },
      "FrontEndAppPagedResultDtoGraphQLDataResult": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DynamicDto_FrontEndAppFullProxy"
            }
          }
        },
        "additionalProperties": false,
        "description": "NOTE: shape of the response depends on the `properties` argument"
      },
      "FrontEndAppPagedResultDtoGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/FrontEndAppPagedResultDtoGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "GetChildAreasInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetChildCheckListItemsInput": {
        "type": "object",
        "properties": {
          "checkListId": {
            "type": "string",
            "description": "Id of the checklist",
            "format": "uuid"
          },
          "parentId": {
            "type": "string",
            "description": "Id of the parent item",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Input to get child check list items"
      },
      "GetColumnsInput": {
        "required": [
          "entityType"
        ],
        "type": "object",
        "properties": {
          "entityType": {
            "type": "string",
            "description": "Type of entity"
          },
          "properties": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of property names",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Get datatable columns input. Is used for tables with configurable columns"
      },
      "GetCurrentLoginInformationsOutput": {
        "type": "object",
        "properties": {
          "application": {
            "$ref": "#/components/schemas/ApplicationInfoDto"
          },
          "user": {
            "$ref": "#/components/schemas/UserLoginInfoDto"
          },
          "tenant": {
            "$ref": "#/components/schemas/TenantLoginInfoDto"
          }
        },
        "additionalProperties": false
      },
      "GetCurrentLoginInformationsOutputAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/GetCurrentLoginInformationsOutput"
          }
        },
        "additionalProperties": false
      },
      "GetRoleForEditOutput": {
        "type": "object",
        "properties": {
          "role": {
            "$ref": "#/components/schemas/RoleEditDto"
          },
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FlatPermissionDto"
            },
            "nullable": true
          },
          "grantedPermissionNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetRoleForEditOutputAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/GetRoleForEditOutput"
          }
        },
        "additionalProperties": false
      },
      "GuidAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "GuidEntityDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "GuidEntityWithDisplayNameDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "displayText": {
            "type": "string",
            "description": "Entity display name",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Generic entity Dto with display text"
      },
      "GuidNullableEntityWithDisplayNameDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "displayText": {
            "type": "string",
            "description": "Entity display name",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Generic entity Dto with display text"
      },
      "HomeUrlAppointmentGraphQLDataResult": {
        "type": "object",
        "properties": {
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "homeUrlId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "roleId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "HomeUrlAppointmentGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/HomeUrlAppointmentGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "HomeUrlAppointmentGuidDynamicDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HomeUrlAppointmentGuidDynamicDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/HomeUrlAppointmentGuidDynamicDto"
          }
        },
        "additionalProperties": false
      },
      "HomeUrlAppointmentGuidDynamicDtoPagedResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HomeUrlAppointmentGuidDynamicDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "HomeUrlAppointmentGuidDynamicDtoPagedResultDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/HomeUrlAppointmentGuidDynamicDtoPagedResultDto"
          }
        },
        "additionalProperties": false
      },
      "HomeUrlAppointmentPagedResultDtoGraphQLDataResult": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DynamicDto_HomeUrlAppointmentFullProxy"
            }
          }
        },
        "additionalProperties": false,
        "description": "NOTE: shape of the response depends on the `properties` argument"
      },
      "HomeUrlAppointmentPagedResultDtoGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/HomeUrlAppointmentPagedResultDtoGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "HomeUrlRouteDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "homeUrl": {
            "type": "string",
            "nullable": true
          },
          "orderIndex": {
            "type": "number",
            "format": "float"
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GuidNullableEntityWithDisplayNameDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HomeUrlRouteDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/HomeUrlRouteDto"
          }
        },
        "additionalProperties": false
      },
      "HomeUrlRouteDtoPagedResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HomeUrlRouteDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "HomeUrlRouteDtoPagedResultDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/HomeUrlRouteDtoPagedResultDto"
          }
        },
        "additionalProperties": false
      },
      "HomeUrlRouteGraphQLDataResult": {
        "type": "object",
        "properties": {
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "roles": {
            "type": "string"
          },
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "orderIndex": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "app": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "homeUrl": {
            "type": "string"
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "HomeUrlRouteGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/HomeUrlRouteGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "HomeUrlRoutePagedResultDtoGraphQLDataResult": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DynamicDto_HomeUrlRouteFullProxy"
            }
          }
        },
        "additionalProperties": false,
        "description": "NOTE: shape of the response depends on the `properties` argument"
      },
      "HomeUrlRoutePagedResultDtoGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/HomeUrlRoutePagedResultDtoGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "IDynamicDataResult": {
        "type": "object",
        "additionalProperties": false,
        "description": "Dynamic data result"
      },
      "IDynamicDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/IDynamicDataResult"
          }
        },
        "additionalProperties": false
      },
      "ImportResultGraphQLDataResult": {
        "type": "object",
        "properties": {
          "sourceType": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "rowsAffected": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "rowsInactivated": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rowsInserted": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "startedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "errorMessage": {
            "type": "string"
          },
          "rowsSkippedNotChanged": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isSuccess": {
            "type": "boolean",
            "nullable": true
          },
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "finishedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "comment": {
            "type": "string"
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "importedFile": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "rowsUpdated": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "avgSpeed": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "rowsSkipped": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "importedFileMD5": {
            "type": "string"
          },
          "logFile": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "ImportResultGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/ImportResultGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "ImportResultGuidDynamicDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ImportResultGuidDynamicDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/ImportResultGuidDynamicDto"
          }
        },
        "additionalProperties": false
      },
      "ImportResultGuidDynamicDtoPagedResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ImportResultGuidDynamicDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ImportResultGuidDynamicDtoPagedResultDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/ImportResultGuidDynamicDtoPagedResultDto"
          }
        },
        "additionalProperties": false
      },
      "ImportResultPagedResultDtoGraphQLDataResult": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DynamicDto_ImportResultFullProxy"
            }
          }
        },
        "additionalProperties": false,
        "description": "NOTE: shape of the response depends on the `properties` argument"
      },
      "ImportResultPagedResultDtoGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/ImportResultPagedResultDtoGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "InboxItemDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "entityId": {
            "type": "string",
            "format": "uuid"
          },
          "entityTypeShortAlias": {
            "type": "string",
            "nullable": true
          },
          "subType": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "processConfigurationId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "priority": {
            "$ref": "#/components/schemas/RefListPriority"
          },
          "processName": {
            "type": "string",
            "nullable": true
          },
          "fullNumber": {
            "type": "string",
            "nullable": true
          },
          "heading": {
            "type": "string",
            "nullable": true
          },
          "checkpointDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dueDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "todoId": {
            "type": "string",
            "format": "uuid"
          },
          "initiator": {
            "type": "string",
            "nullable": true
          },
          "actionText": {
            "type": "string",
            "nullable": true
          },
          "receivedOn": {
            "type": "string",
            "format": "date-time"
          },
          "userHasOpened": {
            "type": "boolean"
          },
          "isGrayedOut": {
            "type": "boolean"
          },
          "inProgressComments": {
            "type": "string",
            "nullable": true
          },
          "jsonProgress": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InboxItemsResponse": {
        "type": "object",
        "properties": {
          "paging": {
            "$ref": "#/components/schemas/PagingModel"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InboxItemDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InboxItemsResponseAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/InboxItemsResponse"
          }
        },
        "additionalProperties": false
      },
      "IndicatorDefinitionGraphQLDataResult": {
        "type": "object",
        "properties": {
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "whatMeasured": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "purpose": {
            "type": "string"
          },
          "status": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "calculationType": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "unitOfMeasure": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "methodOfCalculation": {
            "type": "string"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "IndicatorDefinitionGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/IndicatorDefinitionGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "IndicatorDefinitionGuidDynamicDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IndicatorDefinitionGuidDynamicDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/IndicatorDefinitionGuidDynamicDto"
          }
        },
        "additionalProperties": false
      },
      "IndicatorDefinitionGuidDynamicDtoPagedResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IndicatorDefinitionGuidDynamicDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "IndicatorDefinitionGuidDynamicDtoPagedResultDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/IndicatorDefinitionGuidDynamicDtoPagedResultDto"
          }
        },
        "additionalProperties": false
      },
      "IndicatorDefinitionPagedResultDtoGraphQLDataResult": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DynamicDto_IndicatorDefinitionFullProxy"
            }
          }
        },
        "additionalProperties": false,
        "description": "NOTE: shape of the response depends on the `properties` argument"
      },
      "IndicatorDefinitionPagedResultDtoGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/IndicatorDefinitionPagedResultDtoGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "Int64EntityWithDisplayNameDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "displayText": {
            "type": "string",
            "description": "Entity display name",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Generic entity Dto with display text"
      },
      "Int64NullableEntityWithDisplayNameDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "displayText": {
            "type": "string",
            "description": "Entity display name",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Generic entity Dto with display text"
      },
      "InvoiceDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "contactPerson": {
            "$ref": "#/components/schemas/GuidNullableEntityWithDisplayNameDto"
          },
          "issuedBy": {
            "$ref": "#/components/schemas/GuidNullableEntityWithDisplayNameDto"
          },
          "issuedTo": {
            "$ref": "#/components/schemas/GuidNullableEntityWithDisplayNameDto"
          },
          "cellNumber": {
            "type": "string",
            "nullable": true
          },
          "telNumber": {
            "type": "string",
            "nullable": true
          },
          "faxNumber": {
            "type": "string",
            "nullable": true
          },
          "invoicingPeriodStartDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "invoicingPeriodEndDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "invoiceDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "invoiceTitle": {
            "type": "string",
            "nullable": true
          },
          "invoiceDescription": {
            "type": "string",
            "nullable": true
          },
          "dueDate": {
            "type": "string",
            "format": "date-time"
          },
          "invoiceNo": {
            "type": "string",
            "nullable": true
          },
          "paymentMethod": {
            "type": "string",
            "nullable": true
          },
          "paymentTerms": {
            "type": "string",
            "nullable": true
          },
          "vatNumber": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "totalExclTax": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "taxAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "totalInclTax": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "invoiceType": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "contract": {
            "$ref": "#/components/schemas/GuidNullableEntityWithDisplayNameDto"
          }
        },
        "additionalProperties": false
      },
      "InvoiceDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/InvoiceDto"
          }
        },
        "additionalProperties": false
      },
      "InvoiceDtoPagedResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoiceDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "InvoiceDtoPagedResultDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/InvoiceDtoPagedResultDto"
          }
        },
        "additionalProperties": false
      },
      "InvoiceGraphQLDataResult": {
        "type": "object",
        "properties": {
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "dueDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "invoicingPeriodStartDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "taxAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "cancelledReason": {
            "type": "string"
          },
          "vatNumber": {
            "type": "string"
          },
          "telNumber": {
            "type": "string"
          },
          "extSysSyncError": {
            "type": "string"
          },
          "paymentTerms": {
            "type": "string"
          },
          "invoiceNo": {
            "type": "string"
          },
          "faxNumber": {
            "type": "string"
          },
          "invoiceDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "issuedTo": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "cellNumber": {
            "type": "string"
          },
          "invoiceDescription": {
            "type": "string"
          },
          "invoiceSendStatus": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "extSysSyncStatus": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "contract": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "extSysSource": {
            "type": "string"
          },
          "contactPerson": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "totalInclTax": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "issuedBy": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "invoiceType": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "paymentMethod": {
            "type": "string"
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "type": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "totalExclTax": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "issuedToPerson": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "invoiceTitle": {
            "type": "string"
          },
          "extSysId": {
            "type": "string"
          },
          "extSysLastSyncDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "invoicingPeriodEndDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "extSysFirstSyncDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "account": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "InvoiceGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/InvoiceGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "InvoiceLineItemGraphQLDataResult": {
        "type": "object",
        "properties": {
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lineItemTaxAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "itemDescription": {
            "type": "string"
          },
          "extSysSyncError": {
            "type": "string"
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "extSysId": {
            "type": "string"
          },
          "priceList": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "lineItemSubTotalInclTax": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "servicePeriodStartDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "orderIndex": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "unitPrice": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "extSysFirstSyncDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "product": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "lineItemSubTotal": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "invoice": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "extSysLastSyncDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "unitOfMeasure": {
            "type": "string"
          },
          "extSysSyncStatus": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "extSysSource": {
            "type": "string"
          },
          "servicePeriodEndDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "itemName": {
            "type": "string"
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "InvoiceLineItemGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/InvoiceLineItemGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "InvoiceLineItemGuidDynamicDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InvoiceLineItemGuidDynamicDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/InvoiceLineItemGuidDynamicDto"
          }
        },
        "additionalProperties": false
      },
      "InvoiceLineItemGuidDynamicDtoPagedResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoiceLineItemGuidDynamicDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "InvoiceLineItemGuidDynamicDtoPagedResultDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/InvoiceLineItemGuidDynamicDtoPagedResultDto"
          }
        },
        "additionalProperties": false
      },
      "InvoiceLineItemPagedResultDtoGraphQLDataResult": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DynamicDto_InvoiceLineItemFullProxy"
            }
          }
        },
        "additionalProperties": false,
        "description": "NOTE: shape of the response depends on the `properties` argument"
      },
      "InvoiceLineItemPagedResultDtoGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/InvoiceLineItemPagedResultDtoGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "InvoicePagedResultDtoGraphQLDataResult": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DynamicDto_InvoiceFullProxy"
            }
          }
        },
        "additionalProperties": false,
        "description": "NOTE: shape of the response depends on the `properties` argument"
      },
      "InvoicePagedResultDtoGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/InvoicePagedResultDtoGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "InvoiceUpdateInput": {
        "type": "object",
        "properties": {
          "invoiceId": {
            "type": "string",
            "format": "uuid"
          },
          "invoiceStatus": {
            "$ref": "#/components/schemas/ReflistInvoiceStatus"
          }
        },
        "additionalProperties": false
      },
      "IsTenantAvailableInput": {
        "required": [
          "tenancyName"
        ],
        "type": "object",
        "properties": {
          "tenancyName": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "IsTenantAvailableOutput": {
        "type": "object",
        "properties": {
          "state": {
            "$ref": "#/components/schemas/TenantAvailabilityState"
          },
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IsTenantAvailableOutputAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/IsTenantAvailableOutput"
          }
        },
        "additionalProperties": false
      },
      "ItemTypeFilterModel": {
        "type": "object",
        "properties": {
          "typeShortAlias": {
            "type": "string",
            "nullable": true
          },
          "subType": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "JToken": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/JToken"
        }
      },
      "LogonMessageAuditItemGraphQLDataResult": {
        "type": "object",
        "properties": {
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "person": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "message": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "dontShowAgain": {
            "type": "boolean",
            "nullable": true
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "LogonMessageAuditItemGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/LogonMessageAuditItemGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "LogonMessageAuditItemGuidDynamicDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LogonMessageAuditItemGuidDynamicDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/LogonMessageAuditItemGuidDynamicDto"
          }
        },
        "additionalProperties": false
      },
      "LogonMessageAuditItemGuidDynamicDtoPagedResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LogonMessageAuditItemGuidDynamicDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "LogonMessageAuditItemGuidDynamicDtoPagedResultDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/LogonMessageAuditItemGuidDynamicDtoPagedResultDto"
          }
        },
        "additionalProperties": false
      },
      "LogonMessageAuditItemPagedResultDtoGraphQLDataResult": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DynamicDto_LogonMessageAuditItemFullProxy"
            }
          }
        },
        "additionalProperties": false,
        "description": "NOTE: shape of the response depends on the `properties` argument"
      },
      "LogonMessageAuditItemPagedResultDtoGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/LogonMessageAuditItemPagedResultDtoGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "LogonMessageGraphQLDataResult": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string"
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "visibility": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "publicationStartDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "publicationEndDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "distributionList": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "nullable": true
          },
          "description": {
            "type": "string"
          },
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "LogonMessageGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/LogonMessageGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "LogonMessageGuidDynamicDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LogonMessageGuidDynamicDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/LogonMessageGuidDynamicDto"
          }
        },
        "additionalProperties": false
      },
      "LogonMessageGuidDynamicDtoPagedResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LogonMessageGuidDynamicDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "LogonMessageGuidDynamicDtoPagedResultDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/LogonMessageGuidDynamicDtoPagedResultDto"
          }
        },
        "additionalProperties": false
      },
      "LogonMessagePagedResultDtoGraphQLDataResult": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DynamicDto_LogonMessageFullProxy"
            }
          }
        },
        "additionalProperties": false,
        "description": "NOTE: shape of the response depends on the `properties` argument"
      },
      "LogonMessagePagedResultDtoGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/LogonMessagePagedResultDtoGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "MetadataSourceType": {
        "enum": [
          1,
          2
        ],
        "type": "integer",
        "description": "Indicate the source of the entity/property metadata",
        "format": "int32"
      },
      "MobileDeviceDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "Device name",
            "nullable": true
          },
          "readRouteName": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "imei": {
            "type": "string",
            "description": "Device IMEI number",
            "nullable": true
          },
          "isLocked": {
            "type": "boolean",
            "description": "Indicates that the device is locked"
          }
        },
        "additionalProperties": false,
        "description": "Registered mobile device DTO"
      },
      "MobileDeviceDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/MobileDeviceDto"
          }
        },
        "additionalProperties": false
      },
      "MobileDeviceDtoPagedResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MobileDeviceDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "MobileDeviceDtoPagedResultDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/MobileDeviceDtoPagedResultDto"
          }
        },
        "additionalProperties": false
      },
      "MobileDeviceGraphQLDataResult": {
        "type": "object",
        "properties": {
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "isLocked": {
            "type": "boolean",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "imei": {
            "type": "string"
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creatorUser": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "readRouteName": {
            "type": "string"
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "MobileDeviceGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/MobileDeviceGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "MobileDevicePagedResultDtoGraphQLDataResult": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DynamicDto_MobileDeviceFullProxy"
            }
          }
        },
        "additionalProperties": false,
        "description": "NOTE: shape of the response depends on the `properties` argument"
      },
      "MobileDevicePagedResultDtoGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/MobileDevicePagedResultDtoGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "ModelConfigurationDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "className": {
            "type": "string",
            "nullable": true
          },
          "namespace": {
            "type": "string",
            "nullable": true
          },
          "generateAppService": {
            "type": "boolean"
          },
          "properties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ModelPropertyDto"
            },
            "nullable": true
          },
          "moduleId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "module": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "label": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "versionNo": {
            "type": "integer",
            "format": "int32"
          },
          "versionStatus": {
            "$ref": "#/components/schemas/ConfigurationItemVersionStatus"
          },
          "suppress": {
            "type": "boolean"
          },
          "source": {
            "$ref": "#/components/schemas/MetadataSourceType"
          },
          "permission": {
            "$ref": "#/components/schemas/PermissionedObjectDto"
          },
          "permissionGet": {
            "$ref": "#/components/schemas/PermissionedObjectDto"
          },
          "permissionCreate": {
            "$ref": "#/components/schemas/PermissionedObjectDto"
          },
          "permissionUpdate": {
            "$ref": "#/components/schemas/PermissionedObjectDto"
          },
          "permissionDelete": {
            "$ref": "#/components/schemas/PermissionedObjectDto"
          }
        },
        "additionalProperties": false,
        "description": "Model configuration DTO"
      },
      "ModelConfigurationDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/ModelConfigurationDto"
          }
        },
        "additionalProperties": false
      },
      "ModelPropertyDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Property Name",
            "nullable": true
          },
          "label": {
            "type": "string",
            "description": "Label (display name)",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Description",
            "nullable": true
          },
          "dataType": {
            "type": "string",
            "description": "Data type",
            "nullable": true
          },
          "dataFormat": {
            "type": "string",
            "description": "Data format",
            "nullable": true
          },
          "entityType": {
            "type": "string",
            "description": "Entity type. Aplicable for entity references",
            "nullable": true
          },
          "referenceListName": {
            "type": "string",
            "description": "Reference list name",
            "nullable": true
          },
          "referenceListNamespace": {
            "type": "string",
            "description": "Reference list namespace",
            "nullable": true
          },
          "source": {
            "$ref": "#/components/schemas/MetadataSourceType"
          },
          "sortOrder": {
            "type": "integer",
            "description": "Default sort order",
            "format": "int32",
            "nullable": true
          },
          "properties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ModelPropertyDto"
            },
            "description": "Child properties, applicable for complex data types (e.g. object, array)",
            "nullable": true
          },
          "isFrameworkRelated": {
            "type": "boolean",
            "description": "If true, indicates that current property is a framework-related (e.g. !:ISoftDelete.IsDeleted, !:IHasModificationTime.LastModificationTime)"
          },
          "suppress": {
            "type": "boolean",
            "description": "If true, the property is not returned from Get end-points and is ignored if submitted on Create/Update end-points\r\nThe property should also not be listed on the form configurator property list"
          },
          "required": {
            "type": "boolean",
            "description": "Indicates if a property value is required in order to save"
          },
          "readOnly": {
            "type": "boolean",
            "description": "If true, the property cannot be edited via the dynamically generated create/update end-points:\r\n- property should not be listed on create/update end-points\r\n- should be set to 'True' and not editable for read-only properties of domain classes"
          },
          "audited": {
            "type": "boolean",
            "description": "Equivalent to Audited attribute on the property"
          },
          "min": {
            "type": "number",
            "description": "Validation min",
            "format": "double",
            "nullable": true
          },
          "max": {
            "type": "number",
            "description": "Validation max",
            "format": "double",
            "nullable": true
          },
          "minLength": {
            "type": "integer",
            "description": "Validation min length",
            "format": "int32",
            "nullable": true
          },
          "maxLength": {
            "type": "integer",
            "description": "Validation max length",
            "format": "int32",
            "nullable": true
          },
          "regExp": {
            "type": "string",
            "description": "Validation RegularExpression",
            "nullable": true
          },
          "validationMessage": {
            "type": "string",
            "description": "Validation message",
            "nullable": true
          },
          "suppressHardcoded": {
            "type": "boolean"
          },
          "requiredHardcoded": {
            "type": "boolean"
          },
          "readOnlyHardcoded": {
            "type": "boolean"
          },
          "auditedHardcoded": {
            "type": "boolean"
          },
          "sizeHardcoded": {
            "type": "boolean"
          },
          "regExpHardcoded": {
            "type": "boolean"
          }
        },
        "additionalProperties": false,
        "description": "Model property DTO"
      },
      "ModuleGraphQLDataResult": {
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "isEnabled": {
            "type": "boolean",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "description": {
            "type": "string"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "ModuleGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/ModuleGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "ModuleGuidDynamicDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ModuleGuidDynamicDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/ModuleGuidDynamicDto"
          }
        },
        "additionalProperties": false
      },
      "ModuleGuidDynamicDtoPagedResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ModuleGuidDynamicDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ModuleGuidDynamicDtoPagedResultDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/ModuleGuidDynamicDtoPagedResultDto"
          }
        },
        "additionalProperties": false
      },
      "ModulePagedResultDtoGraphQLDataResult": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DynamicDto_ModuleFullProxy"
            }
          }
        },
        "additionalProperties": false,
        "description": "NOTE: shape of the response depends on the `properties` argument"
      },
      "ModulePagedResultDtoGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/ModulePagedResultDtoGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "MoveAreaInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "newParentId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MoveToModuleInput": {
        "type": "object",
        "properties": {
          "itemId": {
            "type": "string",
            "description": "Item id",
            "format": "uuid"
          },
          "moduleId": {
            "type": "string",
            "description": "Module Id",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "description": "Move item to module input"
      },
      "MyItemDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "entityId": {
            "type": "string",
            "format": "uuid"
          },
          "entityTypeShortAlias": {
            "type": "string",
            "nullable": true
          },
          "subType": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "processConfigurationId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "priority": {
            "$ref": "#/components/schemas/RefListPriority"
          },
          "processName": {
            "type": "string",
            "nullable": true
          },
          "fullNumber": {
            "type": "string",
            "nullable": true
          },
          "heading": {
            "type": "string",
            "nullable": true
          },
          "checkpointDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dueDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "initiatedOn": {
            "type": "string",
            "format": "date-time"
          },
          "jsonProgress": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MyItemsResponse": {
        "type": "object",
        "properties": {
          "paging": {
            "$ref": "#/components/schemas/PagingModel"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MyItemDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MyItemsResponseAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/MyItemsResponse"
          }
        },
        "additionalProperties": false
      },
      "NoteDto": {
        "required": [
          "noteText",
          "ownerId",
          "ownerType"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "ownerId": {
            "type": "string",
            "description": "Id of the owner entity"
          },
          "ownerType": {
            "type": "string",
            "description": "Type short alias of the owner entity"
          },
          "creationTime": {
            "type": "string",
            "description": "Creation time",
            "format": "date-time",
            "nullable": true
          },
          "category": {
            "type": "integer",
            "description": "Category of the note. Is used to split notes into groups",
            "format": "int32",
            "nullable": true
          },
          "priority": {
            "type": "integer",
            "description": "Note importance (priority)",
            "format": "int32",
            "nullable": true
          },
          "parentId": {
            "type": "string",
            "description": "Id of the parent note",
            "format": "uuid",
            "nullable": true
          },
          "noteText": {
            "type": "string",
            "description": "Text"
          },
          "author": {
            "$ref": "#/components/schemas/GuidEntityWithDisplayNameDto"
          }
        },
        "additionalProperties": false
      },
      "NoteDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/NoteDto"
          }
        },
        "additionalProperties": false
      },
      "NoteDtoListAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NoteDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NoteDtoPagedResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NoteDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "NoteDtoPagedResultDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/NoteDtoPagedResultDto"
          }
        },
        "additionalProperties": false
      },
      "NoteGraphQLDataResult": {
        "type": "object",
        "properties": {
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "author": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "category": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "parent": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "ownerId": {
            "type": "string"
          },
          "noteText": {
            "type": "string"
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "priority": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "ownerType": {
            "type": "string"
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "NoteGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/NoteGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "NotePagedResultDtoGraphQLDataResult": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DynamicDto_NoteFullProxy"
            }
          }
        },
        "additionalProperties": false,
        "description": "NOTE: shape of the response depends on the `properties` argument"
      },
      "NotePagedResultDtoGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/NotePagedResultDtoGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "NotificationAttachmentDto": {
        "type": "object",
        "properties": {
          "fileName": {
            "type": "string",
            "description": "File name",
            "nullable": true
          },
          "storedFileId": {
            "type": "string",
            "description": "Id of the stored file",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "description": "Notification Attachment Dto"
      },
      "NotificationAttachmentDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/NotificationAttachmentDto"
          }
        },
        "additionalProperties": false
      },
      "NotificationData": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "properties": {
            "type": "object",
            "additionalProperties": {
              "nullable": true
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NotificationDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "namespace": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NotificationDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/NotificationDto"
          }
        },
        "additionalProperties": false
      },
      "NotificationDtoPagedResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NotificationDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "NotificationDtoPagedResultDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/NotificationDtoPagedResultDto"
          }
        },
        "additionalProperties": false
      },
      "NotificationGraphQLDataResult": {
        "type": "object",
        "properties": {
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "fullName": {
            "type": "string"
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "namespace": {
            "type": "string"
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "description": {
            "type": "string"
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "NotificationGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/NotificationGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "NotificationMessageDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "sender": {
            "$ref": "#/components/schemas/GuidNullableEntityWithDisplayNameDto"
          },
          "recipient": {
            "$ref": "#/components/schemas/GuidNullableEntityWithDisplayNameDto"
          },
          "sendType": {
            "$ref": "#/components/schemas/ReferenceListItemValueDto"
          },
          "recipientText": {
            "type": "string",
            "description": "Recipient text (email address/mobile number etc)",
            "nullable": true
          },
          "subject": {
            "type": "string",
            "description": "Subject of the message",
            "nullable": true
          },
          "body": {
            "type": "string",
            "description": "Message body",
            "nullable": true
          },
          "template": {
            "$ref": "#/components/schemas/GuidNullableEntityWithDisplayNameDto"
          },
          "notification": {
            "$ref": "#/components/schemas/GuidNullableEntityWithDisplayNameDto"
          },
          "attachments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NotificationAttachmentDto"
            },
            "description": "Attachments",
            "nullable": true
          },
          "sendDate": {
            "type": "string",
            "description": "Date and time of last attempt to send the message",
            "format": "date-time",
            "nullable": true
          },
          "tryCount": {
            "type": "integer",
            "description": "Number of attempt to send the message",
            "format": "int32"
          },
          "status": {
            "$ref": "#/components/schemas/ReferenceListItemValueDto"
          },
          "errorMessage": {
            "type": "string",
            "description": "Error message",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NotificationMessageDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/NotificationMessageDto"
          }
        },
        "additionalProperties": false
      },
      "NotificationMessageDtoPagedResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NotificationMessageDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "NotificationMessageDtoPagedResultDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/NotificationMessageDtoPagedResultDto"
          }
        },
        "additionalProperties": false
      },
      "NotificationMessageGraphQLDataResult": {
        "type": "object",
        "properties": {
          "sendType": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "body": {
            "type": "string"
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "sender": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "tenantNotification": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "notification": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "tryCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sendDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "errorMessage": {
            "type": "string"
          },
          "recipientText": {
            "type": "string"
          },
          "subject": {
            "type": "string"
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "recipient": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "template": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "NotificationMessageGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/NotificationMessageGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "NotificationMessagePagedResultDtoGraphQLDataResult": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DynamicDto_NotificationMessageFullProxy"
            }
          }
        },
        "additionalProperties": false,
        "description": "NOTE: shape of the response depends on the `properties` argument"
      },
      "NotificationMessagePagedResultDtoGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/NotificationMessagePagedResultDtoGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "NotificationPagedResultDtoGraphQLDataResult": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DynamicDto_NotificationFullProxy"
            }
          }
        },
        "additionalProperties": false,
        "description": "NOTE: shape of the response depends on the `properties` argument"
      },
      "NotificationPagedResultDtoGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/NotificationPagedResultDtoGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "NotificationTemplateDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "isEnabled": {
            "type": "boolean"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "body": {
            "type": "string",
            "nullable": true
          },
          "subject": {
            "type": "string",
            "nullable": true
          },
          "notification": {
            "$ref": "#/components/schemas/GuidNullableEntityWithDisplayNameDto"
          },
          "sendType": {
            "$ref": "#/components/schemas/ReferenceListItemValueDto"
          },
          "bodyFormat": {
            "$ref": "#/components/schemas/ReferenceListItemValueDto"
          }
        },
        "additionalProperties": false
      },
      "NotificationTemplateDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/NotificationTemplateDto"
          }
        },
        "additionalProperties": false
      },
      "NotificationTemplateDtoPagedResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NotificationTemplateDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "NotificationTemplateDtoPagedResultDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/NotificationTemplateDtoPagedResultDto"
          }
        },
        "additionalProperties": false
      },
      "NotificationTemplateGraphQLDataResult": {
        "type": "object",
        "properties": {
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "bodyFormat": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isEnabled": {
            "type": "boolean",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "subject": {
            "type": "string"
          },
          "sendType": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "body": {
            "type": "string"
          },
          "notification": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "NotificationTemplateGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/NotificationTemplateGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "NotificationTemplatePagedResultDtoGraphQLDataResult": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DynamicDto_NotificationTemplateFullProxy"
            }
          }
        },
        "additionalProperties": false,
        "description": "NOTE: shape of the response depends on the `properties` argument"
      },
      "NotificationTemplatePagedResultDtoGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/NotificationTemplatePagedResultDtoGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "OrderGraphQLDataResult": {
        "type": "object",
        "properties": {
          "requester": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "requisitionNo": {
            "type": "string"
          },
          "refNo": {
            "type": "string"
          },
          "comment": {
            "type": "string"
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "requestedCollectionDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "receiver": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "confirmedCollectionDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "OrderGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/OrderGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "OrderGuidDynamicDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderGuidDynamicDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/OrderGuidDynamicDto"
          }
        },
        "additionalProperties": false
      },
      "OrderGuidDynamicDtoPagedResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderGuidDynamicDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "OrderGuidDynamicDtoPagedResultDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/OrderGuidDynamicDtoPagedResultDto"
          }
        },
        "additionalProperties": false
      },
      "OrderPagedResultDtoGraphQLDataResult": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DynamicDto_OrderFullProxy"
            }
          }
        },
        "additionalProperties": false,
        "description": "NOTE: shape of the response depends on the `properties` argument"
      },
      "OrderPagedResultDtoGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/OrderPagedResultDtoGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "OrganisationBankAccountGraphQLDataResult": {
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "validToDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "bankAccount": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "inactive": {
            "type": "boolean",
            "nullable": true
          },
          "organisation": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "role": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "validFromDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "OrganisationBankAccountGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/OrganisationBankAccountGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "OrganisationBankAccountGuidDynamicDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrganisationBankAccountGuidDynamicDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/OrganisationBankAccountGuidDynamicDto"
          }
        },
        "additionalProperties": false
      },
      "OrganisationBankAccountGuidDynamicDtoPagedResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrganisationBankAccountGuidDynamicDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "OrganisationBankAccountGuidDynamicDtoPagedResultDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/OrganisationBankAccountGuidDynamicDtoPagedResultDto"
          }
        },
        "additionalProperties": false
      },
      "OrganisationBankAccountPagedResultDtoGraphQLDataResult": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DynamicDto_OrganisationBankAccountFullProxy"
            }
          }
        },
        "additionalProperties": false,
        "description": "NOTE: shape of the response depends on the `properties` argument"
      },
      "OrganisationBankAccountPagedResultDtoGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/OrganisationBankAccountPagedResultDtoGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "OrganisationPostAppointmentGraphQLDataResult": {
        "type": "object",
        "properties": {
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "comment": {
            "type": "string"
          },
          "storedFile": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "appointmentStatus": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "organisationPost": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "appointmentEndDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "appointmentStartDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "employee": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "userHasOpened": {
            "type": "boolean",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "OrganisationPostAppointmentGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/OrganisationPostAppointmentGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "OrganisationPostAppointmentGuidDynamicDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrganisationPostAppointmentGuidDynamicDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/OrganisationPostAppointmentGuidDynamicDto"
          }
        },
        "additionalProperties": false
      },
      "OrganisationPostAppointmentGuidDynamicDtoPagedResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrganisationPostAppointmentGuidDynamicDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "OrganisationPostAppointmentGuidDynamicDtoPagedResultDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/OrganisationPostAppointmentGuidDynamicDtoPagedResultDto"
          }
        },
        "additionalProperties": false
      },
      "OrganisationPostAppointmentPagedResultDtoGraphQLDataResult": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DynamicDto_OrganisationPostAppointmentFullProxy"
            }
          }
        },
        "additionalProperties": false,
        "description": "NOTE: shape of the response depends on the `properties` argument"
      },
      "OrganisationPostAppointmentPagedResultDtoGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/OrganisationPostAppointmentPagedResultDtoGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "OrganisationPostGraphQLDataResult": {
        "type": "object",
        "properties": {
          "supervisorPost": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "shortName": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "organisationUnit": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "organisationPostLevel": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "discriminatorName": {
            "type": "string"
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "postDiscriminator": {
            "type": "string"
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isUnitSupervisor": {
            "type": "boolean",
            "nullable": true
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "OrganisationPostGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/OrganisationPostGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "OrganisationPostGuidDynamicDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrganisationPostGuidDynamicDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/OrganisationPostGuidDynamicDto"
          }
        },
        "additionalProperties": false
      },
      "OrganisationPostGuidDynamicDtoPagedResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrganisationPostGuidDynamicDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "OrganisationPostGuidDynamicDtoPagedResultDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/OrganisationPostGuidDynamicDtoPagedResultDto"
          }
        },
        "additionalProperties": false
      },
      "OrganisationPostLevelGraphQLDataResult": {
        "type": "object",
        "properties": {
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "description": {
            "type": "string"
          },
          "shortName": {
            "type": "string"
          },
          "signOffAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "rankLevel": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "daysAllowedToRespond": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fullName": {
            "type": "string"
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "OrganisationPostLevelGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/OrganisationPostLevelGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "OrganisationPostLevelGuidDynamicDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrganisationPostLevelGuidDynamicDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/OrganisationPostLevelGuidDynamicDto"
          }
        },
        "additionalProperties": false
      },
      "OrganisationPostLevelGuidDynamicDtoPagedResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrganisationPostLevelGuidDynamicDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "OrganisationPostLevelGuidDynamicDtoPagedResultDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/OrganisationPostLevelGuidDynamicDtoPagedResultDto"
          }
        },
        "additionalProperties": false
      },
      "OrganisationPostLevelPagedResultDtoGraphQLDataResult": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DynamicDto_OrganisationPostLevelFullProxy"
            }
          }
        },
        "additionalProperties": false,
        "description": "NOTE: shape of the response depends on the `properties` argument"
      },
      "OrganisationPostLevelPagedResultDtoGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/OrganisationPostLevelPagedResultDtoGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "OrganisationPostPagedResultDtoGraphQLDataResult": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DynamicDto_OrganisationPostFullProxy"
            }
          }
        },
        "additionalProperties": false,
        "description": "NOTE: shape of the response depends on the `properties` argument"
      },
      "OrganisationPostPagedResultDtoGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/OrganisationPostPagedResultDtoGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "OtpAuditItemDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "creationTime": {
            "type": "string",
            "description": "Creation time",
            "format": "date-time"
          },
          "sendTo": {
            "type": "string",
            "description": "Mobile number/email address (depending on the `send type`) to which the OTP was sent",
            "nullable": true
          },
          "sendType": {
            "$ref": "#/components/schemas/ReferenceListItemValueDto"
          },
          "recipientType": {
            "type": "string",
            "nullable": true
          },
          "recipientId": {
            "type": "string",
            "nullable": true
          },
          "expiresOn": {
            "type": "string",
            "description": "Expiration date",
            "format": "date-time",
            "nullable": true
          },
          "otp": {
            "type": "string",
            "nullable": true
          },
          "actionType": {
            "type": "string",
            "nullable": true
          },
          "sentOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "sendStatus": {
            "$ref": "#/components/schemas/ReferenceListItemValueDto"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OtpAuditItemDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/OtpAuditItemDto"
          }
        },
        "additionalProperties": false
      },
      "OtpAuditItemDtoPagedResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OtpAuditItemDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "OtpAuditItemDtoPagedResultDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/OtpAuditItemDtoPagedResultDto"
          }
        },
        "additionalProperties": false
      },
      "OtpAuditItemGraphQLDataResult": {
        "type": "object",
        "properties": {
          "recipientType": {
            "type": "string"
          },
          "expiresOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "errorMessage": {
            "type": "string"
          },
          "recipientId": {
            "type": "string"
          },
          "otp": {
            "type": "string"
          },
          "sendType": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "sendStatus": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "actionType": {
            "type": "string"
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "sentOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "sendTo": {
            "type": "string"
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "OtpAuditItemGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/OtpAuditItemGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "OtpAuditItemPagedResultDtoGraphQLDataResult": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DynamicDto_OtpAuditItemFullProxy"
            }
          }
        },
        "additionalProperties": false,
        "description": "NOTE: shape of the response depends on the `properties` argument"
      },
      "OtpAuditItemPagedResultDtoGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/OtpAuditItemPagedResultDtoGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "OtpDto": {
        "type": "object",
        "properties": {
          "operationId": {
            "type": "string",
            "format": "uuid"
          },
          "pin": {
            "type": "string",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time"
          },
          "expiresOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "sendTo": {
            "type": "string",
            "description": "Mobile number/email address (depending on the `send type`) to which the OTP should be sent",
            "nullable": true
          },
          "sendType": {
            "$ref": "#/components/schemas/OtpSendType"
          },
          "recipientType": {
            "type": "string",
            "nullable": true
          },
          "recipientId": {
            "type": "string",
            "nullable": true
          },
          "actionType": {
            "type": "string",
            "description": "Type of action (e.g. 'password restore'). May be used for audit purposes and template selection",
            "nullable": true
          },
          "sentOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "sendStatus": {
            "$ref": "#/components/schemas/OtpSendStatus"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OtpDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/OtpDto"
          }
        },
        "additionalProperties": false
      },
      "OtpSendStatus": {
        "enum": [
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "OtpSendType": {
        "enum": [
          1,
          2,
          4
        ],
        "type": "integer",
        "format": "int32"
      },
      "OtpSettingsDto": {
        "type": "object",
        "properties": {
          "passwordLength": {
            "type": "integer",
            "description": "Length of the OTP",
            "format": "int32"
          },
          "alphabet": {
            "type": "string",
            "description": "Alphabet which is used for OTP generation. For example `abcde` or `1234567890`",
            "nullable": true
          },
          "defaultLifetime": {
            "type": "integer",
            "description": "Default lifetime of the password in seconds",
            "format": "int32"
          },
          "ignoreOtpValidation": {
            "type": "boolean",
            "description": "Ignore validation of the OTP. If true, OTP service doesn't send OTP and skip it's validation but other functions works as usual.\r\nNote: just for testing purposes"
          },
          "emailSubject": {
            "type": "string",
            "description": "Subject for the email when the email link is sent to the recipient.\r\nTODO: Find a better place to place these",
            "nullable": true
          },
          "emailBodyTemplate": {
            "type": "string",
            "description": "Email template body",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents settings of the OTP service"
      },
      "OtpSettingsDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/OtpSettingsDto"
          }
        },
        "additionalProperties": false
      },
      "PagingModel": {
        "type": "object",
        "properties": {
          "firstIdx": {
            "type": "integer",
            "format": "int32"
          },
          "lastIdx": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "totalPagesCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PaymentInByEFTGraphQLDataResult": {
        "type": "object",
        "properties": {
          "account": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "paymentMethodReference": {
            "type": "string"
          },
          "amount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "paymentDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "proofOfPayemnt": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "bankTransaction": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "PaymentInByEFTGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/PaymentInByEFTGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "PaymentInByEFTGuidDynamicDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PaymentInByEFTGuidDynamicDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/PaymentInByEFTGuidDynamicDto"
          }
        },
        "additionalProperties": false
      },
      "PaymentInByEFTGuidDynamicDtoPagedResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentInByEFTGuidDynamicDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PaymentInByEFTGuidDynamicDtoPagedResultDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/PaymentInByEFTGuidDynamicDtoPagedResultDto"
          }
        },
        "additionalProperties": false
      },
      "PaymentInByEFTPagedResultDtoGraphQLDataResult": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DynamicDto_PaymentInByEFTFullProxy"
            }
          }
        },
        "additionalProperties": false,
        "description": "NOTE: shape of the response depends on the `properties` argument"
      },
      "PaymentInByEFTPagedResultDtoGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/PaymentInByEFTPagedResultDtoGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "PaymentInGraphQLDataResult": {
        "type": "object",
        "properties": {
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "paymentMethodReference": {
            "type": "string"
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "paymentDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "account": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "PaymentInGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/PaymentInGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "PaymentInGuidDynamicDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PaymentInGuidDynamicDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/PaymentInGuidDynamicDto"
          }
        },
        "additionalProperties": false
      },
      "PaymentInGuidDynamicDtoPagedResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentInGuidDynamicDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PaymentInGuidDynamicDtoPagedResultDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/PaymentInGuidDynamicDtoPagedResultDto"
          }
        },
        "additionalProperties": false
      },
      "PaymentInPagedResultDtoGraphQLDataResult": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DynamicDto_PaymentInFullProxy"
            }
          }
        },
        "additionalProperties": false,
        "description": "NOTE: shape of the response depends on the `properties` argument"
      },
      "PaymentInPagedResultDtoGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/PaymentInPagedResultDtoGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "PaymentInvoiceAllocationGraphQLDataResult": {
        "type": "object",
        "properties": {
          "invoice": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "financialTransaction": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "paymentIn": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "PaymentInvoiceAllocationGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/PaymentInvoiceAllocationGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "PaymentInvoiceAllocationGuidDynamicDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PaymentInvoiceAllocationGuidDynamicDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/PaymentInvoiceAllocationGuidDynamicDto"
          }
        },
        "additionalProperties": false
      },
      "PaymentInvoiceAllocationGuidDynamicDtoPagedResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentInvoiceAllocationGuidDynamicDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PaymentInvoiceAllocationGuidDynamicDtoPagedResultDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/PaymentInvoiceAllocationGuidDynamicDtoPagedResultDto"
          }
        },
        "additionalProperties": false
      },
      "PaymentInvoiceAllocationPagedResultDtoGraphQLDataResult": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DynamicDto_PaymentInvoiceAllocationFullProxy"
            }
          }
        },
        "additionalProperties": false,
        "description": "NOTE: shape of the response depends on the `properties` argument"
      },
      "PaymentInvoiceAllocationPagedResultDtoGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/PaymentInvoiceAllocationPagedResultDtoGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "PaymentOutByEFTGraphQLDataResult": {
        "type": "object",
        "properties": {
          "paymentDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "account": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "bankTransaction": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "paymentMethodReference": {
            "type": "string"
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "PaymentOutByEFTGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/PaymentOutByEFTGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "PaymentOutByEFTGuidDynamicDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PaymentOutByEFTGuidDynamicDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/PaymentOutByEFTGuidDynamicDto"
          }
        },
        "additionalProperties": false
      },
      "PaymentOutByEFTGuidDynamicDtoPagedResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentOutByEFTGuidDynamicDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PaymentOutByEFTGuidDynamicDtoPagedResultDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/PaymentOutByEFTGuidDynamicDtoPagedResultDto"
          }
        },
        "additionalProperties": false
      },
      "PaymentOutByEFTPagedResultDtoGraphQLDataResult": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DynamicDto_PaymentOutByEFTFullProxy"
            }
          }
        },
        "additionalProperties": false,
        "description": "NOTE: shape of the response depends on the `properties` argument"
      },
      "PaymentOutByEFTPagedResultDtoGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/PaymentOutByEFTPagedResultDtoGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "PaymentOutGraphQLDataResult": {
        "type": "object",
        "properties": {
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "account": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "paymentMethodReference": {
            "type": "string"
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "paymentDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "PaymentOutGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/PaymentOutGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "PaymentOutGuidDynamicDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PaymentOutGuidDynamicDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/PaymentOutGuidDynamicDto"
          }
        },
        "additionalProperties": false
      },
      "PaymentOutGuidDynamicDtoPagedResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentOutGuidDynamicDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PaymentOutGuidDynamicDtoPagedResultDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/PaymentOutGuidDynamicDtoPagedResultDto"
          }
        },
        "additionalProperties": false
      },
      "PaymentOutPagedResultDtoGraphQLDataResult": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DynamicDto_PaymentOutFullProxy"
            }
          }
        },
        "additionalProperties": false,
        "description": "NOTE: shape of the response depends on the `properties` argument"
      },
      "PaymentOutPagedResultDtoGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/PaymentOutPagedResultDtoGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "PaymentPlanGraphQLDataResult": {
        "type": "object",
        "properties": {
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "penaltyAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "account": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "amountPaidToDate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "planAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "discountAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "planStartDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "planEndDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "planStatus": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "PaymentPlanGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/PaymentPlanGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "PaymentPlanGuidDynamicDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PaymentPlanGuidDynamicDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/PaymentPlanGuidDynamicDto"
          }
        },
        "additionalProperties": false
      },
      "PaymentPlanGuidDynamicDtoPagedResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentPlanGuidDynamicDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PaymentPlanGuidDynamicDtoPagedResultDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/PaymentPlanGuidDynamicDtoPagedResultDto"
          }
        },
        "additionalProperties": false
      },
      "PaymentPlanLineGraphQLDataResult": {
        "type": "object",
        "properties": {
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "paymentPlan": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "paymentPlanLineStatus": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "allocatedStatus": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "paidDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "plannedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "plannedAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "paidAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "PaymentPlanLineGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/PaymentPlanLineGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "PaymentPlanLineGuidDynamicDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PaymentPlanLineGuidDynamicDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/PaymentPlanLineGuidDynamicDto"
          }
        },
        "additionalProperties": false
      },
      "PaymentPlanLineGuidDynamicDtoPagedResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentPlanLineGuidDynamicDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PaymentPlanLineGuidDynamicDtoPagedResultDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/PaymentPlanLineGuidDynamicDtoPagedResultDto"
          }
        },
        "additionalProperties": false
      },
      "PaymentPlanLinePagedResultDtoGraphQLDataResult": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DynamicDto_PaymentPlanLineFullProxy"
            }
          }
        },
        "additionalProperties": false,
        "description": "NOTE: shape of the response depends on the `properties` argument"
      },
      "PaymentPlanLinePagedResultDtoGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/PaymentPlanLinePagedResultDtoGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "PaymentPlanPagedResultDtoGraphQLDataResult": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DynamicDto_PaymentPlanFullProxy"
            }
          }
        },
        "additionalProperties": false,
        "description": "NOTE: shape of the response depends on the `properties` argument"
      },
      "PaymentPlanPagedResultDtoGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/PaymentPlanPagedResultDtoGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "PerformanceReportAllowedComponentTypeGraphQLDataResult": {
        "type": "object",
        "properties": {
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "componentType": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "performanceReportTemplate": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "canBeRoot": {
            "type": "boolean",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "PerformanceReportAllowedComponentTypeGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/PerformanceReportAllowedComponentTypeGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "PerformanceReportAllowedComponentTypeGuidDynamicDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PerformanceReportAllowedComponentTypeGuidDynamicDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/PerformanceReportAllowedComponentTypeGuidDynamicDto"
          }
        },
        "additionalProperties": false
      },
      "PerformanceReportAllowedComponentTypeGuidDynamicDtoPagedResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PerformanceReportAllowedComponentTypeGuidDynamicDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PerformanceReportAllowedComponentTypeGuidDynamicDtoPagedResultDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/PerformanceReportAllowedComponentTypeGuidDynamicDtoPagedResultDto"
          }
        },
        "additionalProperties": false
      },
      "PerformanceReportAllowedComponentTypePagedResultDtoGraphQLDataResult": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DynamicDto_PerformanceReportAllowedComponentTypeFullProxy"
            }
          }
        },
        "additionalProperties": false,
        "description": "NOTE: shape of the response depends on the `properties` argument"
      },
      "PerformanceReportAllowedComponentTypePagedResultDtoGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/PerformanceReportAllowedComponentTypePagedResultDtoGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "PerformanceReportGraphQLDataResult": {
        "type": "object",
        "properties": {
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "template": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "periodCovered": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "shortName": {
            "type": "string"
          },
          "status": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "PerformanceReportGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/PerformanceReportGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "PerformanceReportGuidDynamicDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PerformanceReportGuidDynamicDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/PerformanceReportGuidDynamicDto"
          }
        },
        "additionalProperties": false
      },
      "PerformanceReportGuidDynamicDtoPagedResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PerformanceReportGuidDynamicDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PerformanceReportGuidDynamicDtoPagedResultDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/PerformanceReportGuidDynamicDtoPagedResultDto"
          }
        },
        "additionalProperties": false
      },
      "PerformanceReportPagedResultDtoGraphQLDataResult": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DynamicDto_PerformanceReportFullProxy"
            }
          }
        },
        "additionalProperties": false,
        "description": "NOTE: shape of the response depends on the `properties` argument"
      },
      "PerformanceReportPagedResultDtoGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/PerformanceReportPagedResultDtoGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "PerformanceReportTemplateGraphQLDataResult": {
        "type": "object",
        "properties": {
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "periodTypeCovered": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "adminPermission": {
            "type": "string"
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "processManagerPermission": {
            "type": "string"
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "shortName": {
            "type": "string"
          },
          "progressReportingCycle": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "PerformanceReportTemplateGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/PerformanceReportTemplateGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "PerformanceReportTemplateGuidDynamicDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PerformanceReportTemplateGuidDynamicDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/PerformanceReportTemplateGuidDynamicDto"
          }
        },
        "additionalProperties": false
      },
      "PerformanceReportTemplateGuidDynamicDtoPagedResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PerformanceReportTemplateGuidDynamicDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PerformanceReportTemplateGuidDynamicDtoPagedResultDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/PerformanceReportTemplateGuidDynamicDtoPagedResultDto"
          }
        },
        "additionalProperties": false
      },
      "PerformanceReportTemplatePagedResultDtoGraphQLDataResult": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DynamicDto_PerformanceReportTemplateFullProxy"
            }
          }
        },
        "additionalProperties": false,
        "description": "NOTE: shape of the response depends on the `properties` argument"
      },
      "PerformanceReportTemplatePagedResultDtoGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/PerformanceReportTemplatePagedResultDtoGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "PeriodGraphQLDataResult": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "parentPeriod": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "periodEnd": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "shortName": {
            "type": "string"
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "periodType": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "periodStart": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "PeriodGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/PeriodGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "PeriodGuidDynamicDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PeriodGuidDynamicDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/PeriodGuidDynamicDto"
          }
        },
        "additionalProperties": false
      },
      "PeriodGuidDynamicDtoPagedResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PeriodGuidDynamicDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PeriodGuidDynamicDtoPagedResultDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/PeriodGuidDynamicDtoPagedResultDto"
          }
        },
        "additionalProperties": false
      },
      "PeriodPagedResultDtoGraphQLDataResult": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DynamicDto_PeriodFullProxy"
            }
          }
        },
        "additionalProperties": false,
        "description": "NOTE: shape of the response depends on the `properties` argument"
      },
      "PeriodPagedResultDtoGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/PeriodPagedResultDtoGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "PermissionDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "parentName": {
            "type": "string",
            "nullable": true
          },
          "isDbPermission": {
            "type": "boolean"
          },
          "parent": {
            "$ref": "#/components/schemas/PermissionDto"
          },
          "child": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PermissionDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PermissionDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/PermissionDto"
          }
        },
        "additionalProperties": false
      },
      "PermissionDtoListAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PermissionDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PermissionDtoListResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PermissionDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PermissionDtoListResultDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/PermissionDtoListResultDto"
          }
        },
        "additionalProperties": false
      },
      "PermissionedObjectDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "object": {
            "type": "string",
            "nullable": true
          },
          "category": {
            "type": "string",
            "nullable": true
          },
          "module": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "actualPermissions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "access": {
            "$ref": "#/components/schemas/RefListPermissionedAccess"
          },
          "inherited": {
            "type": "boolean",
            "readOnly": true
          },
          "actualAccess": {
            "$ref": "#/components/schemas/RefListPermissionedAccess"
          },
          "parent": {
            "type": "string",
            "nullable": true
          },
          "dependency": {
            "type": "string",
            "nullable": true
          },
          "child": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PermissionedObjectDto"
            },
            "nullable": true
          },
          "hidden": {
            "type": "boolean"
          },
          "additionalParameters": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PermissionedObjectDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/PermissionedObjectDto"
          }
        },
        "additionalProperties": false
      },
      "PermissionedObjectDtoListAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PermissionedObjectDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PermissionedObjectDtoPagedResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PermissionedObjectDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PermissionedObjectDtoPagedResultDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/PermissionedObjectDtoPagedResultDto"
          }
        },
        "additionalProperties": false
      },
      "PermissionedObjectGraphQLDataResult": {
        "type": "object",
        "properties": {
          "inherited": {
            "type": "boolean",
            "nullable": true
          },
          "access": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "object": {
            "type": "string"
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "type": {
            "type": "string"
          },
          "module": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "permissions": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "parent": {
            "type": "string"
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "dependency": {
            "type": "string"
          },
          "hidden": {
            "type": "boolean",
            "nullable": true
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "PermissionedObjectGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/PermissionedObjectGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "PermissionedObjectPagedResultDtoGraphQLDataResult": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DynamicDto_PermissionedObjectFullProxy"
            }
          }
        },
        "additionalProperties": false,
        "description": "NOTE: shape of the response depends on the `properties` argument"
      },
      "PermissionedObjectPagedResultDtoGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/PermissionedObjectPagedResultDtoGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "PersonAccountDto": {
        "required": [
          "emailAddress",
          "firstName",
          "lastName",
          "userName"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "userName": {
            "minLength": 5,
            "type": "string"
          },
          "firstName": {
            "minLength": 1,
            "type": "string"
          },
          "lastName": {
            "minLength": 1,
            "type": "string"
          },
          "mobileNumber": {
            "type": "string",
            "nullable": true
          },
          "emailAddress": {
            "type": "string",
            "format": "email"
          },
          "isContractor": {
            "type": "boolean"
          },
          "primaryOrganisation": {
            "$ref": "#/components/schemas/GuidNullableEntityWithDisplayNameDto"
          },
          "typeOfAccount": {
            "$ref": "#/components/schemas/ReferenceListItemValueDto"
          }
        },
        "additionalProperties": false
      },
      "PersonAccountDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/PersonAccountDto"
          }
        },
        "additionalProperties": false
      },
      "PersonAccountDtoPagedResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PersonAccountDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PersonAccountDtoPagedResultDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/PersonAccountDtoPagedResultDto"
          }
        },
        "additionalProperties": false
      },
      "PersonGraphQLDataResult": {
        "type": "object",
        "properties": {
          "customShortName": {
            "type": "string"
          },
          "preferredContactMethod": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "middleName": {
            "type": "string"
          },
          "mobileNumber2": {
            "type": "string"
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "firstName": {
            "type": "string"
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "emailAddress1": {
            "type": "string"
          },
          "mobileNumber1": {
            "type": "string"
          },
          "initials": {
            "type": "string"
          },
          "address": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "photo": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "lastName": {
            "type": "string"
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "homeNumber": {
            "type": "string"
          },
          "workAddress": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "gender": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "emailAddress2": {
            "type": "string"
          },
          "user": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "fullName": {
            "type": "string"
          },
          "identityNumber": {
            "type": "string"
          },
          "title": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "PersonGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/PersonGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "PersonPagedResultDtoGraphQLDataResult": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DynamicDto_PersonFullProxy"
            }
          }
        },
        "additionalProperties": false,
        "description": "NOTE: shape of the response depends on the `properties` argument"
      },
      "PersonPagedResultDtoGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/PersonPagedResultDtoGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "PriceListGraphQLDataResult": {
        "type": "object",
        "properties": {
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "status": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "flags": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "description": {
            "type": "string"
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "applicablePeriod": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "PriceListGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/PriceListGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "PriceListGuidDynamicDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PriceListGuidDynamicDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/PriceListGuidDynamicDto"
          }
        },
        "additionalProperties": false
      },
      "PriceListGuidDynamicDtoPagedResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PriceListGuidDynamicDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PriceListGuidDynamicDtoPagedResultDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/PriceListGuidDynamicDtoPagedResultDto"
          }
        },
        "additionalProperties": false
      },
      "PriceListPagedResultDtoGraphQLDataResult": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DynamicDto_PriceListFullProxy"
            }
          }
        },
        "additionalProperties": false,
        "description": "NOTE: shape of the response depends on the `properties` argument"
      },
      "PriceListPagedResultDtoGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/PriceListPagedResultDtoGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "PriceListProductPriceGraphQLDataResult": {
        "type": "object",
        "properties": {
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "priceList": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "product": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "PriceListProductPriceGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/PriceListProductPriceGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "PriceListProductPriceGuidDynamicDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PriceListProductPriceGuidDynamicDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/PriceListProductPriceGuidDynamicDto"
          }
        },
        "additionalProperties": false
      },
      "PriceListProductPriceGuidDynamicDtoPagedResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PriceListProductPriceGuidDynamicDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PriceListProductPriceGuidDynamicDtoPagedResultDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/PriceListProductPriceGuidDynamicDtoPagedResultDto"
          }
        },
        "additionalProperties": false
      },
      "PriceListProductPricePagedResultDtoGraphQLDataResult": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DynamicDto_PriceListProductPriceFullProxy"
            }
          }
        },
        "additionalProperties": false,
        "description": "NOTE: shape of the response depends on the `properties` argument"
      },
      "PriceListProductPricePagedResultDtoGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/PriceListProductPricePagedResultDtoGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "ProcessConfigurationDocumentTemplateDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "sortOrder": {
            "type": "integer",
            "format": "int64"
          },
          "processConfiguration": {
            "$ref": "#/components/schemas/GuidNullableEntityWithDisplayNameDto"
          }
        },
        "additionalProperties": false
      },
      "ProcessConfigurationDocumentTemplateDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/ProcessConfigurationDocumentTemplateDto"
          }
        },
        "additionalProperties": false
      },
      "ProcessConfigurationDocumentTemplateDtoPagedResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProcessConfigurationDocumentTemplateDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ProcessConfigurationDocumentTemplateDtoPagedResultDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/ProcessConfigurationDocumentTemplateDtoPagedResultDto"
          }
        },
        "additionalProperties": false
      },
      "ProcessConfigurationDocumentTemplateGraphQLDataResult": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "sortOrder": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "processConfiguration": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "emailTemplate": {
            "type": "string"
          },
          "documentTemplate": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "ProcessConfigurationDocumentTemplateGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/ProcessConfigurationDocumentTemplateGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "ProcessConfigurationDocumentTemplatePagedResultDtoGraphQLDataResult": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DynamicDto_ProcessConfigurationDocumentTemplateFullProxy"
            }
          }
        },
        "additionalProperties": false,
        "description": "NOTE: shape of the response depends on the `properties` argument"
      },
      "ProcessConfigurationDocumentTemplatePagedResultDtoGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/ProcessConfigurationDocumentTemplatePagedResultDtoGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "ProductGraphQLDataResult": {
        "type": "object",
        "properties": {
          "extSysLastSyncDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "extSysSource": {
            "type": "string"
          },
          "extSysFirstSyncDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "productCode": {
            "type": "string"
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "defaultTaxRate": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "extSysId": {
            "type": "string"
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "description": {
            "type": "string"
          },
          "extSysSyncStatus": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "productType": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "productSubType": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "extSysSyncError": {
            "type": "string"
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "defaultUnitOfMeasure": {
            "type": "string"
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "ProductGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/ProductGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "ProductGuidDynamicDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProductGuidDynamicDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/ProductGuidDynamicDto"
          }
        },
        "additionalProperties": false
      },
      "ProductGuidDynamicDtoPagedResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductGuidDynamicDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ProductGuidDynamicDtoPagedResultDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/ProductGuidDynamicDtoPagedResultDto"
          }
        },
        "additionalProperties": false
      },
      "ProductPagedResultDtoGraphQLDataResult": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DynamicDto_ProductFullProxy"
            }
          }
        },
        "additionalProperties": false,
        "description": "NOTE: shape of the response depends on the `properties` argument"
      },
      "ProductPagedResultDtoGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/ProductPagedResultDtoGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "ProgressReportGraphQLDataResult": {
        "type": "object",
        "properties": {
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "performanceReport": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "periodCovered": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "ProgressReportGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/ProgressReportGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "ProgressReportGuidDynamicDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProgressReportGuidDynamicDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/ProgressReportGuidDynamicDto"
          }
        },
        "additionalProperties": false
      },
      "ProgressReportGuidDynamicDtoPagedResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProgressReportGuidDynamicDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ProgressReportGuidDynamicDtoPagedResultDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/ProgressReportGuidDynamicDtoPagedResultDto"
          }
        },
        "additionalProperties": false
      },
      "ProgressReportPagedResultDtoGraphQLDataResult": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DynamicDto_ProgressReportFullProxy"
            }
          }
        },
        "additionalProperties": false,
        "description": "NOTE: shape of the response depends on the `properties` argument"
      },
      "ProgressReportPagedResultDtoGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/ProgressReportPagedResultDtoGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "PropertyMetadataDto": {
        "type": "object",
        "properties": {
          "isVisible": {
            "type": "boolean"
          },
          "required": {
            "type": "boolean"
          },
          "readonly": {
            "type": "boolean"
          },
          "minLength": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "maxLength": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "min": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "max": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "audited": {
            "type": "boolean",
            "description": "Equivalent to Audited attribute on the property"
          },
          "regExp": {
            "type": "string",
            "description": "Validation RegularExpression",
            "nullable": true
          },
          "validationMessage": {
            "type": "string",
            "description": "Validation message",
            "nullable": true
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "label": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "dataType": {
            "type": "string",
            "nullable": true
          },
          "dataFormat": {
            "type": "string",
            "nullable": true
          },
          "entityType": {
            "type": "string",
            "nullable": true
          },
          "referenceListName": {
            "type": "string",
            "nullable": true
          },
          "referenceListNamespace": {
            "type": "string",
            "nullable": true
          },
          "orderIndex": {
            "type": "integer",
            "format": "int32"
          },
          "groupName": {
            "type": "string",
            "nullable": true
          },
          "isFrameworkRelated": {
            "type": "boolean",
            "description": "If true, indicates that current property is a framework-related (e.g. Abp.Domain.Entities.ISoftDelete.IsDeleted, Abp.Domain.Entities.Auditing.IHasModificationTime.LastModificationTime)"
          },
          "properties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PropertyMetadataDto"
            },
            "description": "Child properties (applicable for complex objects)",
            "nullable": true
          },
          "itemsType": {
            "$ref": "#/components/schemas/PropertyMetadataDto"
          }
        },
        "additionalProperties": false
      },
      "PropertyMetadataDtoListAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PropertyMetadataDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PushNotifierDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Description",
            "nullable": true
          },
          "uid": {
            "type": "string",
            "description": "Unique identifier of the notifier",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Push notifier DTO"
      },
      "PushNotifierDtoListAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PushNotifierDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PushSettingsDto": {
        "type": "object",
        "properties": {
          "pushNotifier": {
            "type": "string",
            "description": "Selected push notifier",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents push settings"
      },
      "PushSettingsDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/PushSettingsDto"
          }
        },
        "additionalProperties": false
      },
      "QuestionAssignmentGraphQLDataResult": {
        "type": "object",
        "properties": {
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "answer": {
            "type": "string"
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "user": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "selectedQuestion": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "QuestionAssignmentGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/QuestionAssignmentGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "QuestionAssignmentPagedResultDtoGraphQLDataResult": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DynamicDto_QuestionAssignmentFullProxy"
            }
          }
        },
        "additionalProperties": false,
        "description": "NOTE: shape of the response depends on the `properties` argument"
      },
      "QuestionAssignmentPagedResultDtoGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/QuestionAssignmentPagedResultDtoGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "RAGThresholdsList": {
        "type": "object",
        "additionalProperties": false
      },
      "RefListAreaType": {
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6
        ],
        "type": "integer",
        "format": "int32"
      },
      "RefListPasswordResetMethods": {
        "enum": [
          2,
          4,
          8
        ],
        "type": "integer",
        "format": "int64"
      },
      "RefListPermissionedAccess": {
        "enum": [
          1,
          2,
          3,
          4,
          5
        ],
        "type": "integer",
        "format": "int32"
      },
      "RefListPriority": {
        "enum": [
          1,
          2,
          3,
          4
        ],
        "type": "integer",
        "format": "int64"
      },
      "RefListSupplierStatus": {
        "enum": [
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "ReferenceListDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "hardLinkToApplication": {
            "type": "boolean"
          },
          "namespace": {
            "type": "string",
            "nullable": true
          },
          "noSelectionValue": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Dto of the Shesha.Domain.ReferenceList"
      },
      "ReferenceListDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/ReferenceListDto"
          }
        },
        "additionalProperties": false
      },
      "ReferenceListDtoPagedResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReferenceListDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ReferenceListDtoPagedResultDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/ReferenceListDtoPagedResultDto"
          }
        },
        "additionalProperties": false
      },
      "ReferenceListGraphQLDataResult": {
        "type": "object",
        "properties": {
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "namespace": {
            "type": "string"
          },
          "noSelectionValue": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "description": {
            "type": "string"
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "hardLinkToApplication": {
            "type": "boolean",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "ReferenceListGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/ReferenceListGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "ReferenceListItemDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "item": {
            "type": "string",
            "nullable": true
          },
          "itemValue": {
            "type": "integer",
            "format": "int64"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "orderIndex": {
            "type": "integer",
            "format": "int64"
          },
          "referenceList": {
            "$ref": "#/components/schemas/GuidNullableEntityWithDisplayNameDto"
          }
        },
        "additionalProperties": false,
        "description": "Dto of the Shesha.Domain.ReferenceListItem"
      },
      "ReferenceListItemDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/ReferenceListItemDto"
          }
        },
        "additionalProperties": false
      },
      "ReferenceListItemDtoListAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReferenceListItemDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReferenceListItemDtoPagedResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReferenceListItemDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ReferenceListItemDtoPagedResultDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/ReferenceListItemDtoPagedResultDto"
          }
        },
        "additionalProperties": false
      },
      "ReferenceListItemGraphQLDataResult": {
        "type": "object",
        "properties": {
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "parent": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "orderIndex": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "referenceList": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "hardLinkToApplication": {
            "type": "boolean",
            "nullable": true
          },
          "description": {
            "type": "string"
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "item": {
            "type": "string"
          },
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "itemValue": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "ReferenceListItemGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/ReferenceListItemGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "ReferenceListItemPagedResultDtoGraphQLDataResult": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DynamicDto_ReferenceListItemFullProxy"
            }
          }
        },
        "additionalProperties": false,
        "description": "NOTE: shape of the response depends on the `properties` argument"
      },
      "ReferenceListItemPagedResultDtoGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/ReferenceListItemPagedResultDtoGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "ReferenceListItemValueDto": {
        "type": "object",
        "properties": {
          "item": {
            "type": "string",
            "nullable": true
          },
          "itemValue": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReferenceListPagedResultDtoGraphQLDataResult": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DynamicDto_ReferenceListFullProxy"
            }
          }
        },
        "additionalProperties": false,
        "description": "NOTE: shape of the response depends on the `properties` argument"
      },
      "ReferenceListPagedResultDtoGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/ReferenceListPagedResultDtoGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "ReflistInvoiceStatus": {
        "enum": [
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int64"
      },
      "RegisterInput": {
        "required": [
          "emailAddress",
          "name",
          "password",
          "surname",
          "userName"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string"
          },
          "surname": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string"
          },
          "userName": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string"
          },
          "emailAddress": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "format": "email"
          },
          "password": {
            "maxLength": 32,
            "minLength": 0,
            "type": "string"
          },
          "captchaResponse": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RegisterOutput": {
        "type": "object",
        "properties": {
          "canLogin": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "RegisterOutputAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/RegisterOutput"
          }
        },
        "additionalProperties": false
      },
      "ReportingReportDto": {
        "required": [
          "category",
          "connectionStringName"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "reportType": {
            "$ref": "#/components/schemas/ReferenceListItemValueDto"
          },
          "connectionStringName": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "displayName": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "description": {
            "maxLength": 512,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "category": {
            "$ref": "#/components/schemas/ReferenceListItemValueDto"
          },
          "orderIndex": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "visibilityRole": {
            "$ref": "#/components/schemas/GuidNullableEntityWithDisplayNameDto"
          },
          "cronExpression": {
            "type": "string",
            "nullable": true
          },
          "customFilterView": {
            "type": "string",
            "nullable": true
          },
          "reportState": {
            "type": "string",
            "nullable": true
          },
          "generatedFieldsList": {
            "type": "string",
            "nullable": true
          },
          "reportDefinitionXml": {
            "type": "string",
            "nullable": true
          },
          "showInReportsMenu": {
            "type": "boolean"
          },
          "useCustomParameters": {
            "type": "boolean"
          },
          "parameterFormPath": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReportingReportDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/ReportingReportDto"
          }
        },
        "additionalProperties": false
      },
      "ReportingReportDtoPagedResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReportingReportDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ReportingReportDtoPagedResultDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/ReportingReportDtoPagedResultDto"
          }
        },
        "additionalProperties": false
      },
      "ReportingReportGraphQLDataResult": {
        "type": "object",
        "properties": {
          "useCustomParameters": {
            "type": "boolean",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "customFilterView": {
            "type": "string"
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "reportDefinitionXml": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          },
          "parameterFormPath": {
            "type": "string"
          },
          "showInReportsMenu": {
            "type": "boolean",
            "nullable": true
          },
          "category": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "connectionStringName": {
            "type": "string"
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "description": {
            "type": "string"
          },
          "orderIndex": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "reportState": {
            "type": "string"
          },
          "visibilityRole": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "generatedFieldsList": {
            "type": "string"
          },
          "cronExpression": {
            "type": "string"
          },
          "reportType": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "ReportingReportGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/ReportingReportGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "ReportingReportPagedResultDtoGraphQLDataResult": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DynamicDto_ReportingReportFullProxy"
            }
          }
        },
        "additionalProperties": false,
        "description": "NOTE: shape of the response depends on the `properties` argument"
      },
      "ReportingReportPagedResultDtoGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/ReportingReportPagedResultDtoGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "ReportingReportParameterDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "reportingReport": {
            "$ref": "#/components/schemas/GuidNullableEntityWithDisplayNameDto"
          },
          "internalName": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/ReferenceListItemValueDto"
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "hideParameter": {
            "type": "boolean"
          },
          "parameterValue": {
            "type": "string",
            "nullable": true
          },
          "parameterOrderIndex": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "dataType": {
            "type": "string",
            "nullable": true
          },
          "entityTypeShortAlias": {
            "type": "string",
            "nullable": true
          },
          "referenceListName": {
            "type": "string",
            "nullable": true
          },
          "referenceListNamespace": {
            "type": "string",
            "nullable": true
          },
          "columnName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReportingReportParameterDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/ReportingReportParameterDto"
          }
        },
        "additionalProperties": false
      },
      "ReportingReportParameterDtoListAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReportingReportParameterDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReportingReportParameterDtoPagedResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReportingReportParameterDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ReportingReportParameterDtoPagedResultDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/ReportingReportParameterDtoPagedResultDto"
          }
        },
        "additionalProperties": false
      },
      "ReportingReportParameterGraphQLDataResult": {
        "type": "object",
        "properties": {
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "hideParameter": {
            "type": "boolean",
            "nullable": true
          },
          "entityTypeShortAlias": {
            "type": "string"
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "referenceListName": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "description": {
            "type": "string"
          },
          "parameterValue": {
            "type": "string"
          },
          "reportingReport": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "internalName": {
            "type": "string"
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "type": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "referenceListNamespace": {
            "type": "string"
          },
          "parameterOrderIndex": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "columnName": {
            "type": "string"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "ReportingReportParameterGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/ReportingReportParameterGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "ReportingReportParameterPagedResultDtoGraphQLDataResult": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DynamicDto_ReportingReportParameterFullProxy"
            }
          }
        },
        "additionalProperties": false,
        "description": "NOTE: shape of the response depends on the `properties` argument"
      },
      "ReportingReportParameterPagedResultDtoGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/ReportingReportParameterPagedResultDtoGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "ResendPinInput": {
        "required": [
          "operationId"
        ],
        "type": "object",
        "properties": {
          "operationId": {
            "type": "string",
            "description": "Unique runtime identifier of the operation",
            "format": "uuid"
          },
          "lifetime": {
            "type": "integer",
            "description": "Lifetime of the one time password in seconds",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ResetPasswordDto": {
        "required": [
          "newPassword",
          "userId"
        ],
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "newPassword": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ResetPasswordOptionDto": {
        "type": "object",
        "properties": {
          "method": {
            "$ref": "#/components/schemas/RefListPasswordResetMethods"
          },
          "prompt": {
            "type": "string",
            "nullable": true
          },
          "maskedIdentifier": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ResetPasswordOptionDtoListAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResetPasswordOptionDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ResetPasswordSendOtpResponse": {
        "type": "object",
        "properties": {
          "operationId": {
            "type": "string",
            "description": "Unique runtime identifier of the operation. Is used for resending",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "ResetPasswordSendOtpResponseAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/ResetPasswordSendOtpResponse"
          }
        },
        "additionalProperties": false
      },
      "ResetPasswordUsingTokenInput": {
        "required": [
          "newPassword",
          "token",
          "username"
        ],
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "newPassword": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ResetPasswordValidateCodeInput": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "username": {
            "type": "string",
            "nullable": true
          },
          "method": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "ResetPasswordVerifyOtpInput": {
        "required": [
          "mobileNo"
        ],
        "type": "object",
        "properties": {
          "operationId": {
            "type": "string",
            "description": "Unique runtime identifier of the operation. Is used for resending",
            "format": "uuid"
          },
          "pin": {
            "type": "string",
            "description": "Value of the One Time Pin",
            "nullable": true
          },
          "mobileNo": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ResetPasswordVerifyOtpResponse": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean",
            "description": "Indicates that the OTP matches to the sent one"
          },
          "errorMessage": {
            "type": "string",
            "description": "Error message",
            "nullable": true
          },
          "token": {
            "type": "string",
            "nullable": true
          },
          "username": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ResetPasswordVerifyOtpResponseAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/ResetPasswordVerifyOtpResponse"
          }
        },
        "additionalProperties": false
      },
      "RoleDto": {
        "required": [
          "displayName",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 32,
            "minLength": 0,
            "type": "string"
          },
          "displayName": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string"
          },
          "normalizedName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "maxLength": 5000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "grantedPermissions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RoleDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/RoleDto"
          }
        },
        "additionalProperties": false
      },
      "RoleDtoListResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoleDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RoleDtoListResultDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/RoleDtoListResultDto"
          }
        },
        "additionalProperties": false
      },
      "RoleDtoPagedResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoleDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "RoleDtoPagedResultDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/RoleDtoPagedResultDto"
          }
        },
        "additionalProperties": false
      },
      "RoleEditDto": {
        "required": [
          "displayName",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 32,
            "minLength": 0,
            "type": "string"
          },
          "displayName": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string"
          },
          "description": {
            "maxLength": 5000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "isStatic": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "RoleListDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "isStatic": {
            "type": "boolean"
          },
          "isDefault": {
            "type": "boolean"
          },
          "creationTime": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "RoleListDtoListResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoleListDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RoleListDtoListResultDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/RoleListDtoListResultDto"
          }
        },
        "additionalProperties": false
      },
      "SaveSelectionInput": {
        "required": [
          "id",
          "ownerId",
          "ownerType",
          "selection"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Owner entity Id",
            "format": "uuid"
          },
          "ownerType": {
            "type": "string",
            "description": "Owner entity type short alias"
          },
          "ownerId": {
            "type": "string",
            "description": "Check list id"
          },
          "selection": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CheckListItemSelectionDto"
            },
            "description": "User selection"
          }
        },
        "additionalProperties": false,
        "description": "Save check list selection input"
      },
      "ScheduledJobDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jobName": {
            "type": "string",
            "description": "Name of the scheduled job",
            "nullable": true
          },
          "jobNamespace": {
            "type": "string",
            "description": "Namespace",
            "nullable": true
          },
          "jobDescription": {
            "type": "string",
            "description": "Description of the job",
            "nullable": true
          },
          "jobStatus": {
            "$ref": "#/components/schemas/ReferenceListItemValueDto"
          },
          "startupMode": {
            "$ref": "#/components/schemas/ReferenceListItemValueDto"
          }
        },
        "additionalProperties": false
      },
      "ScheduledJobDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/ScheduledJobDto"
          }
        },
        "additionalProperties": false
      },
      "ScheduledJobDtoPagedResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScheduledJobDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ScheduledJobDtoPagedResultDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/ScheduledJobDtoPagedResultDto"
          }
        },
        "additionalProperties": false
      },
      "ScheduledJobExecutionDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "startedOn": {
            "type": "string",
            "description": "Datetime of the execution start",
            "format": "date-time",
            "nullable": true
          },
          "finishedOn": {
            "type": "string",
            "description": "Datetime of the execution finish",
            "format": "date-time",
            "nullable": true
          },
          "startedBy": {
            "$ref": "#/components/schemas/Int64NullableEntityWithDisplayNameDto"
          },
          "job": {
            "$ref": "#/components/schemas/GuidNullableEntityWithDisplayNameDto"
          },
          "trigger": {
            "$ref": "#/components/schemas/GuidNullableEntityWithDisplayNameDto"
          },
          "errorMessage": {
            "type": "string",
            "description": "Error message",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/ReferenceListItemValueDto"
          }
        },
        "additionalProperties": false
      },
      "ScheduledJobExecutionDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/ScheduledJobExecutionDto"
          }
        },
        "additionalProperties": false
      },
      "ScheduledJobExecutionDtoPagedResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScheduledJobExecutionDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ScheduledJobExecutionDtoPagedResultDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/ScheduledJobExecutionDtoPagedResultDto"
          }
        },
        "additionalProperties": false
      },
      "ScheduledJobExecutionGraphQLDataResult": {
        "type": "object",
        "properties": {
          "errorMessage": {
            "type": "string"
          },
          "job": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "finishedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "startedBy": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "parentExecution": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "startedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "trigger": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "logFilePath": {
            "type": "string"
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "ScheduledJobExecutionGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/ScheduledJobExecutionGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "ScheduledJobExecutionPagedResultDtoGraphQLDataResult": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DynamicDto_ScheduledJobExecutionFullProxy"
            }
          }
        },
        "additionalProperties": false,
        "description": "NOTE: shape of the response depends on the `properties` argument"
      },
      "ScheduledJobExecutionPagedResultDtoGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/ScheduledJobExecutionPagedResultDtoGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "ScheduledJobGraphQLDataResult": {
        "type": "object",
        "properties": {
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "jobName": {
            "type": "string"
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "jobDescription": {
            "type": "string"
          },
          "startupMode": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "jobNamespace": {
            "type": "string"
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "jobStatus": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "ScheduledJobGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/ScheduledJobGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "ScheduledJobPagedResultDtoGraphQLDataResult": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DynamicDto_ScheduledJobFullProxy"
            }
          }
        },
        "additionalProperties": false,
        "description": "NOTE: shape of the response depends on the `properties` argument"
      },
      "ScheduledJobPagedResultDtoGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/ScheduledJobPagedResultDtoGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "ScheduledJobTriggerDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "cronString": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "parametersJson": {
            "type": "string",
            "description": "Json string to pass parameters to a scheduled job in case want to reuse the same scheduled job but different input parameters",
            "nullable": true
          },
          "job": {
            "$ref": "#/components/schemas/GuidNullableEntityWithDisplayNameDto"
          },
          "status": {
            "$ref": "#/components/schemas/ReferenceListItemValueDto"
          }
        },
        "additionalProperties": false
      },
      "ScheduledJobTriggerDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/ScheduledJobTriggerDto"
          }
        },
        "additionalProperties": false
      },
      "ScheduledJobTriggerDtoPagedResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScheduledJobTriggerDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ScheduledJobTriggerDtoPagedResultDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/ScheduledJobTriggerDtoPagedResultDto"
          }
        },
        "additionalProperties": false
      },
      "ScheduledJobTriggerGraphQLDataResult": {
        "type": "object",
        "properties": {
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "job": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "parametersJson": {
            "type": "string"
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "cronString": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "ScheduledJobTriggerGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/ScheduledJobTriggerGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "ScheduledJobTriggerPagedResultDtoGraphQLDataResult": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DynamicDto_ScheduledJobTriggerFullProxy"
            }
          }
        },
        "additionalProperties": false,
        "description": "NOTE: shape of the response depends on the `properties` argument"
      },
      "ScheduledJobTriggerPagedResultDtoGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/ScheduledJobTriggerPagedResultDtoGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "SecurityQuestionDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "question": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SecurityQuestionDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/SecurityQuestionDto"
          }
        },
        "additionalProperties": false
      },
      "SecurityQuestionDtoListAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SecurityQuestionDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SecurityQuestionDtoPagedResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SecurityQuestionDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "SecurityQuestionDtoPagedResultDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/SecurityQuestionDtoPagedResultDto"
          }
        },
        "additionalProperties": false
      },
      "SecurityQuestionGraphQLDataResult": {
        "type": "object",
        "properties": {
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "question": {
            "type": "string"
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "SecurityQuestionGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/SecurityQuestionGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "SecurityQuestionPagedResultDtoGraphQLDataResult": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DynamicDto_SecurityQuestionFullProxy"
            }
          }
        },
        "additionalProperties": false,
        "description": "NOTE: shape of the response depends on the `properties` argument"
      },
      "SecurityQuestionPagedResultDtoGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/SecurityQuestionPagedResultDtoGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "SecurityQuestionPair": {
        "type": "object",
        "properties": {
          "questionId": {
            "type": "string",
            "description": "",
            "format": "uuid"
          },
          "submittedAnswer": {
            "type": "string",
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SecurityQuestionVerificationDto": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "submittedQuestions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SecurityQuestionPair"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SendPinDto": {
        "type": "object",
        "properties": {
          "operationId": {
            "type": "string",
            "description": "Unique runtime identifier of the operation. Is used for resending",
            "format": "uuid"
          },
          "sentTo": {
            "type": "string",
            "description": "Mobile number/email address (depending on the `send type`) to which the OTP has been sent. Is used when we send OTP to the user or another entity",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SendPinDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/SendPinDto"
          }
        },
        "additionalProperties": false
      },
      "SendPinInput": {
        "required": [
          "sendType"
        ],
        "type": "object",
        "properties": {
          "sendTo": {
            "type": "string",
            "description": "Mobile number/email address (depending on the `send type`) to which the OTP should be sent",
            "nullable": true
          },
          "sendType": {
            "$ref": "#/components/schemas/OtpSendType"
          },
          "recipientType": {
            "type": "string",
            "nullable": true
          },
          "recipientId": {
            "type": "string",
            "nullable": true
          },
          "lifetime": {
            "type": "integer",
            "description": "Lifetime of the one time password in seconds",
            "format": "int64",
            "nullable": true
          },
          "actionType": {
            "type": "string",
            "description": "Type of action (e.g. 'password restore'). May be used for audit purposes and template selection",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SendTestEmailDto": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "SendTestEmailDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/SendTestEmailDto"
          }
        },
        "additionalProperties": false
      },
      "SendTestEmailInput": {
        "required": [
          "body",
          "subject",
          "to"
        ],
        "type": "object",
        "properties": {
          "to": {
            "type": "string"
          },
          "subject": {
            "type": "string"
          },
          "body": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "SentItemDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "entityId": {
            "type": "string",
            "format": "uuid"
          },
          "entityTypeShortAlias": {
            "type": "string",
            "nullable": true
          },
          "subType": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "processConfigurationId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "priority": {
            "$ref": "#/components/schemas/RefListPriority"
          },
          "processName": {
            "type": "string",
            "nullable": true
          },
          "fullNumber": {
            "type": "string",
            "nullable": true
          },
          "heading": {
            "type": "string",
            "nullable": true
          },
          "checkpointDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dueDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "completedOn": {
            "type": "string",
            "format": "date-time"
          },
          "initiator": {
            "type": "string",
            "nullable": true
          },
          "actionText": {
            "type": "string",
            "nullable": true
          },
          "jsonProgress": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SentItemsResponse": {
        "type": "object",
        "properties": {
          "paging": {
            "$ref": "#/components/schemas/PagingModel"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SentItemDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SentItemsResponseAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/SentItemsResponse"
          }
        },
        "additionalProperties": false
      },
      "SequenceGraphQLDataResult": {
        "type": "object",
        "properties": {
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastIssuedNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "seriesName": {
            "type": "string"
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "sequenceName": {
            "type": "string"
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "lastIssuedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "SequenceGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/SequenceGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "SequenceGuidDynamicDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SequenceGuidDynamicDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/SequenceGuidDynamicDto"
          }
        },
        "additionalProperties": false
      },
      "SequenceGuidDynamicDtoPagedResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SequenceGuidDynamicDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "SequenceGuidDynamicDtoPagedResultDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/SequenceGuidDynamicDtoPagedResultDto"
          }
        },
        "additionalProperties": false
      },
      "SequencePagedResultDtoGraphQLDataResult": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DynamicDto_SequenceFullProxy"
            }
          }
        },
        "additionalProperties": false,
        "description": "NOTE: shape of the response depends on the `properties` argument"
      },
      "SequencePagedResultDtoGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/SequencePagedResultDtoGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "ServiceGraphQLDataResult": {
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "comments": {
            "type": "string"
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "serviceCategory": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "serviceName": {
            "type": "string"
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "description": {
            "type": "string"
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "ServiceGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/ServiceGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "ServiceGuidDynamicDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ServiceGuidDynamicDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/ServiceGuidDynamicDto"
          }
        },
        "additionalProperties": false
      },
      "ServiceGuidDynamicDtoPagedResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceGuidDynamicDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ServiceGuidDynamicDtoPagedResultDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/ServiceGuidDynamicDtoPagedResultDto"
          }
        },
        "additionalProperties": false
      },
      "ServicePagedResultDtoGraphQLDataResult": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DynamicDto_ServiceFullProxy"
            }
          }
        },
        "additionalProperties": false,
        "description": "NOTE: shape of the response depends on the `properties` argument"
      },
      "ServicePagedResultDtoGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/ServicePagedResultDtoGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "ShaRoleAppointedPersonDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "roleId": {
            "type": "string",
            "format": "uuid"
          },
          "person": {
            "$ref": "#/components/schemas/GuidNullableEntityWithDisplayNameDto"
          },
          "regions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GuidEntityWithDisplayNameDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ShaRoleAppointedPersonDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/ShaRoleAppointedPersonDto"
          }
        },
        "additionalProperties": false
      },
      "ShaRoleAppointedPersonDtoPagedResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShaRoleAppointedPersonDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ShaRoleAppointedPersonDtoPagedResultDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/ShaRoleAppointedPersonDtoPagedResultDto"
          }
        },
        "additionalProperties": false
      },
      "ShaRoleAppointedPersonGraphQLDataResult": {
        "type": "object",
        "properties": {
          "role": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "person": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "ShaRoleAppointedPersonGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/ShaRoleAppointedPersonGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "ShaRoleAppointedPersonPagedResultDtoGraphQLDataResult": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DynamicDto_ShaRoleAppointedPersonFullProxy"
            }
          }
        },
        "additionalProperties": false,
        "description": "NOTE: shape of the response depends on the `properties` argument"
      },
      "ShaRoleAppointedPersonPagedResultDtoGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/ShaRoleAppointedPersonPagedResultDtoGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "ShaRoleAppointedPostGraphQLDataResult": {
        "type": "object",
        "properties": {
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "role": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "organisationPost": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "ShaRoleAppointedPostGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/ShaRoleAppointedPostGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "ShaRoleAppointedPostGuidDynamicDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ShaRoleAppointedPostGuidDynamicDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/ShaRoleAppointedPostGuidDynamicDto"
          }
        },
        "additionalProperties": false
      },
      "ShaRoleAppointedPostGuidDynamicDtoPagedResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShaRoleAppointedPostGuidDynamicDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ShaRoleAppointedPostGuidDynamicDtoPagedResultDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/ShaRoleAppointedPostGuidDynamicDtoPagedResultDto"
          }
        },
        "additionalProperties": false
      },
      "ShaRoleAppointedPostLevelGraphQLDataResult": {
        "type": "object",
        "properties": {
          "organisationPostLevel": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "role": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "ShaRoleAppointedPostLevelGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/ShaRoleAppointedPostLevelGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "ShaRoleAppointedPostLevelGuidDynamicDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ShaRoleAppointedPostLevelGuidDynamicDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/ShaRoleAppointedPostLevelGuidDynamicDto"
          }
        },
        "additionalProperties": false
      },
      "ShaRoleAppointedPostLevelGuidDynamicDtoPagedResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShaRoleAppointedPostLevelGuidDynamicDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ShaRoleAppointedPostLevelGuidDynamicDtoPagedResultDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/ShaRoleAppointedPostLevelGuidDynamicDtoPagedResultDto"
          }
        },
        "additionalProperties": false
      },
      "ShaRoleAppointedPostLevelPagedResultDtoGraphQLDataResult": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DynamicDto_ShaRoleAppointedPostLevelFullProxy"
            }
          }
        },
        "additionalProperties": false,
        "description": "NOTE: shape of the response depends on the `properties` argument"
      },
      "ShaRoleAppointedPostLevelPagedResultDtoGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/ShaRoleAppointedPostLevelPagedResultDtoGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "ShaRoleAppointedPostPagedResultDtoGraphQLDataResult": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DynamicDto_ShaRoleAppointedPostFullProxy"
            }
          }
        },
        "additionalProperties": false,
        "description": "NOTE: shape of the response depends on the `properties` argument"
      },
      "ShaRoleAppointedPostPagedResultDtoGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/ShaRoleAppointedPostPagedResultDtoGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "ShaRoleDto": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string"
          },
          "nameSpace": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "description": {
            "maxLength": 2000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "isRegionSpecific": {
            "type": "boolean"
          },
          "canAssignToMultiple": {
            "type": "boolean"
          },
          "canAssignToPerson": {
            "type": "boolean"
          },
          "canAssignToRole": {
            "type": "boolean"
          },
          "canAssignToOrganisationRoleLevel": {
            "type": "boolean"
          },
          "canAssignToUnit": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ShaRoleDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/ShaRoleDto"
          }
        },
        "additionalProperties": false
      },
      "ShaRoleDtoPagedResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShaRoleDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ShaRoleDtoPagedResultDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/ShaRoleDtoPagedResultDto"
          }
        },
        "additionalProperties": false
      },
      "ShaRoleGraphQLDataResult": {
        "type": "object",
        "properties": {
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "canAssignToMultiple": {
            "type": "boolean",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isProcessConfigurationSpecific": {
            "type": "boolean",
            "nullable": true
          },
          "canAssignToPerson": {
            "type": "boolean",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "canAssignToRole": {
            "type": "boolean",
            "nullable": true
          },
          "canAssignToOrganisationRoleLevel": {
            "type": "boolean",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "nameSpace": {
            "type": "string"
          },
          "hardLinkToApplication": {
            "type": "boolean",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "sortIndex": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isRegionSpecific": {
            "type": "boolean",
            "nullable": true
          },
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "canAssignToUnit": {
            "type": "boolean",
            "nullable": true
          },
          "description": {
            "type": "string"
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "ShaRoleGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/ShaRoleGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "ShaRolePagedResultDtoGraphQLDataResult": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DynamicDto_ShaRoleFullProxy"
            }
          }
        },
        "additionalProperties": false,
        "description": "NOTE: shape of the response depends on the `properties` argument"
      },
      "ShaRolePagedResultDtoGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/ShaRolePagedResultDtoGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "ShaUserLoginAttemptDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "ShaUserLoginAttemptDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/ShaUserLoginAttemptDto"
          }
        },
        "additionalProperties": false
      },
      "ShaUserLoginAttemptDtoPagedResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShaUserLoginAttemptDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ShaUserLoginAttemptDtoPagedResultDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/ShaUserLoginAttemptDtoPagedResultDto"
          }
        },
        "additionalProperties": false
      },
      "ShaUserLoginAttemptGraphQLDataResult": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "clientIpAddress": {
            "type": "string"
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "loginAttemptNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "deviceName": {
            "type": "string"
          },
          "result": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tenancyName": {
            "type": "string"
          },
          "userNameOrEmailAddress": {
            "type": "string"
          },
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "browserInfo": {
            "type": "string"
          },
          "imei": {
            "type": "string"
          },
          "clientName": {
            "type": "string"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "ShaUserLoginAttemptGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/ShaUserLoginAttemptGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "ShaUserLoginAttemptPagedResultDtoGraphQLDataResult": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DynamicDto_ShaUserLoginAttemptFullProxy"
            }
          }
        },
        "additionalProperties": false,
        "description": "NOTE: shape of the response depends on the `properties` argument"
      },
      "ShaUserLoginAttemptPagedResultDtoGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/ShaUserLoginAttemptPagedResultDtoGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "SmsGatewayDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Description",
            "nullable": true
          },
          "uid": {
            "type": "string",
            "description": "Unique identifier of the Sms Gateway",
            "nullable": true
          },
          "alias": {
            "type": "string",
            "description": "Sms gateway alias. Can be used as a friendly identifier of the gateway",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "SMS Gateway DTO"
      },
      "SmsGatewayDtoListAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SmsGatewayDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SmsSettingsDto": {
        "type": "object",
        "properties": {
          "gateway": {
            "type": "string",
            "description": "Selected sms gateway",
            "nullable": true
          },
          "redirectAllMessagesTo": {
            "type": "string",
            "description": "If specified, all sms messages will be redirected to this number. Is used for testing purposes",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents sms settings"
      },
      "SmsSettingsDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/SmsSettingsDto"
          }
        },
        "additionalProperties": false
      },
      "SmsSettingsV2Dto": {
        "type": "object",
        "properties": {
          "gateway": {
            "type": "string",
            "description": "Selected sms gateway alias",
            "nullable": true
          },
          "redirectAllMessagesTo": {
            "type": "string",
            "description": "If specified, all sms messages will be redirected to this number. Is used for testing purposes",
            "nullable": true
          },
          "gateways": {
            "type": "object",
            "additionalProperties": {
              "nullable": true
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents sms settings"
      },
      "SmsSettingsV2DtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/SmsSettingsV2Dto"
          }
        },
        "additionalProperties": false
      },
      "SmtpSettingsDto": {
        "type": "object",
        "properties": {
          "host": {
            "type": "string",
            "description": "SMTP Host name/IP.",
            "nullable": true
          },
          "port": {
            "type": "integer",
            "description": "SMTP Port.",
            "format": "int32"
          },
          "userName": {
            "type": "string",
            "description": "User name to login to SMTP server.",
            "nullable": true
          },
          "password": {
            "type": "string",
            "description": "Password to login to SMTP server.",
            "nullable": true
          },
          "domain": {
            "type": "string",
            "description": "Domain name to login to SMTP server.",
            "nullable": true
          },
          "enableSsl": {
            "type": "boolean",
            "description": "Is SSL enabled?"
          },
          "useDefaultCredentials": {
            "type": "boolean",
            "description": "Use default credentials?"
          },
          "defaultFromAddress": {
            "type": "string",
            "description": "Default from address.",
            "nullable": true
          },
          "defaultFromDisplayName": {
            "type": "string",
            "description": "Default display name.",
            "nullable": true
          },
          "supportSmtpRelay": {
            "type": "boolean",
            "description": "If true, indicate that SMTP relay service will be used where it's needed (e.g. if the application needs to notify one person about the action that was performed by another person then real person's email address will be used for the \"from\" address, otherwise \"Site Email\" will be used)"
          },
          "redirectAllMessagesTo": {
            "type": "string",
            "description": "If not null or empty the all outgoing emails will be sent to this email address, is used for testing",
            "nullable": true
          },
          "emailsEnabled": {
            "type": "boolean",
            "description": "If true, all emails will be disabled. Is used only for testing"
          }
        },
        "additionalProperties": false
      },
      "SmtpSettingsDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/SmtpSettingsDto"
          }
        },
        "additionalProperties": false
      },
      "StatementGraphQLDataResult": {
        "type": "object",
        "properties": {
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "current": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "ninetyDays": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "thirtyDays": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "overNinetyDays": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "statementFile": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "sixtyDays": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "account": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "statementDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "StatementGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/StatementGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "StatementGuidDynamicDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StatementGuidDynamicDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/StatementGuidDynamicDto"
          }
        },
        "additionalProperties": false
      },
      "StatementGuidDynamicDtoPagedResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StatementGuidDynamicDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "StatementGuidDynamicDtoPagedResultDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/StatementGuidDynamicDtoPagedResultDto"
          }
        },
        "additionalProperties": false
      },
      "StatementPagedResultDtoGraphQLDataResult": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DynamicDto_StatementFullProxy"
            }
          }
        },
        "additionalProperties": false,
        "description": "NOTE: shape of the response depends on the `properties` argument"
      },
      "StatementPagedResultDtoGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/StatementPagedResultDtoGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "StoredFileDto": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "fileCategory": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "size": {
            "type": "integer",
            "format": "int64"
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StoredFileDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/StoredFileDto"
          }
        },
        "additionalProperties": false
      },
      "StoredFileDtoListAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StoredFileDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StoredFileVersionInfoDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "dateUploaded": {
            "type": "string",
            "description": "Date of the upload",
            "format": "date-time",
            "nullable": true
          },
          "size": {
            "type": "number",
            "description": "File size",
            "format": "float",
            "nullable": true
          },
          "uploadedBy": {
            "type": "string",
            "description": "User uploaded this version",
            "nullable": true
          },
          "fileName": {
            "type": "string",
            "description": "File name",
            "nullable": true
          },
          "versionNo": {
            "type": "integer",
            "description": "Version number",
            "format": "int32"
          },
          "url": {
            "type": "string",
            "description": "Url for version downloading",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Stored File version info"
      },
      "StoredFileVersionInfoDtoListAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StoredFileVersionInfoDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Stream": {
        "type": "object",
        "properties": {
          "canRead": {
            "type": "boolean",
            "readOnly": true
          },
          "canWrite": {
            "type": "boolean",
            "readOnly": true
          },
          "canSeek": {
            "type": "boolean",
            "readOnly": true
          },
          "canTimeout": {
            "type": "boolean",
            "readOnly": true
          },
          "length": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "position": {
            "type": "integer",
            "format": "int64"
          },
          "readTimeout": {
            "type": "integer",
            "format": "int32"
          },
          "writeTimeout": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "StringAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StringListAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SupplierDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "addressLine1": {
            "type": "string",
            "nullable": true
          },
          "addressLine2": {
            "type": "string",
            "nullable": true
          },
          "suburb": {
            "type": "string",
            "nullable": true
          },
          "town": {
            "type": "string",
            "nullable": true
          },
          "poBox": {
            "type": "string",
            "nullable": true
          },
          "supplierNo": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "tellNo": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/RefListSupplierStatus"
          }
        },
        "additionalProperties": false
      },
      "SupplierDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/SupplierDto"
          }
        },
        "additionalProperties": false
      },
      "SupplierDtoPagedResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SupplierDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "SupplierDtoPagedResultDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/SupplierDtoPagedResultDto"
          }
        },
        "additionalProperties": false
      },
      "SupplierGraphQLDataResult": {
        "type": "object",
        "properties": {
          "organisationType": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "freeTextAddress": {
            "type": "string"
          },
          "extSysSyncStatus": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "supplierNo": {
            "type": "string"
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "primaryContact": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "contactEmail": {
            "type": "string"
          },
          "shortAlias": {
            "type": "string"
          },
          "extSysFirstSyncDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "supplierStatus": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "extSysSyncError": {
            "type": "string"
          },
          "contactMobileNo": {
            "type": "string"
          },
          "extSysLastSyncDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "parent": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "extSysId": {
            "type": "string"
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "extSysSource": {
            "type": "string"
          },
          "companyRegistrationNo": {
            "type": "string"
          },
          "vatRegistrationNo": {
            "type": "string"
          },
          "primaryAddress": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "SupplierGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/SupplierGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "SupplierPagedResultDtoGraphQLDataResult": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DynamicDto_SupplierFullProxy"
            }
          }
        },
        "additionalProperties": false,
        "description": "NOTE: shape of the response depends on the `properties` argument"
      },
      "SupplierPagedResultDtoGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/SupplierPagedResultDtoGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "SupplierPriceGraphQLDataResult": {
        "type": "object",
        "properties": {
          "extSysId": {
            "type": "string"
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "supplier": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "extSysFirstSyncDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "extSysSyncStatus": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "product": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "price": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "extSysSyncError": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "extSysSource": {
            "type": "string"
          },
          "extSysLastSyncDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "contract": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "SupplierPriceGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/SupplierPriceGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "SupplierPriceGuidDynamicDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SupplierPriceGuidDynamicDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/SupplierPriceGuidDynamicDto"
          }
        },
        "additionalProperties": false
      },
      "SupplierPriceGuidDynamicDtoPagedResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SupplierPriceGuidDynamicDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "SupplierPriceGuidDynamicDtoPagedResultDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/SupplierPriceGuidDynamicDtoPagedResultDto"
          }
        },
        "additionalProperties": false
      },
      "SupplierPricePagedResultDtoGraphQLDataResult": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DynamicDto_SupplierPriceFullProxy"
            }
          }
        },
        "additionalProperties": false,
        "description": "NOTE: shape of the response depends on the `properties` argument"
      },
      "SupplierPricePagedResultDtoGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/SupplierPricePagedResultDtoGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "TaxRateGraphQLDataResult": {
        "type": "object",
        "properties": {
          "extSysLastSyncDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "extSysSyncError": {
            "type": "string"
          },
          "rate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "extSysSyncStatus": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "extSysSource": {
            "type": "string"
          },
          "extSysFirstSyncDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "extSysId": {
            "type": "string"
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "description": {
            "type": "string"
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "TaxRateGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/TaxRateGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "TaxRateGuidDynamicDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TaxRateGuidDynamicDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/TaxRateGuidDynamicDto"
          }
        },
        "additionalProperties": false
      },
      "TaxRateGuidDynamicDtoPagedResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxRateGuidDynamicDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "TaxRateGuidDynamicDtoPagedResultDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/TaxRateGuidDynamicDtoPagedResultDto"
          }
        },
        "additionalProperties": false
      },
      "TaxRatePagedResultDtoGraphQLDataResult": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DynamicDto_TaxRateFullProxy"
            }
          }
        },
        "additionalProperties": false,
        "description": "NOTE: shape of the response depends on the `properties` argument"
      },
      "TaxRatePagedResultDtoGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/TaxRatePagedResultDtoGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "TenantAvailabilityState": {
        "enum": [
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "TenantDto": {
        "required": [
          "name",
          "tenancyName"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "tenancyName": {
            "maxLength": 64,
            "minLength": 0,
            "pattern": "^[a-zA-Z][a-zA-Z0-9_-]{1,}$",
            "type": "string"
          },
          "name": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "TenantDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/TenantDto"
          }
        },
        "additionalProperties": false
      },
      "TenantDtoPagedResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TenantDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "TenantDtoPagedResultDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/TenantDtoPagedResultDto"
          }
        },
        "additionalProperties": false
      },
      "TenantLoginInfoDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "tenancyName": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UnitOfMeasureGraphQLDataResult": {
        "type": "object",
        "properties": {
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "displayComponent": {
            "type": "string"
          },
          "unitPrefix": {
            "type": "string"
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "editComponent": {
            "type": "string"
          },
          "displayFormatString": {
            "type": "string"
          },
          "unitSuffix": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "UnitOfMeasureGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/UnitOfMeasureGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "UnitOfMeasureGuidDynamicDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "jObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UnitOfMeasureGuidDynamicDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/UnitOfMeasureGuidDynamicDto"
          }
        },
        "additionalProperties": false
      },
      "UnitOfMeasureGuidDynamicDtoPagedResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UnitOfMeasureGuidDynamicDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UnitOfMeasureGuidDynamicDtoPagedResultDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/UnitOfMeasureGuidDynamicDtoPagedResultDto"
          }
        },
        "additionalProperties": false
      },
      "UnitOfMeasurePagedResultDtoGraphQLDataResult": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DynamicDto_UnitOfMeasureFullProxy"
            }
          }
        },
        "additionalProperties": false,
        "description": "NOTE: shape of the response depends on the `properties` argument"
      },
      "UnitOfMeasurePagedResultDtoGraphQLDataResultAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/UnitOfMeasurePagedResultDtoGraphQLDataResult"
          }
        },
        "additionalProperties": false
      },
      "UpdateChildItemsInput": {
        "type": "object",
        "properties": {
          "checkListId": {
            "type": "string",
            "description": "Id of the check list",
            "format": "uuid"
          },
          "parentId": {
            "type": "string",
            "description": "Id of the new parent item",
            "format": "uuid",
            "nullable": true
          },
          "childIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "List of child item ids",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Move check list item input"
      },
      "UpdateConfigurationStatusInput": {
        "required": [
          "filter",
          "status"
        ],
        "type": "object",
        "properties": {
          "filter": {
            "type": "string",
            "description": "Filter string in JsonLogic format"
          },
          "status": {
            "$ref": "#/components/schemas/ConfigurationItemVersionStatus"
          }
        },
        "additionalProperties": false,
        "description": "Update configuration status import"
      },
      "UpdateFormConfigurationDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "label": {
            "type": "string",
            "description": "Label",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Description",
            "nullable": true
          },
          "markup": {
            "type": "string",
            "description": "Markup in JSON format",
            "nullable": true
          },
          "modelType": {
            "type": "string",
            "description": "Type of the form model",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Form configuration DTO"
      },
      "UpdateNoteDto": {
        "required": [
          "noteText"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "category": {
            "type": "integer",
            "description": "Category of the note. Is used to split notes into groups",
            "format": "int32",
            "nullable": true
          },
          "priority": {
            "type": "integer",
            "description": "Note importance (priority)",
            "format": "int32",
            "nullable": true
          },
          "parentId": {
            "type": "string",
            "description": "Id of the parent note",
            "format": "uuid",
            "nullable": true
          },
          "noteText": {
            "type": "string",
            "description": "Text"
          }
        },
        "additionalProperties": false
      },
      "UserAnswerDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "user": {
            "$ref": "#/components/schemas/Int64EntityWithDisplayNameDto"
          },
          "selectedQuestion": {
            "$ref": "#/components/schemas/GuidEntityWithDisplayNameDto"
          },
          "answer": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserAnswerDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/UserAnswerDto"
          }
        },
        "additionalProperties": false
      },
      "UserAnswerDtoPagedResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserAnswerDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UserAnswerDtoPagedResultDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/UserAnswerDtoPagedResultDto"
          }
        },
        "additionalProperties": false
      },
      "UserDto": {
        "required": [
          "emailAddress",
          "name",
          "surname",
          "userName"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "userName": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string"
          },
          "name": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string"
          },
          "surname": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string"
          },
          "emailAddress": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "format": "email"
          },
          "isActive": {
            "type": "boolean"
          },
          "fullName": {
            "type": "string",
            "nullable": true
          },
          "lastLoginTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time"
          },
          "roleNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/UserDto"
          }
        },
        "additionalProperties": false
      },
      "UserDtoPagedResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UserDtoPagedResultDtoAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/UserDtoPagedResultDto"
          }
        },
        "additionalProperties": false
      },
      "UserLoginInfoDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "accountFound": {
            "type": "boolean"
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "fullName": {
            "type": "string",
            "nullable": true
          },
          "picture": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "mobileNumber": {
            "type": "string",
            "nullable": true
          },
          "hasRegistered": {
            "type": "boolean"
          },
          "loginProvider": {
            "type": "string",
            "nullable": true
          },
          "homeUrl": {
            "type": "string",
            "nullable": true
          },
          "isSelfServiceUser": {
            "type": "boolean"
          },
          "grantedPermissions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ValidationErrorInfo": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "members": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "VerifyPinInput": {
        "type": "object",
        "properties": {
          "operationId": {
            "type": "string",
            "description": "Unique runtime identifier of the operation. Is used for resending",
            "format": "uuid"
          },
          "pin": {
            "type": "string",
            "description": "Value of the One Time Pin",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Verify OTP input"
      },
      "VerifyPinResponse": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean",
            "description": "Indicates that the OTP matches to the sent one"
          },
          "errorMessage": {
            "type": "string",
            "description": "Error message",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "VerifyPinResponseAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/VerifyPinResponse"
          }
        },
        "additionalProperties": false
      },
      "WorkflowExecutionLogResponse": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkflowExecutionLogResponseItem"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WorkflowExecutionLogResponseAjaxResponse": {
        "type": "object",
        "properties": {
          "targetUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "unAuthorizedRequest": {
            "type": "boolean"
          },
          "__abp": {
            "type": "boolean",
            "readOnly": true
          },
          "result": {
            "$ref": "#/components/schemas/WorkflowExecutionLogResponse"
          }
        },
        "additionalProperties": false
      },
      "WorkflowExecutionLogResponseItem": {
        "type": "object",
        "properties": {
          "actionText": {
            "type": "string",
            "nullable": true
          },
          "completedBy": {
            "type": "string",
            "nullable": true
          },
          "completedOn": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "apiKey",
        "description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "tags": [
    {
      "name": "PushSettings",
      "description": "Push settings application service"
    },
    {
      "name": "Person",
      "description": "Person Application Service"
    },
    {
      "name": "OtpAuditItem",
      "description": "One-time-pin audit service"
    },
    {
      "name": "Notification",
      "description": "Notification application service"
    },
    {
      "name": "NotificationMessage",
      "description": "Notifications audit service"
    },
    {
      "name": "Maintenance",
      "description": "Maintenance service"
    },
    {
      "name": "EmailSender",
      "description": "Email Sender Application Service"
    },
    {
      "name": "ModelConfigurations",
      "description": "Model Configurations application service"
    },
    {
      "name": "NHibernate",
      "description": "NHibernate application service"
    },
    {
      "name": "ScheduledJob",
      "description": "Scheduled Job application service"
    },
    {
      "name": "ScheduledJobTrigger",
      "description": "Scheduled Job Trigger application service"
    },
    {
      "name": "CheckList",
      "description": "Check list application service"
    },
    {
      "name": "CheckListItem",
      "description": ""
    },
    {
      "name": "ConfigurableComponent",
      "description": "Configurable components application service"
    },
    {
      "name": "Form",
      "description": "Configurable Forms application service"
    }
  ]
}