/* Generated by restful-react */

import React from 'react';
import { Get, GetProps, useGet, UseGetProps, Mutate, MutateProps, useMutate, UseMutateProps } from 'restful-react';
export const SPEC_VERSION = 'v1';
export interface CreatePersonAccountDto {
  userName: string;
  password: string;
  passwordConfirmation: string;
  firstName: string;
  lastName: string;
  mobileNumber?: string | null;
  emailAddress: string;
  typeOfAccount?: ReferenceListItemValueDto;
}

export interface DynamicDtoPersonGuid {
  id?: string;
  /**
   * List of form fields. Is used for partial updates. Contains a list of entity properties that should be updated. Leave empty to update all available entity fields
   */
  _formFields?: string[];
  customShortName?: string;
  preferredContactMethod?: number | null;
  deleterUserId?: number | null;
  middleName?: string;
  mobileNumber2?: string;
  deletionTime?: string | null;
  firstName?: string;
  creatorUserId?: number | null;
  dateOfBirth?: string | null;
  emailAddress1?: string;
  mobileNumber1?: string;
  initials?: string;
  address?: string | null;
  photo?: string | null;
  lastName?: string;
  lastModificationTime?: string | null;
  homeNumber?: string;
  workAddress?: string | null;
  gender?: number | null;
  emailAddress2?: string;
  user?: number | null;
  lastModifierUserId?: number | null;
  fullName?: string;
  identityNumber?: string;
  title?: number | null;
  tenantId?: number | null;
  creationTime?: string | null;
  isDeleted?: boolean | null;
  _meta?: MetaDto;
}

export type JToken = JToken[];

export interface MetaDto {
  className?: string | null;
}

export interface PersonIdRoleNamesDto {
  id?: string;
  roles?: string[] | null;
}

export interface ProxyDynamicDtoPersonGuid {
  id?: string;
  jObject?: {
    [key: string]: JToken;
  } | null;
  customShortName?: string | null;
  preferredContactMethod?: number | null;
  deleterUserId?: number | null;
  middleName?: string | null;
  mobileNumber2?: string | null;
  deletionTime?: string | null;
  firstName?: string | null;
  creatorUserId?: number | null;
  dateOfBirth?: string | null;
  emailAddress1?: string | null;
  mobileNumber1?: string | null;
  initials?: string | null;
  address?: string | null;
  photo?: string | null;
  lastName?: string | null;
  lastModificationTime?: string | null;
  homeNumber?: string | null;
  workAddress?: string | null;
  gender?: number | null;
  emailAddress2?: string | null;
  user?: number | null;
  lastModifierUserId?: number | null;
  fullName?: string | null;
  identityNumber?: string | null;
  title?: number | null;
  tenantId?: number | null;
  creationTime?: string | null;
  isDeleted?: boolean | null;
  _meta?: MetaDto;
}

export interface ReferenceListItemValueDto {
  item?: string | null;
  itemValue?: number | null;
}

export type PersonsCreateWithUserAccountProps = Omit<
  MutateProps<DynamicDtoPersonGuid, unknown, void, CreatePersonAccountDto, void>,
  'path' | 'verb'
>;

export const PersonsCreateWithUserAccount = (props: PersonsCreateWithUserAccountProps) => (
  <Mutate<DynamicDtoPersonGuid, unknown, void, CreatePersonAccountDto, void>
    verb="POST"
    path={`/api/v1/Epm/Persons/CreateWithUserAccount`}
    {...props}
  />
);

export type UsePersonsCreateWithUserAccountProps = Omit<
  UseMutateProps<DynamicDtoPersonGuid, unknown, void, CreatePersonAccountDto, void>,
  'path' | 'verb'
>;

export const usePersonsCreateWithUserAccount = (props: UsePersonsCreateWithUserAccountProps) =>
  useMutate<DynamicDtoPersonGuid, unknown, void, CreatePersonAccountDto, void>(
    'POST',
    `/api/v1/Epm/Persons/CreateWithUserAccount`,
    props
  );

export type PersonsGetCurrentLoggedInPersonIdRoleNamesProps = Omit<
  GetProps<PersonIdRoleNamesDto, unknown, void, void>,
  'path'
>;

export const PersonsGetCurrentLoggedInPersonIdRoleNames = (props: PersonsGetCurrentLoggedInPersonIdRoleNamesProps) => (
  <Get<PersonIdRoleNamesDto, unknown, void, void>
    path={`/api/v1/Epm/Persons/GetCurrentLoggedInPersonIdRoleNames`}
    {...props}
  />
);

export type UsePersonsGetCurrentLoggedInPersonIdRoleNamesProps = Omit<
  UseGetProps<PersonIdRoleNamesDto, unknown, void, void>,
  'path'
>;

export const usePersonsGetCurrentLoggedInPersonIdRoleNames = (
  props: UsePersonsGetCurrentLoggedInPersonIdRoleNamesProps
) =>
  useGet<PersonIdRoleNamesDto, unknown, void, void>(`/api/v1/Epm/Persons/GetCurrentLoggedInPersonIdRoleNames`, props);
